ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Blink.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy7EncoderD2Ev,"axG",%progbits,_ZN5daisy7EncoderD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy7EncoderD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy7EncoderD2Ev:
  27              	.LVL0:
  28              	.LFB1651:
  29              		.file 1 "../../libDaisy/src/hid/encoder.h"
   1:../../libDaisy/src/hid/encoder.h **** #pragma once
   2:../../libDaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libDaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy/src/hid/encoder.h **** 
   8:../../libDaisy/src/hid/encoder.h **** namespace daisy
   9:../../libDaisy/src/hid/encoder.h **** {
  10:../../libDaisy/src/hid/encoder.h **** /** 
  11:../../libDaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy/src/hid/encoder.h **** */
  17:../../libDaisy/src/hid/encoder.h **** class Encoder
  18:../../libDaisy/src/hid/encoder.h **** {
  19:../../libDaisy/src/hid/encoder.h ****   public:
  20:../../libDaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
  30              		.loc 1 21 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB357:
  36              	.LBI357:
  37              		.file 2 "../../libDaisy/src/hid/switch.h"
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 2


   1:../../libDaisy/src/hid/switch.h **** #pragma once
   2:../../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy/src/hid/switch.h **** 
   8:../../libDaisy/src/hid/switch.h **** namespace daisy
   9:../../libDaisy/src/hid/switch.h **** {
  10:../../libDaisy/src/hid/switch.h **** /** 
  11:../../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy/src/hid/switch.h **** */
  17:../../libDaisy/src/hid/switch.h **** class Switch
  18:../../libDaisy/src/hid/switch.h **** {
  19:../../libDaisy/src/hid/switch.h ****   public:
  20:../../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy/src/hid/switch.h ****     enum Type
  22:../../libDaisy/src/hid/switch.h ****     {
  23:../../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy/src/hid/switch.h ****     };
  26:../../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy/src/hid/switch.h ****     enum Polarity
  28:../../libDaisy/src/hid/switch.h ****     {
  29:../../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy/src/hid/switch.h ****     };
  32:../../libDaisy/src/hid/switch.h **** 
  33:../../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy/src/hid/switch.h ****     enum Pull
  35:../../libDaisy/src/hid/switch.h ****     {
  36:../../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy/src/hid/switch.h ****     };
  40:../../libDaisy/src/hid/switch.h **** 
  41:../../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
  38              		.loc 2 42 5 view .LVU1
  39              		.loc 2 42 5 is_stmt 0 view .LVU2
  40              	.LBE357:
  41              		.loc 1 21 17 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE1651:
  46              		.weak	_ZN5daisy7EncoderD1Ev
  47              		.thumb_set _ZN5daisy7EncoderD1Ev,_ZN5daisy7EncoderD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy9DaisySeedD2Ev
  52              		.syntax unified
  53              		.thumb
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 3


  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy9DaisySeedD2Ev:
  58              	.LVL1:
  59              	.LFB2555:
  60              		.file 3 "../../libDaisy/src/daisy_seed.h"
   1:../../libDaisy/src/daisy_seed.h **** #pragma once
   2:../../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy/src/daisy_seed.h **** 
   5:../../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy/src/daisy_seed.h **** 
   7:../../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy/src/daisy_seed.h **** 
  10:../../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../../libDaisy/src/daisy_seed.h **** {
  12:../../libDaisy/src/daisy_seed.h **** /**
  13:../../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy/src/daisy_seed.h **** 
  16:../../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy/src/daisy_seed.h **** */
  18:../../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy/src/daisy_seed.h **** {
  20:../../libDaisy/src/daisy_seed.h ****   public:
  21:../../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  61              		.loc 3 22 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB358:
  67              	.LBI358:
  68              		.file 4 "../../libDaisy/src/sys/system.h"
   1:../../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy/src/sys/system.h **** 
   4:../../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy/src/sys/system.h **** 
   6:../../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy/src/sys/system.h **** 
   9:../../libDaisy/src/sys/system.h **** namespace daisy
  10:../../libDaisy/src/sys/system.h **** {
  11:../../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy/src/sys/system.h ****  **
  15:../../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy/src/sys/system.h ****  */
  18:../../libDaisy/src/sys/system.h **** class System
  19:../../libDaisy/src/sys/system.h **** {
  20:../../libDaisy/src/sys/system.h ****   public:
  21:../../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 4


  22:../../libDaisy/src/sys/system.h ****     struct Config
  23:../../libDaisy/src/sys/system.h ****     {
  24:../../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy/src/sys/system.h ****         {
  27:../../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy/src/sys/system.h ****         };
  30:../../libDaisy/src/sys/system.h **** 
  31:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy/src/sys/system.h ****          ** */
  35:../../libDaisy/src/sys/system.h ****         void Defaults()
  36:../../libDaisy/src/sys/system.h ****         {
  37:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy/src/sys/system.h ****         }
  42:../../libDaisy/src/sys/system.h **** 
  43:../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy/src/sys/system.h ****          ** */
  47:../../libDaisy/src/sys/system.h ****         void Boost()
  48:../../libDaisy/src/sys/system.h ****         {
  49:../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy/src/sys/system.h ****         }
  54:../../libDaisy/src/sys/system.h **** 
  55:../../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy/src/sys/system.h ****     };
  60:../../libDaisy/src/sys/system.h **** 
  61:../../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy/src/sys/system.h ****     {
  64:../../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy/src/sys/system.h ****         SDRAM,
  71:../../libDaisy/src/sys/system.h ****         QSPI,
  72:../../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy/src/sys/system.h ****     };
  74:../../libDaisy/src/sys/system.h **** 
  75:../../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../../libDaisy/src/sys/system.h ****     {
  78:../../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 5


  79:../../libDaisy/src/sys/system.h ****         {
  80:../../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy/src/sys/system.h ****         } status;
  85:../../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy/src/sys/system.h ****         {
  88:../../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy/src/sys/system.h ****             LAST
  93:../../libDaisy/src/sys/system.h ****         } version;
  94:../../libDaisy/src/sys/system.h ****     };
  95:../../libDaisy/src/sys/system.h **** 
  96:../../libDaisy/src/sys/system.h ****     System() {}
  97:../../libDaisy/src/sys/system.h ****     ~System() {}
  69              		.loc 4 97 5 view .LVU5
  70              		.loc 4 97 5 is_stmt 0 view .LVU6
  71              	.LBE358:
  72              	.LBB359:
  73              	.LBI359:
  74              		.file 5 "../../libDaisy/src/hid/usb.h"
   1:../../libDaisy/src/hid/usb.h **** #pragma once
   2:../../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy/src/hid/usb.h **** 
   7:../../libDaisy/src/hid/usb.h **** namespace daisy
   8:../../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy/src/hid/usb.h ****     @{
  10:../../libDaisy/src/hid/usb.h **** */
  11:../../libDaisy/src/hid/usb.h **** 
  12:../../libDaisy/src/hid/usb.h **** {
  13:../../libDaisy/src/hid/usb.h **** /** 
  14:../../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../../libDaisy/src/hid/usb.h **** */
  18:../../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../../libDaisy/src/hid/usb.h **** {
  20:../../libDaisy/src/hid/usb.h ****   public:
  21:../../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy/src/hid/usb.h ****     enum class Result
  23:../../libDaisy/src/hid/usb.h ****     {
  24:../../libDaisy/src/hid/usb.h ****         OK,
  25:../../libDaisy/src/hid/usb.h ****         ERR,
  26:../../libDaisy/src/hid/usb.h ****     };
  27:../../libDaisy/src/hid/usb.h **** 
  28:../../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy/src/hid/usb.h ****     {
  31:../../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 6


  33:../../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy/src/hid/usb.h ****     };
  35:../../libDaisy/src/hid/usb.h **** 
  36:../../libDaisy/src/hid/usb.h **** 
  37:../../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy/src/hid/usb.h **** 
  40:../../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy/src/hid/usb.h **** 
  42:../../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  75              		.loc 5 42 5 is_stmt 1 view .LVU7
  76              		.loc 5 42 5 is_stmt 0 view .LVU8
  77              	.LBE359:
  78              	.LBB360:
  79              	.LBI360:
  80              		.file 6 "../../libDaisy/src/per/adc.h"
   1:../../libDaisy/src/per/adc.h **** #pragma once
   2:../../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy/src/per/adc.h **** 
   9:../../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy/src/per/adc.h **** 
  11:../../libDaisy/src/per/adc.h **** namespace daisy
  12:../../libDaisy/src/per/adc.h **** {
  13:../../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy/src/per/adc.h ****     @{
  15:../../libDaisy/src/per/adc.h **** */
  16:../../libDaisy/src/per/adc.h **** 
  17:../../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy/src/per/adc.h **** */
  21:../../libDaisy/src/per/adc.h **** 
  22:../../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy/src/per/adc.h ****  *           one channel.
  26:../../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy/src/per/adc.h **** */
  31:../../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy/src/per/adc.h **** {
  33:../../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../../libDaisy/src/per/adc.h ****     {
  36:../../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy/src/per/adc.h ****     };
  41:../../libDaisy/src/per/adc.h **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 7


  42:../../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy/src/per/adc.h ****     {
  45:../../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy/src/per/adc.h ****     };
  54:../../libDaisy/src/per/adc.h **** 
  55:../../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy/src/per/adc.h ****      */
  59:../../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy/src/per/adc.h **** 
  61:../../libDaisy/src/per/adc.h ****     /** 
  62:../../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy/src/per/adc.h ****     */
  74:../../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy/src/per/adc.h **** 
  81:../../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy/src/per/adc.h **** };
  86:../../libDaisy/src/per/adc.h **** 
  87:../../libDaisy/src/per/adc.h **** /**
  88:../../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy/src/per/adc.h **** */
  90:../../libDaisy/src/per/adc.h **** class AdcHandle
  91:../../libDaisy/src/per/adc.h **** {
  92:../../libDaisy/src/per/adc.h ****   public:
  93:../../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../../libDaisy/src/per/adc.h ****     {
  96:../../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 8


  99:../../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy/src/per/adc.h ****     };
 108:../../libDaisy/src/per/adc.h **** 
 109:../../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  81              		.loc 6 110 5 is_stmt 1 view .LVU9
  82              		.loc 6 110 5 is_stmt 0 view .LVU10
  83              	.LBE360:
  84              	.LBB361:
  85              	.LBI361:
  86              		.file 7 "../../libDaisy/src/hid/audio.h"
   1:../../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy/src/hid/audio.h **** 
   4:../../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy/src/hid/audio.h **** 
   6:../../libDaisy/src/hid/audio.h **** namespace daisy
   7:../../libDaisy/src/hid/audio.h **** {
   8:../../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy/src/hid/audio.h ****  */
  22:../../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../../libDaisy/src/hid/audio.h **** {
  24:../../libDaisy/src/hid/audio.h ****   public:
  25:../../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy/src/hid/audio.h ****     struct Config
  28:../../libDaisy/src/hid/audio.h ****     {
  29:../../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy/src/hid/audio.h **** 
  32:../../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy/src/hid/audio.h **** 
  35:../../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy/src/hid/audio.h ****         float postgain;
  37:../../libDaisy/src/hid/audio.h **** 
  38:../../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 9


  40:../../libDaisy/src/hid/audio.h ****          */
  41:../../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy/src/hid/audio.h **** 
  43:../../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy/src/hid/audio.h ****         Config()
  45:../../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy/src/hid/audio.h ****         {
  50:../../libDaisy/src/hid/audio.h ****         }
  51:../../libDaisy/src/hid/audio.h ****     };
  52:../../libDaisy/src/hid/audio.h **** 
  53:../../libDaisy/src/hid/audio.h ****     enum class Result
  54:../../libDaisy/src/hid/audio.h ****     {
  55:../../libDaisy/src/hid/audio.h ****         OK,
  56:../../libDaisy/src/hid/audio.h ****         ERR,
  57:../../libDaisy/src/hid/audio.h ****     };
  58:../../libDaisy/src/hid/audio.h **** 
  59:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy/src/hid/audio.h ****      */
  63:../../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy/src/hid/audio.h **** 
  65:../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy/src/hid/audio.h ****      */
  68:../../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy/src/hid/audio.h **** 
  70:../../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy/src/hid/audio.h ****      */
  73:../../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy/src/hid/audio.h **** 
  77:../../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy/src/hid/audio.h ****     */
  81:../../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy/src/hid/audio.h **** 
  83:../../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy/src/hid/audio.h ****     */
  86:../../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy/src/hid/audio.h **** 
  88:../../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy/src/hid/audio.h ****      */
  91:../../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy/src/hid/audio.h **** 
  95:../../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 10


  87              		.loc 7 96 5 is_stmt 1 view .LVU11
  88              		.loc 7 96 5 is_stmt 0 view .LVU12
  89              	.LBE361:
  90              		.loc 3 22 19 view .LVU13
  91 0000 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE2555:
  95              		.weak	_ZN5daisy9DaisySeedD1Ev
  96              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  97 0002 00BF     		.section	.text._ZN7daisysp6ChorusD2Ev,"axG",%progbits,_ZN7daisysp6ChorusD5Ev,comdat
  98              		.align	1
  99              		.p2align 2,,3
 100              		.weak	_ZN7daisysp6ChorusD2Ev
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv5-d16
 106              	_ZN7daisysp6ChorusD2Ev:
 107              	.LVL2:
 108              	.LFB4374:
 109              		.file 8 "../../DaisySP/Source/Effects/chorus.h"
   1:../../DaisySP/Source/Effects/chorus.h **** /*
   2:../../DaisySP/Source/Effects/chorus.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP/Source/Effects/chorus.h **** 
   4:../../DaisySP/Source/Effects/chorus.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP/Source/Effects/chorus.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP/Source/Effects/chorus.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP/Source/Effects/chorus.h **** */
   8:../../DaisySP/Source/Effects/chorus.h **** 
   9:../../DaisySP/Source/Effects/chorus.h **** #pragma once
  10:../../DaisySP/Source/Effects/chorus.h **** #ifndef DSY_CHORUS_H
  11:../../DaisySP/Source/Effects/chorus.h **** #define DSY_CHORUS_H
  12:../../DaisySP/Source/Effects/chorus.h **** #ifdef __cplusplus
  13:../../DaisySP/Source/Effects/chorus.h **** 
  14:../../DaisySP/Source/Effects/chorus.h **** #include <stdint.h>
  15:../../DaisySP/Source/Effects/chorus.h **** #include "Utility/delayline.h"
  16:../../DaisySP/Source/Effects/chorus.h **** 
  17:../../DaisySP/Source/Effects/chorus.h **** /** @file chorus.h */
  18:../../DaisySP/Source/Effects/chorus.h **** 
  19:../../DaisySP/Source/Effects/chorus.h **** namespace daisysp
  20:../../DaisySP/Source/Effects/chorus.h **** {
  21:../../DaisySP/Source/Effects/chorus.h **** /**  
  22:../../DaisySP/Source/Effects/chorus.h ****     @brief Single Chorus engine. Used in Chorus.
  23:../../DaisySP/Source/Effects/chorus.h ****     @author Ben Sergentanis
  24:../../DaisySP/Source/Effects/chorus.h **** */
  25:../../DaisySP/Source/Effects/chorus.h **** class ChorusEngine
  26:../../DaisySP/Source/Effects/chorus.h **** {
  27:../../DaisySP/Source/Effects/chorus.h ****   public:
  28:../../DaisySP/Source/Effects/chorus.h ****     ChorusEngine() {}
  29:../../DaisySP/Source/Effects/chorus.h ****     ~ChorusEngine() {}
  30:../../DaisySP/Source/Effects/chorus.h **** 
  31:../../DaisySP/Source/Effects/chorus.h ****     /** Initialize the module
  32:../../DaisySP/Source/Effects/chorus.h ****         \param sample_rate Audio engine sample rate.
  33:../../DaisySP/Source/Effects/chorus.h ****     */
  34:../../DaisySP/Source/Effects/chorus.h ****     void Init(float sample_rate);
  35:../../DaisySP/Source/Effects/chorus.h **** 
  36:../../DaisySP/Source/Effects/chorus.h ****     /** Get the next sample
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 11


  37:../../DaisySP/Source/Effects/chorus.h ****         \param in Sample to process
  38:../../DaisySP/Source/Effects/chorus.h ****     */
  39:../../DaisySP/Source/Effects/chorus.h ****     float Process(float in);
  40:../../DaisySP/Source/Effects/chorus.h **** 
  41:../../DaisySP/Source/Effects/chorus.h ****     /** How much to modulate the delay by.
  42:../../DaisySP/Source/Effects/chorus.h ****         \param depth Works 0-1.
  43:../../DaisySP/Source/Effects/chorus.h ****     */
  44:../../DaisySP/Source/Effects/chorus.h ****     void SetLfoDepth(float depth);
  45:../../DaisySP/Source/Effects/chorus.h **** 
  46:../../DaisySP/Source/Effects/chorus.h ****     /** Set lfo frequency.
  47:../../DaisySP/Source/Effects/chorus.h ****         \param freq Frequency in Hz
  48:../../DaisySP/Source/Effects/chorus.h ****     */
  49:../../DaisySP/Source/Effects/chorus.h ****     void SetLfoFreq(float freq);
  50:../../DaisySP/Source/Effects/chorus.h **** 
  51:../../DaisySP/Source/Effects/chorus.h ****     /** Set the internal delay rate. 
  52:../../DaisySP/Source/Effects/chorus.h ****         \param delay Tuned for 0-1. Maps to .1 to 50 ms.
  53:../../DaisySP/Source/Effects/chorus.h ****     */
  54:../../DaisySP/Source/Effects/chorus.h ****     void SetDelay(float delay);
  55:../../DaisySP/Source/Effects/chorus.h **** 
  56:../../DaisySP/Source/Effects/chorus.h ****     /** Set the delay time in ms.
  57:../../DaisySP/Source/Effects/chorus.h ****         \param ms Delay time in ms, 0 to 50 ms.
  58:../../DaisySP/Source/Effects/chorus.h ****     */
  59:../../DaisySP/Source/Effects/chorus.h ****     void SetDelayMs(float ms);
  60:../../DaisySP/Source/Effects/chorus.h **** 
  61:../../DaisySP/Source/Effects/chorus.h ****     /** Set the feedback amount.
  62:../../DaisySP/Source/Effects/chorus.h ****         \param feedback Amount from 0-1.
  63:../../DaisySP/Source/Effects/chorus.h ****     */
  64:../../DaisySP/Source/Effects/chorus.h ****     void SetFeedback(float feedback);
  65:../../DaisySP/Source/Effects/chorus.h **** 
  66:../../DaisySP/Source/Effects/chorus.h ****   private:
  67:../../DaisySP/Source/Effects/chorus.h ****     float                    sample_rate_;
  68:../../DaisySP/Source/Effects/chorus.h ****     static constexpr int32_t kDelayLength
  69:../../DaisySP/Source/Effects/chorus.h ****         = 2400; // 50 ms at 48kHz = .05 * 48000
  70:../../DaisySP/Source/Effects/chorus.h **** 
  71:../../DaisySP/Source/Effects/chorus.h ****     //triangle lfos
  72:../../DaisySP/Source/Effects/chorus.h ****     float lfo_phase_;
  73:../../DaisySP/Source/Effects/chorus.h ****     float lfo_freq_;
  74:../../DaisySP/Source/Effects/chorus.h ****     float lfo_amp_;
  75:../../DaisySP/Source/Effects/chorus.h **** 
  76:../../DaisySP/Source/Effects/chorus.h ****     float feedback_;
  77:../../DaisySP/Source/Effects/chorus.h **** 
  78:../../DaisySP/Source/Effects/chorus.h ****     float delay_;
  79:../../DaisySP/Source/Effects/chorus.h **** 
  80:../../DaisySP/Source/Effects/chorus.h ****     DelayLine<float, kDelayLength> del_;
  81:../../DaisySP/Source/Effects/chorus.h **** 
  82:../../DaisySP/Source/Effects/chorus.h ****     float ProcessLfo();
  83:../../DaisySP/Source/Effects/chorus.h **** };
  84:../../DaisySP/Source/Effects/chorus.h **** 
  85:../../DaisySP/Source/Effects/chorus.h **** //wraps up all of the chorus engines
  86:../../DaisySP/Source/Effects/chorus.h **** /**  
  87:../../DaisySP/Source/Effects/chorus.h ****     @brief Chorus Effect.
  88:../../DaisySP/Source/Effects/chorus.h ****     @author Ben Sergentanis
  89:../../DaisySP/Source/Effects/chorus.h ****     @date Jan 2021
  90:../../DaisySP/Source/Effects/chorus.h ****     Based on https://www.izotope.com/en/learn/understanding-chorus-flangers-and-phasers-in-audio-pr
  91:../../DaisySP/Source/Effects/chorus.h ****     and https://www.researchgate.net/publication/236629475_Implementing_Professional_Audio_Effects_
  92:../../DaisySP/Source/Effects/chorus.h **** */
  93:../../DaisySP/Source/Effects/chorus.h **** class Chorus
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 12


  94:../../DaisySP/Source/Effects/chorus.h **** {
  95:../../DaisySP/Source/Effects/chorus.h ****   public:
  96:../../DaisySP/Source/Effects/chorus.h ****     Chorus() {}
  97:../../DaisySP/Source/Effects/chorus.h ****     ~Chorus() {}
 110              		.loc 8 97 5 is_stmt 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              		.loc 8 97 16 is_stmt 0 view .LVU15
 116 0000 7047     		bx	lr
 117              		.cfi_endproc
 118              	.LFE4374:
 120              		.weak	_ZN7daisysp6ChorusD1Ev
 121              		.thumb_set _ZN7daisysp6ChorusD1Ev,_ZN7daisysp6ChorusD2Ev
 122              		.section	.text._ZN7daisysp6PhaserD2Ev,"axG",%progbits,_ZN7daisysp6PhaserD5Ev,comdat
 123              		.align	1
 124              		.p2align 2,,3
 125              		.weak	_ZN7daisysp6PhaserD2Ev
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv5-d16
 131              	_ZN7daisysp6PhaserD2Ev:
 132              	.LVL3:
 133              	.LFB4420:
 134              		.file 9 "../../DaisySP/Source/Effects/phaser.h"
   1:../../DaisySP/Source/Effects/phaser.h **** /*
   2:../../DaisySP/Source/Effects/phaser.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP/Source/Effects/phaser.h **** 
   4:../../DaisySP/Source/Effects/phaser.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP/Source/Effects/phaser.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP/Source/Effects/phaser.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP/Source/Effects/phaser.h **** */
   8:../../DaisySP/Source/Effects/phaser.h **** 
   9:../../DaisySP/Source/Effects/phaser.h **** #pragma once
  10:../../DaisySP/Source/Effects/phaser.h **** #ifndef DSY_PHASER_H
  11:../../DaisySP/Source/Effects/phaser.h **** #define DSY_PHASER_H
  12:../../DaisySP/Source/Effects/phaser.h **** #ifdef __cplusplus
  13:../../DaisySP/Source/Effects/phaser.h **** 
  14:../../DaisySP/Source/Effects/phaser.h **** #include <stdint.h>
  15:../../DaisySP/Source/Effects/phaser.h **** #include "Utility/delayline.h"
  16:../../DaisySP/Source/Effects/phaser.h **** 
  17:../../DaisySP/Source/Effects/phaser.h **** /** @file phaser.h */
  18:../../DaisySP/Source/Effects/phaser.h **** 
  19:../../DaisySP/Source/Effects/phaser.h **** namespace daisysp
  20:../../DaisySP/Source/Effects/phaser.h **** {
  21:../../DaisySP/Source/Effects/phaser.h **** /**  
  22:../../DaisySP/Source/Effects/phaser.h ****     @brief Single Phaser engine. Used in Phaser.
  23:../../DaisySP/Source/Effects/phaser.h ****     @author Ben Sergentanis
  24:../../DaisySP/Source/Effects/phaser.h **** */
  25:../../DaisySP/Source/Effects/phaser.h **** class PhaserEngine
  26:../../DaisySP/Source/Effects/phaser.h **** {
  27:../../DaisySP/Source/Effects/phaser.h ****   public:
  28:../../DaisySP/Source/Effects/phaser.h ****     PhaserEngine() {}
  29:../../DaisySP/Source/Effects/phaser.h ****     ~PhaserEngine() {}
  30:../../DaisySP/Source/Effects/phaser.h **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 13


  31:../../DaisySP/Source/Effects/phaser.h ****     /** Initialize the module
  32:../../DaisySP/Source/Effects/phaser.h ****         \param sample_rate Audio engine sample rate.
  33:../../DaisySP/Source/Effects/phaser.h ****     */
  34:../../DaisySP/Source/Effects/phaser.h ****     void Init(float sample_rate);
  35:../../DaisySP/Source/Effects/phaser.h **** 
  36:../../DaisySP/Source/Effects/phaser.h ****     /** Get the next sample
  37:../../DaisySP/Source/Effects/phaser.h ****         \param in Sample to process
  38:../../DaisySP/Source/Effects/phaser.h ****     */
  39:../../DaisySP/Source/Effects/phaser.h ****     float Process(float in);
  40:../../DaisySP/Source/Effects/phaser.h **** 
  41:../../DaisySP/Source/Effects/phaser.h ****     /** How much to modulate the allpass filter by.
  42:../../DaisySP/Source/Effects/phaser.h ****         \param depth Works 0-1.
  43:../../DaisySP/Source/Effects/phaser.h ****     */
  44:../../DaisySP/Source/Effects/phaser.h ****     void SetLfoDepth(float depth);
  45:../../DaisySP/Source/Effects/phaser.h **** 
  46:../../DaisySP/Source/Effects/phaser.h ****     /** Set lfo frequency.
  47:../../DaisySP/Source/Effects/phaser.h ****         \param lfo_freq Frequency in Hz
  48:../../DaisySP/Source/Effects/phaser.h ****     */
  49:../../DaisySP/Source/Effects/phaser.h ****     void SetLfoFreq(float lfo_freq);
  50:../../DaisySP/Source/Effects/phaser.h **** 
  51:../../DaisySP/Source/Effects/phaser.h ****     /** Set the allpass frequency
  52:../../DaisySP/Source/Effects/phaser.h ****         \param ap_freq Frequency in Hz.
  53:../../DaisySP/Source/Effects/phaser.h ****     */
  54:../../DaisySP/Source/Effects/phaser.h ****     void SetFreq(float ap_freq);
  55:../../DaisySP/Source/Effects/phaser.h **** 
  56:../../DaisySP/Source/Effects/phaser.h ****     /** Set the feedback amount.
  57:../../DaisySP/Source/Effects/phaser.h ****         \param feedback Amount from 0-1.
  58:../../DaisySP/Source/Effects/phaser.h ****     */
  59:../../DaisySP/Source/Effects/phaser.h ****     void SetFeedback(float feedback);
  60:../../DaisySP/Source/Effects/phaser.h **** 
  61:../../DaisySP/Source/Effects/phaser.h ****   private:
  62:../../DaisySP/Source/Effects/phaser.h ****     float                    sample_rate_;
  63:../../DaisySP/Source/Effects/phaser.h ****     static constexpr int32_t kDelayLength
  64:../../DaisySP/Source/Effects/phaser.h ****         = 2400; // 50 ms at 48kHz = .05 * 48000
  65:../../DaisySP/Source/Effects/phaser.h **** 
  66:../../DaisySP/Source/Effects/phaser.h ****     //triangle lfo
  67:../../DaisySP/Source/Effects/phaser.h ****     float lfo_phase_;
  68:../../DaisySP/Source/Effects/phaser.h ****     float lfo_freq_;
  69:../../DaisySP/Source/Effects/phaser.h ****     float lfo_amp_;
  70:../../DaisySP/Source/Effects/phaser.h **** 
  71:../../DaisySP/Source/Effects/phaser.h ****     float os_;
  72:../../DaisySP/Source/Effects/phaser.h **** 
  73:../../DaisySP/Source/Effects/phaser.h ****     float feedback_;
  74:../../DaisySP/Source/Effects/phaser.h ****     float ap_freq_;
  75:../../DaisySP/Source/Effects/phaser.h **** 
  76:../../DaisySP/Source/Effects/phaser.h ****     float deltime_;
  77:../../DaisySP/Source/Effects/phaser.h ****     float last_sample_;
  78:../../DaisySP/Source/Effects/phaser.h **** 
  79:../../DaisySP/Source/Effects/phaser.h ****     DelayLine<float, kDelayLength> del_;
  80:../../DaisySP/Source/Effects/phaser.h **** 
  81:../../DaisySP/Source/Effects/phaser.h ****     float ProcessLfo();
  82:../../DaisySP/Source/Effects/phaser.h **** };
  83:../../DaisySP/Source/Effects/phaser.h **** 
  84:../../DaisySP/Source/Effects/phaser.h **** //wraps up all of the phaser engines
  85:../../DaisySP/Source/Effects/phaser.h **** /**  
  86:../../DaisySP/Source/Effects/phaser.h ****     @brief Phaser Effect.
  87:../../DaisySP/Source/Effects/phaser.h ****     @author Ben Sergentanis
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 14


  88:../../DaisySP/Source/Effects/phaser.h ****     @date Jan 2021
  89:../../DaisySP/Source/Effects/phaser.h **** */
  90:../../DaisySP/Source/Effects/phaser.h **** class Phaser
  91:../../DaisySP/Source/Effects/phaser.h **** {
  92:../../DaisySP/Source/Effects/phaser.h ****   public:
  93:../../DaisySP/Source/Effects/phaser.h ****     Phaser() {}
  94:../../DaisySP/Source/Effects/phaser.h ****     ~Phaser() {}
 135              		.loc 9 94 5 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              		.loc 9 94 16 is_stmt 0 view .LVU17
 141 0000 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE4420:
 145              		.weak	_ZN7daisysp6PhaserD1Ev
 146              		.thumb_set _ZN7daisysp6PhaserD1Ev,_ZN7daisysp6PhaserD2Ev
 147              		.section	.text._ZN7daisysp7TremoloD2Ev,"axG",%progbits,_ZN7daisysp7TremoloD5Ev,comdat
 148              		.align	1
 149              		.p2align 2,,3
 150              		.weak	_ZN7daisysp7TremoloD2Ev
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv5-d16
 156              	_ZN7daisysp7TremoloD2Ev:
 157              	.LVL4:
 158              	.LFB4432:
 159              		.file 10 "../../DaisySP/Source/Effects/tremolo.h"
   1:../../DaisySP/Source/Effects/tremolo.h **** /*
   2:../../DaisySP/Source/Effects/tremolo.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP/Source/Effects/tremolo.h **** 
   4:../../DaisySP/Source/Effects/tremolo.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP/Source/Effects/tremolo.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP/Source/Effects/tremolo.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP/Source/Effects/tremolo.h **** */
   8:../../DaisySP/Source/Effects/tremolo.h **** 
   9:../../DaisySP/Source/Effects/tremolo.h **** #pragma once
  10:../../DaisySP/Source/Effects/tremolo.h **** #ifndef DSY_TREMOLO_H
  11:../../DaisySP/Source/Effects/tremolo.h **** #define DSY_TREMOLO_H
  12:../../DaisySP/Source/Effects/tremolo.h **** 
  13:../../DaisySP/Source/Effects/tremolo.h **** #include <stdint.h>
  14:../../DaisySP/Source/Effects/tremolo.h **** #ifdef __cplusplus
  15:../../DaisySP/Source/Effects/tremolo.h **** 
  16:../../DaisySP/Source/Effects/tremolo.h **** #include <math.h>
  17:../../DaisySP/Source/Effects/tremolo.h **** #include "Synthesis/oscillator.h"
  18:../../DaisySP/Source/Effects/tremolo.h **** 
  19:../../DaisySP/Source/Effects/tremolo.h **** /** @file tremolo.h */
  20:../../DaisySP/Source/Effects/tremolo.h **** 
  21:../../DaisySP/Source/Effects/tremolo.h **** namespace daisysp
  22:../../DaisySP/Source/Effects/tremolo.h **** {
  23:../../DaisySP/Source/Effects/tremolo.h **** /**  
  24:../../DaisySP/Source/Effects/tremolo.h ****     @brief Tremolo effect.
  25:../../DaisySP/Source/Effects/tremolo.h ****     @author Ben Sergentanis
  26:../../DaisySP/Source/Effects/tremolo.h ****     @date Jan 2021
  27:../../DaisySP/Source/Effects/tremolo.h ****     Based on https://christianfloisand.wordpress.com/2012/04/18/coding-some-tremolo/ \n
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 15


  28:../../DaisySP/Source/Effects/tremolo.h **** */
  29:../../DaisySP/Source/Effects/tremolo.h **** class Tremolo
  30:../../DaisySP/Source/Effects/tremolo.h **** {
  31:../../DaisySP/Source/Effects/tremolo.h ****   public:
  32:../../DaisySP/Source/Effects/tremolo.h ****     Tremolo() {}
  33:../../DaisySP/Source/Effects/tremolo.h ****     ~Tremolo() {}
 160              		.loc 10 33 5 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LBB362:
 166              	.LBI362:
 167              		.file 11 "../../DaisySP/Source/Synthesis/oscillator.h"
   1:../../DaisySP/Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP/Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP/Source/Synthesis/oscillator.h **** 
   4:../../DaisySP/Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP/Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP/Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP/Source/Synthesis/oscillator.h **** */
   8:../../DaisySP/Source/Synthesis/oscillator.h **** 
   9:../../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisySP/Source/Synthesis/oscillator.h **** 
  16:../../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP/Source/Synthesis/oscillator.h **** {
  18:../../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP/Source/Synthesis/oscillator.h **** */
  20:../../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP/Source/Synthesis/oscillator.h **** {
  22:../../DaisySP/Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 168              		.loc 11 24 5 view .LVU19
 169              		.loc 11 24 5 is_stmt 0 view .LVU20
 170              	.LBE362:
 171              		.loc 10 33 17 view .LVU21
 172 0000 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE4432:
 176              		.weak	_ZN7daisysp7TremoloD1Ev
 177              		.thumb_set _ZN7daisysp7TremoloD1Ev,_ZN7daisysp7TremoloD2Ev
 178 0002 00BF     		.section	.text._ZN7daisysp7FlangerD2Ev,"axG",%progbits,_ZN7daisysp7FlangerD5Ev,comdat
 179              		.align	1
 180              		.p2align 2,,3
 181              		.weak	_ZN7daisysp7FlangerD2Ev
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv5-d16
 187              	_ZN7daisysp7FlangerD2Ev:
 188              	.LVL5:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 16


 189              	.LFB5490:
 190              		.file 12 "../../DaisySP/Source/Effects/flanger.h"
   1:../../DaisySP/Source/Effects/flanger.h **** /*
   2:../../DaisySP/Source/Effects/flanger.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP/Source/Effects/flanger.h **** 
   4:../../DaisySP/Source/Effects/flanger.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP/Source/Effects/flanger.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP/Source/Effects/flanger.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP/Source/Effects/flanger.h **** */
   8:../../DaisySP/Source/Effects/flanger.h **** 
   9:../../DaisySP/Source/Effects/flanger.h **** #pragma once
  10:../../DaisySP/Source/Effects/flanger.h **** #ifndef DSY_FLANGER_H
  11:../../DaisySP/Source/Effects/flanger.h **** #define DSY_FLANGER_H
  12:../../DaisySP/Source/Effects/flanger.h **** #ifdef __cplusplus
  13:../../DaisySP/Source/Effects/flanger.h **** 
  14:../../DaisySP/Source/Effects/flanger.h **** #include <stdint.h>
  15:../../DaisySP/Source/Effects/flanger.h **** #include "Utility/delayline.h"
  16:../../DaisySP/Source/Effects/flanger.h **** 
  17:../../DaisySP/Source/Effects/flanger.h **** /** @file flanger.h */
  18:../../DaisySP/Source/Effects/flanger.h **** 
  19:../../DaisySP/Source/Effects/flanger.h **** namespace daisysp
  20:../../DaisySP/Source/Effects/flanger.h **** {
  21:../../DaisySP/Source/Effects/flanger.h **** /** @brief Flanging Audio Effect 
  22:../../DaisySP/Source/Effects/flanger.h ****  *
  23:../../DaisySP/Source/Effects/flanger.h ****  * Generates a modulating phase shifted copy of a signal, and recombines
  24:../../DaisySP/Source/Effects/flanger.h ****  * with the original to create a 'flanging' sound effect.
  25:../../DaisySP/Source/Effects/flanger.h ****  */
  26:../../DaisySP/Source/Effects/flanger.h **** class Flanger
 191              		.loc 12 26 7 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LBB363:
 197              	.LBI363:
 198              		.file 13 "../../DaisySP/Source/Utility/delayline.h"
   1:../../DaisySP/Source/Utility/delayline.h **** /*
   2:../../DaisySP/Source/Utility/delayline.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP/Source/Utility/delayline.h **** 
   4:../../DaisySP/Source/Utility/delayline.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP/Source/Utility/delayline.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP/Source/Utility/delayline.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP/Source/Utility/delayline.h **** */
   8:../../DaisySP/Source/Utility/delayline.h **** 
   9:../../DaisySP/Source/Utility/delayline.h **** #pragma once
  10:../../DaisySP/Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
  11:../../DaisySP/Source/Utility/delayline.h **** #define DSY_DELAY_H
  12:../../DaisySP/Source/Utility/delayline.h **** #include <stdlib.h>
  13:../../DaisySP/Source/Utility/delayline.h **** #include <stdint.h>
  14:../../DaisySP/Source/Utility/delayline.h **** namespace daisysp
  15:../../DaisySP/Source/Utility/delayline.h **** {
  16:../../DaisySP/Source/Utility/delayline.h **** /** Simple Delay line.
  17:../../DaisySP/Source/Utility/delayline.h **** November 2019
  18:../../DaisySP/Source/Utility/delayline.h **** 
  19:../../DaisySP/Source/Utility/delayline.h **** Converted to Template December 2019
  20:../../DaisySP/Source/Utility/delayline.h **** 
  21:../../DaisySP/Source/Utility/delayline.h **** declaration example: (1 second of floats)
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 17


  22:../../DaisySP/Source/Utility/delayline.h **** 
  23:../../DaisySP/Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  24:../../DaisySP/Source/Utility/delayline.h **** 
  25:../../DaisySP/Source/Utility/delayline.h **** By: shensley
  26:../../DaisySP/Source/Utility/delayline.h **** */
  27:../../DaisySP/Source/Utility/delayline.h **** template <typename T, size_t max_size>
  28:../../DaisySP/Source/Utility/delayline.h **** class DelayLine
  29:../../DaisySP/Source/Utility/delayline.h **** {
  30:../../DaisySP/Source/Utility/delayline.h ****   public:
  31:../../DaisySP/Source/Utility/delayline.h ****     DelayLine() {}
  32:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 199              		.loc 13 32 5 view .LVU23
 200              		.loc 13 32 5 is_stmt 0 view .LVU24
 201              	.LBE363:
 202              		.loc 12 26 7 view .LVU25
 203 0000 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE5490:
 207              		.weak	_ZN7daisysp7FlangerD1Ev
 208              		.thumb_set _ZN7daisysp7FlangerD1Ev,_ZN7daisysp7FlangerD2Ev
 209 0002 00BF     		.section	.text._ZN7daisysp9DelayLineIfLj96000EED2Ev,"axG",%progbits,_ZN7daisysp9DelayLineIfLj96000
 210              		.align	1
 211              		.p2align 2,,3
 212              		.weak	_ZN7daisysp9DelayLineIfLj96000EED2Ev
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv5-d16
 218              	_ZN7daisysp9DelayLineIfLj96000EED2Ev:
 219              	.LVL6:
 220              	.LFB5493:
 221              		.loc 13 32 5 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              		.loc 13 32 19 is_stmt 0 view .LVU27
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE5493:
 231              		.weak	_ZN7daisysp9DelayLineIfLj96000EED1Ev
 232              		.thumb_set _ZN7daisysp9DelayLineIfLj96000EED1Ev,_ZN7daisysp9DelayLineIfLj96000EED2Ev
 233 0002 00BF     		.section	.text._ZN7daisysp12LadderFilterC2Ev,"axG",%progbits,_ZN7daisysp12LadderFilterC5Ev,comdat
 234              		.align	1
 235              		.p2align 2,,3
 236              		.weak	_ZN7daisysp12LadderFilterC2Ev
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	_ZN7daisysp12LadderFilterC2Ev:
 243              	.LVL7:
 244              	.LFB4893:
 245              		.file 14 "../../DaisySP/Source/Filters/ladder.h"
   1:../../DaisySP/Source/Filters/ladder.h **** /* Ported from Audio Library for Teensy, Ladder Filter
   2:../../DaisySP/Source/Filters/ladder.h ****  * Copyright (c) 2021, Richard van Hoesel
   3:../../DaisySP/Source/Filters/ladder.h ****  * Copyright (c) 2024, Infrasonic Audio LLC
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 18


   4:../../DaisySP/Source/Filters/ladder.h ****  *
   5:../../DaisySP/Source/Filters/ladder.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../DaisySP/Source/Filters/ladder.h ****  * of this software and associated documentation files (the "Software"), to deal
   7:../../DaisySP/Source/Filters/ladder.h ****  * in the Software without restriction, including without limitation the rights
   8:../../DaisySP/Source/Filters/ladder.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../DaisySP/Source/Filters/ladder.h ****  * copies of the Software, and to permit persons to whom the Software is
  10:../../DaisySP/Source/Filters/ladder.h ****  * furnished to do so, subject to the following conditions:
  11:../../DaisySP/Source/Filters/ladder.h ****  *
  12:../../DaisySP/Source/Filters/ladder.h ****  * The above copyright notice, development funding notice, and this permission
  13:../../DaisySP/Source/Filters/ladder.h ****  * notice shall be included in all copies or substantial portions of the Software.
  14:../../DaisySP/Source/Filters/ladder.h ****  *
  15:../../DaisySP/Source/Filters/ladder.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../DaisySP/Source/Filters/ladder.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../DaisySP/Source/Filters/ladder.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../DaisySP/Source/Filters/ladder.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../DaisySP/Source/Filters/ladder.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../DaisySP/Source/Filters/ladder.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../DaisySP/Source/Filters/ladder.h ****  * THE SOFTWARE.
  22:../../DaisySP/Source/Filters/ladder.h ****  */
  23:../../DaisySP/Source/Filters/ladder.h **** 
  24:../../DaisySP/Source/Filters/ladder.h **** //-----------------------------------------------------------
  25:../../DaisySP/Source/Filters/ladder.h **** // Huovilainen New Moog (HNM) model as per CMJ jun 2006
  26:../../DaisySP/Source/Filters/ladder.h **** // Richard van Hoesel, v. 1.03, Feb. 14 2021
  27:../../DaisySP/Source/Filters/ladder.h **** // v1.7 (Infrasonic/Daisy) add configurable filter mode
  28:../../DaisySP/Source/Filters/ladder.h **** // v1.6 (Infrasonic/Daisy) removes polyphase FIR, uses 4x linear
  29:../../DaisySP/Source/Filters/ladder.h **** //      oversampling for performance reasons
  30:../../DaisySP/Source/Filters/ladder.h **** // v1.5 adds polyphase FIR or Linear interpolation
  31:../../DaisySP/Source/Filters/ladder.h **** // v1.4 FC extended to 18.7kHz, max res to 1.8, 4x oversampling,
  32:../../DaisySP/Source/Filters/ladder.h **** //      and a minor Q-tuning adjustment
  33:../../DaisySP/Source/Filters/ladder.h **** // v.1.03 adds oversampling, extended resonance,
  34:../../DaisySP/Source/Filters/ladder.h **** // and exposes parameters input_drive and passband_gain
  35:../../DaisySP/Source/Filters/ladder.h **** // v.1.02 now includes both cutoff and resonance "CV" modulation inputs
  36:../../DaisySP/Source/Filters/ladder.h **** // please retain this header if you use this code.
  37:../../DaisySP/Source/Filters/ladder.h **** //-----------------------------------------------------------
  38:../../DaisySP/Source/Filters/ladder.h **** 
  39:../../DaisySP/Source/Filters/ladder.h **** #pragma once
  40:../../DaisySP/Source/Filters/ladder.h **** #ifndef DSY_LADDER_H
  41:../../DaisySP/Source/Filters/ladder.h **** #define DSY_LADDER_H
  42:../../DaisySP/Source/Filters/ladder.h **** 
  43:../../DaisySP/Source/Filters/ladder.h **** #include <stdlib.h>
  44:../../DaisySP/Source/Filters/ladder.h **** #include <stdint.h>
  45:../../DaisySP/Source/Filters/ladder.h **** #include <array>
  46:../../DaisySP/Source/Filters/ladder.h **** #ifdef __cplusplus
  47:../../DaisySP/Source/Filters/ladder.h **** 
  48:../../DaisySP/Source/Filters/ladder.h **** namespace daisysp
  49:../../DaisySP/Source/Filters/ladder.h **** {
  50:../../DaisySP/Source/Filters/ladder.h **** /**
  51:../../DaisySP/Source/Filters/ladder.h ****  * 4-pole ladder filter model with selectable filter type (LP/BP/HP 12 or 24 dB/oct),
  52:../../DaisySP/Source/Filters/ladder.h ****  * drive, passband gain compensation, and stable self-oscillation.
  53:../../DaisySP/Source/Filters/ladder.h ****  *
  54:../../DaisySP/Source/Filters/ladder.h ****  *
  55:../../DaisySP/Source/Filters/ladder.h ****  */
  56:../../DaisySP/Source/Filters/ladder.h **** class LadderFilter
  57:../../DaisySP/Source/Filters/ladder.h **** {
  58:../../DaisySP/Source/Filters/ladder.h ****   public:
  59:../../DaisySP/Source/Filters/ladder.h ****     enum class FilterMode
  60:../../DaisySP/Source/Filters/ladder.h ****     {
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 19


  61:../../DaisySP/Source/Filters/ladder.h ****         LP24,
  62:../../DaisySP/Source/Filters/ladder.h ****         LP12,
  63:../../DaisySP/Source/Filters/ladder.h ****         BP24,
  64:../../DaisySP/Source/Filters/ladder.h ****         BP12,
  65:../../DaisySP/Source/Filters/ladder.h ****         HP24,
  66:../../DaisySP/Source/Filters/ladder.h ****         HP12
  67:../../DaisySP/Source/Filters/ladder.h ****     };
  68:../../DaisySP/Source/Filters/ladder.h **** 
  69:../../DaisySP/Source/Filters/ladder.h ****     LadderFilter()  = default;
 246              		.loc 14 69 5 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              	.LBB364:
 252              		.loc 14 69 5 is_stmt 0 view .LVU29
 253 0000 0023     		movs	r3, #0
 254 0002 C0E90333 		strd	r3, r3, [r0, #12]
 255 0006 C0E90533 		strd	r3, r3, [r0, #20]
 256 000a C0E90733 		strd	r3, r3, [r0, #28]
 257 000e C0E90933 		strd	r3, r3, [r0, #36]
 258 0012 C0E90B33 		strd	r3, r3, [r0, #44]
 259 0016 C0E90D33 		strd	r3, r3, [r0, #52]
 260              	.LBE364:
 261 001a 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE4893:
 265              		.weak	_ZN7daisysp12LadderFilterC1Ev
 266              		.thumb_set _ZN7daisysp12LadderFilterC1Ev,_ZN7daisysp12LadderFilterC2Ev
 267              		.section	.text._Z7distortffff,"ax",%progbits
 268              		.align	1
 269              		.p2align 2,,3
 270              		.global	_Z7distortffff
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv5-d16
 276              	_Z7distortffff:
 277              	.LVL8:
 278              	.LFB4896:
 279              		.file 15 "Blink.cpp"
   1:Blink.cpp     **** // didn't want to have this in one large file, but it would not flash when split into different hea
   2:Blink.cpp     **** #include "daisy_seed.h"
   3:Blink.cpp     **** #include "daisysp.h"
   4:Blink.cpp     **** 
   5:Blink.cpp     **** using namespace daisy;
   6:Blink.cpp     **** using namespace daisysp;
   7:Blink.cpp     **** 
   8:Blink.cpp     **** 
   9:Blink.cpp     **** #define MAX_DELAY static_cast<size_t>(48000 * 2.f)
  10:Blink.cpp     **** 
  11:Blink.cpp     **** void transmitData();
  12:Blink.cpp     **** void transmitData2();
  13:Blink.cpp     **** 
  14:Blink.cpp     **** DaisySeed  hw;
  15:Blink.cpp     **** UartHandler uart;
  16:Blink.cpp     **** Encoder encoder;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 20


  17:Blink.cpp     **** 
  18:Blink.cpp     **** Chorus ch;
  19:Blink.cpp     **** float p1chFreq, p1chDepth, p1chDelay, p2chFreq, p2chDepth, p2chDelay, p3chFreq, p3chDepth, p3chDela
  20:Blink.cpp     **** Flanger fl;
  21:Blink.cpp     **** float p1flFreq, p1flDepth, p1flDelay, p2flFreq, p2flDepth, p2flDelay, p3flFreq, p3flDepth, p3flDela
  22:Blink.cpp     **** LadderFilter wahflt, hp, lp;
  23:Blink.cpp     **** Tremolo trem;
  24:Blink.cpp     **** float p1tremFreq, p1tremDepth, p2tremFreq, p2tremDepth, p3tremFreq, p3tremDepth;
  25:Blink.cpp     **** Phaser ph;
  26:Blink.cpp     **** float p1phFreq, p1phdepth, p2phFreq, p2phdepth, p3phFreq, p3phdepth;
  27:Blink.cpp     **** //drive 
  28:Blink.cpp     **** float p1dingain, p1doutgain, p1dtone, p2dingain, p2doutgain, p2dtone, p3dingain, p3doutgain, p3dton
  29:Blink.cpp     **** //fuzz
  30:Blink.cpp     **** float p1fingain, p1fuzz, p1ftone, p2fingain, p2fuzz, p2ftone, p3fingain, p3fuzz, p3ftone;
  31:Blink.cpp     **** 
  32:Blink.cpp     **** 
  33:Blink.cpp     **** 
  34:Blink.cpp     **** 
  35:Blink.cpp     **** uint8_t start = 190;//transmission start bytes
  36:Blink.cpp     **** uint8_t start2 = 191;//also identifies what data is coming over
  37:Blink.cpp     **** 
  38:Blink.cpp     **** float knob1, knob2, knob3, wah;
  39:Blink.cpp     **** 
  40:Blink.cpp     **** uint8_t profile = 0;
  41:Blink.cpp     **** 
  42:Blink.cpp     **** 
  43:Blink.cpp     **** uint8_t effectCount = 0;//which effect we are currently on
  44:Blink.cpp     **** 
  45:Blink.cpp     **** uint8_t profile1[3] = {9, 9, 9};//9 is no effect
  46:Blink.cpp     **** uint8_t p1Size = 0;
  47:Blink.cpp     **** uint8_t profile2[3] = {9, 9, 9};
  48:Blink.cpp     **** uint8_t p2Size = 0;
  49:Blink.cpp     **** uint8_t profile3[3] = {9, 9, 9};
  50:Blink.cpp     **** uint8_t p3Size = 0;
  51:Blink.cpp     **** 
  52:Blink.cpp     **** uint8_t errorFlag = 0;
  53:Blink.cpp     **** uint8_t configuring = 0;
  54:Blink.cpp     **** 
  55:Blink.cpp     **** 
  56:Blink.cpp     **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delMem1, delMem2, delMem3;
  57:Blink.cpp     **** 
  58:Blink.cpp     **** struct delay
  59:Blink.cpp     **** {
  60:Blink.cpp     ****     DelayLine<float, MAX_DELAY> *del;
  61:Blink.cpp     ****     float                        currentDelay;
  62:Blink.cpp     ****     float                        delayTarget;
  63:Blink.cpp     ****     float                        feedback;
  64:Blink.cpp     **** 
  65:Blink.cpp     ****     float Process(float in)
  66:Blink.cpp     ****     {
  67:Blink.cpp     ****         //set delay times
  68:Blink.cpp     ****         fonepole(currentDelay, delayTarget, .0002f);//low pass the pot data to smooth it out
  69:Blink.cpp     ****         del->SetDelay(currentDelay);
  70:Blink.cpp     **** 
  71:Blink.cpp     ****         float read = del->Read();
  72:Blink.cpp     ****         del->Write((feedback * read) + in);
  73:Blink.cpp     **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 21


  74:Blink.cpp     ****         return read;
  75:Blink.cpp     ****     }
  76:Blink.cpp     **** };
  77:Blink.cpp     **** delay del1, del2, del3;
  78:Blink.cpp     **** 
  79:Blink.cpp     **** float distort(float in, float inGain, float outGain,float tone){
 280              		.loc 15 79 64 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Blink.cpp     ****     float x = in*(1+inGain*14);
 284              		.loc 15 80 5 view .LVU31
  79:Blink.cpp     ****     float x = in*(1+inGain*14);
 285              		.loc 15 79 64 is_stmt 0 view .LVU32
 286 0000 38B5     		push	{r3, r4, r5, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 3, -16
 289              		.cfi_offset 4, -12
 290              		.cfi_offset 5, -8
 291              		.cfi_offset 14, -4
 292 0002 2DED068B 		vpush.64	{d8, d9, d10}
 293              		.cfi_def_cfa_offset 40
 294              		.cfi_offset 80, -40
 295              		.cfi_offset 81, -36
 296              		.cfi_offset 82, -32
 297              		.cfi_offset 83, -28
 298              		.cfi_offset 84, -24
 299              		.cfi_offset 85, -20
 300              		.loc 15 80 20 view .LVU33
 301 0006 F7EE008A 		vmov.f32	s17, #1.0e+0
  81:Blink.cpp     ****     float term1, term2, term3;
  82:Blink.cpp     ****     term1 = exp(x);
  83:Blink.cpp     ****     term2 = exp(-x);
  84:Blink.cpp     ****     term3 = exp(-x*1.2);
  85:Blink.cpp     ****     float value = (term1-term3)/(term1+term2);
  86:Blink.cpp     ****     x = value;
  87:Blink.cpp     ****     float intone = abs(tone-1);
  88:Blink.cpp     ****     hp.SetFreq(100+(intone*100));
 302              		.loc 15 88 15 view .LVU34
 303 000a 294C     		ldr	r4, .L12+8
  80:Blink.cpp     ****     float term1, term2, term3;
 304              		.loc 15 80 20 view .LVU35
 305 000c B2EE0C7A 		vmov.f32	s14, #1.4e+1
  89:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 306              		.loc 15 89 15 view .LVU36
 307 0010 284D     		ldr	r5, .L12+12
  79:Blink.cpp     ****     float x = in*(1+inGain*14);
 308              		.loc 15 79 64 view .LVU37
 309 0012 F0EE619A 		vmov.f32	s19, s3
  80:Blink.cpp     ****     float term1, term2, term3;
 310              		.loc 15 80 20 view .LVU38
 311 0016 F0EE687A 		vmov.f32	s15, s17
  79:Blink.cpp     ****     float x = in*(1+inGain*14);
 312              		.loc 15 79 64 view .LVU39
 313 001a B0EE41AA 		vmov.f32	s20, s2
  80:Blink.cpp     ****     float term1, term2, term3;
 314              		.loc 15 80 20 view .LVU40
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 22


 315 001e E0EE877A 		vfma.f32	s15, s1, s14
  80:Blink.cpp     ****     float term1, term2, term3;
 316              		.loc 15 80 11 view .LVU41
 317 0022 27EE800A 		vmul.f32	s0, s15, s0
 318              	.LVL9:
  81:Blink.cpp     ****     term1 = exp(x);
 319              		.loc 15 81 5 is_stmt 1 view .LVU42
  82:Blink.cpp     ****     term2 = exp(-x);
 320              		.loc 15 82 5 view .LVU43
 321              	.LBB365:
 322              	.LBI365:
 323              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 23


  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 24


 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 25


 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 26


 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 324              		.loc 16 222 3 view .LVU44
 325              	.LBB366:
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 326              		.loc 16 223 5 view .LVU45
 327              	.LBE366:
 328              	.LBE365:
  83:Blink.cpp     ****     term3 = exp(-x*1.2);
 329              		.loc 15 83 16 is_stmt 0 view .LVU46
 330 0026 B1EE409A 		vneg.f32	s18, s0
 331              	.LBB368:
 332              	.LBB367:
 333              		.loc 16 223 26 view .LVU47
 334 002a FFF7FEFF 		bl	expf
 335              	.LVL10:
 336              		.loc 16 223 26 view .LVU48
 337 002e B0EE408A 		vmov.f32	s16, s0
 338              	.LBE367:
 339              	.LBE368:
 340              	.LBB369:
 341              	.LBB370:
 342 0032 B0EE490A 		vmov.f32	s0, s18
 343              	.LVL11:
 344              		.loc 16 223 26 view .LVU49
 345              	.LBE370:
 346              	.LBE369:
  83:Blink.cpp     ****     term3 = exp(-x*1.2);
 347              		.loc 15 83 5 is_stmt 1 view .LVU50
 348              	.LBB373:
 349              	.LBI369:
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 350              		.loc 16 222 3 view .LVU51
 351              	.LBB371:
 352              		.loc 16 223 5 view .LVU52
 353              		.loc 16 223 26 is_stmt 0 view .LVU53
 354 0036 FFF7FEFF 		bl	expf
 355              	.LVL12:
 356              		.loc 16 223 26 view .LVU54
 357              	.LBE371:
 358              	.LBE373:
  84:Blink.cpp     ****     float value = (term1-term3)/(term1+term2);
 359              		.loc 15 84 17 view .LVU55
 360 003a B7EEC97A 		vcvt.f64.f32	d7, s18
 361              	.LBB374:
 362              	.LBB372:
 363              		.loc 16 223 26 view .LVU56
 364 003e B0EE409A 		vmov.f32	s18, s0
 365              	.LVL13:
 366              		.loc 16 223 26 view .LVU57
 367              	.LBE372:
 368              	.LBE374:
  84:Blink.cpp     ****     float value = (term1-term3)/(term1+term2);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 27


 369              		.loc 15 84 5 is_stmt 1 view .LVU58
  84:Blink.cpp     ****     float value = (term1-term3)/(term1+term2);
 370              		.loc 15 84 16 is_stmt 0 view .LVU59
 371 0042 9FED196B 		vldr.64	d6, .L12
 372 0046 27EE060B 		vmul.f64	d0, d7, d6
 373              	.LVL14:
  84:Blink.cpp     ****     float value = (term1-term3)/(term1+term2);
 374              		.loc 15 84 16 view .LVU60
 375 004a FFF7FEFF 		bl	exp
 376              	.LVL15:
  85:Blink.cpp     ****     x = value;
 377              		.loc 15 85 5 is_stmt 1 view .LVU61
  88:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 378              		.loc 15 88 15 is_stmt 0 view .LVU62
 379 004e 2046     		mov	r0, r4
  84:Blink.cpp     ****     float value = (term1-term3)/(term1+term2);
 380              		.loc 15 84 11 view .LVU63
 381 0050 B7EEC07B 		vcvt.f32.f64	s14, d0
 382              	.LVL16:
  88:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 383              		.loc 15 88 15 view .LVU64
 384 0054 9FED180A 		vldr.32	s0, .L12+16
  85:Blink.cpp     ****     x = value;
 385              		.loc 15 85 39 view .LVU65
 386 0058 39EE089A 		vadd.f32	s18, s18, s16
 387              	.LVL17:
  87:Blink.cpp     ****     hp.SetFreq(100+(intone*100));
 388              		.loc 15 87 23 view .LVU66
 389 005c 79EEE87A 		vsub.f32	s15, s19, s17
  85:Blink.cpp     ****     x = value;
 390              		.loc 15 85 25 view .LVU67
 391 0060 38EE478A 		vsub.f32	s16, s16, s14
 392              	.LVL18:
 393              	.LBB375:
 394              	.LBB376:
 395              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 28


  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 396              		.loc 17 76 31 view .LVU68
 397 0064 F0EEE77A 		vabs.f32	s15, s15
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 29


 398              	.LBE376:
 399              	.LBE375:
  85:Blink.cpp     ****     x = value;
 400              		.loc 15 85 11 view .LVU69
 401 0068 C8EE09AA 		vdiv.f32	s21, s16, s18
 402              	.LVL19:
  86:Blink.cpp     ****     float intone = abs(tone-1);
 403              		.loc 15 86 5 is_stmt 1 view .LVU70
  87:Blink.cpp     ****     hp.SetFreq(100+(intone*100));
 404              		.loc 15 87 5 view .LVU71
 405              	.LBB378:
 406              	.LBI375:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 407              		.loc 17 75 3 view .LVU72
 408              	.LBB377:
 409              		.loc 17 76 5 view .LVU73
 410              		.loc 17 76 5 is_stmt 0 view .LVU74
 411              	.LBE377:
 412              	.LBE378:
  88:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 413              		.loc 15 88 5 is_stmt 1 view .LVU75
  88:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 414              		.loc 15 88 15 is_stmt 0 view .LVU76
 415 006c A7EE800A 		vfma.f32	s0, s15, s0
 416 0070 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7SetFreqEf
 417              	.LVL20:
 418              		.loc 15 89 5 is_stmt 1 view .LVU77
 419              		.loc 15 89 15 is_stmt 0 view .LVU78
 420 0074 DFED117A 		vldr.32	s15, .L12+20
 421 0078 9FED110A 		vldr.32	s0, .L12+24
 422 007c 2846     		mov	r0, r5
 423 007e A9EEA70A 		vfma.f32	s0, s19, s15
 424 0082 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7SetFreqEf
 425              	.LVL21:
  90:Blink.cpp     **** 
  91:Blink.cpp     ****     return hp.Process(lp.Process(x*(outGain*4+1)));
 426              		.loc 15 91 5 is_stmt 1 view .LVU79
 427              		.loc 15 91 46 is_stmt 0 view .LVU80
 428 0086 F1EE007A 		vmov.f32	s15, #4.0e+0
 429              		.loc 15 91 22 view .LVU81
 430 008a 2846     		mov	r0, r5
 431              		.loc 15 91 46 view .LVU82
 432 008c EAEE278A 		vfma.f32	s17, s20, s15
 433              	.LVL22:
 434              		.loc 15 91 22 view .LVU83
 435 0090 28EEAA0A 		vmul.f32	s0, s17, s21
 436 0094 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7ProcessEf
 437              	.LVL23:
 438 0098 2046     		mov	r0, r4
  92:Blink.cpp     **** }
 439              		.loc 15 92 1 view .LVU84
 440 009a BDEC068B 		vldm	sp!, {d8-d10}
 441              		.cfi_restore 84
 442              		.cfi_restore 85
 443              		.cfi_restore 82
 444              		.cfi_restore 83
 445              		.cfi_restore 80
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 30


 446              		.cfi_restore 81
 447              		.cfi_def_cfa_offset 16
 448              	.LVL24:
 449              		.loc 15 92 1 view .LVU85
 450 009e BDE83840 		pop	{r3, r4, r5, lr}
 451              		.cfi_restore 14
 452              		.cfi_restore 5
 453              		.cfi_restore 4
 454              		.cfi_restore 3
 455              		.cfi_def_cfa_offset 0
  91:Blink.cpp     **** }
 456              		.loc 15 91 22 view .LVU86
 457 00a2 FFF7FEBF 		b	_ZN7daisysp12LadderFilter7ProcessEf
 458              	.LVL25:
 459              	.L13:
 460 00a6 00BF     		.align	3
 461              	.L12:
 462 00a8 33333333 		.word	858993459
 463 00ac 3333F33F 		.word	1072902963
 464 00b0 00000000 		.word	.LANCHOR0
 465 00b4 00000000 		.word	.LANCHOR1
 466 00b8 0000C842 		.word	1120403456
 467 00bc 00606A46 		.word	1181376512
 468 00c0 00004843 		.word	1128792064
 469              		.cfi_endproc
 470              	.LFE4896:
 472              		.section	.text._Z4Fuzzffff,"ax",%progbits
 473              		.align	1
 474              		.p2align 2,,3
 475              		.global	_Z4Fuzzffff
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv5-d16
 481              	_Z4Fuzzffff:
 482              	.LVL26:
 483              	.LFB4897:
  93:Blink.cpp     **** //Fuzz does not have many resources, and fewer that worked for me
  94:Blink.cpp     **** //found the math online and applied to our input signal
  95:Blink.cpp     **** float Fuzz(float in, float inGain, float fuzz, float tone){
 484              		.loc 15 95 59 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Blink.cpp     ****     float x = in*(1+inGain*20);
 488              		.loc 15 96 5 view .LVU88
  95:Blink.cpp     ****     float x = in*(1+inGain*20);
 489              		.loc 15 95 59 is_stmt 0 view .LVU89
 490 0000 38B5     		push	{r3, r4, r5, lr}
 491              		.cfi_def_cfa_offset 16
 492              		.cfi_offset 3, -16
 493              		.cfi_offset 4, -12
 494              		.cfi_offset 5, -8
 495              		.cfi_offset 14, -4
  97:Blink.cpp     ****     float a = 0.9*fuzz;
 496              		.loc 15 97 18 view .LVU90
 497 0002 9FED3D5B 		vldr.64	d5, .L16
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 31


  95:Blink.cpp     ****     float x = in*(1+inGain*20);
 498              		.loc 15 95 59 view .LVU91
 499 0006 2DED088B 		vpush.64	{d8, d9, d10, d11}
 500              		.cfi_def_cfa_offset 48
 501              		.cfi_offset 80, -48
 502              		.cfi_offset 81, -44
 503              		.cfi_offset 82, -40
 504              		.cfi_offset 83, -36
 505              		.cfi_offset 84, -32
 506              		.cfi_offset 85, -28
 507              		.cfi_offset 86, -24
 508              		.cfi_offset 87, -20
 509              		.loc 15 97 19 view .LVU92
 510 000a B7EEC17A 		vcvt.f64.f32	d7, s2
  98:Blink.cpp     ****     float y = (8*inGain)*x/(abs(x)+1);
  99:Blink.cpp     ****     float term1 = 1+exp((2*a)/(a-1));
 100:Blink.cpp     ****     float term2 = 2*exp((a*(1-y))/(a-1));
 101:Blink.cpp     ****     float term3 = term1-term2;
 102:Blink.cpp     ****     float var = a/(a-1);
 103:Blink.cpp     ****     float coth = cosh(var)/sinh(var) - 1;
 104:Blink.cpp     ****     float out = term3*coth*-1/2 + in;
 105:Blink.cpp     **** 
 106:Blink.cpp     ****     float intone = abs(tone-1);
 107:Blink.cpp     ****     hp.SetFreq(100+(intone*100));
 511              		.loc 15 107 15 view .LVU93
 512 000e 3C4C     		ldr	r4, .L16+8
  96:Blink.cpp     ****     float a = 0.9*fuzz;
 513              		.loc 15 96 20 view .LVU94
 514 0010 F7EE009A 		vmov.f32	s19, #1.0e+0
 108:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 515              		.loc 15 108 15 view .LVU95
 516 0014 3B4D     		ldr	r5, .L16+12
  96:Blink.cpp     ****     float a = 0.9*fuzz;
 517              		.loc 15 96 20 view .LVU96
 518 0016 F3EE046A 		vmov.f32	s13, #2.0e+1
  97:Blink.cpp     ****     float y = (8*inGain)*x/(abs(x)+1);
 519              		.loc 15 97 18 view .LVU97
 520 001a 27EE057B 		vmul.f64	d7, d7, d5
  96:Blink.cpp     ****     float a = 0.9*fuzz;
 521              		.loc 15 96 20 view .LVU98
 522 001e B0EE69BA 		vmov.f32	s22, s19
  95:Blink.cpp     ****     float x = in*(1+inGain*20);
 523              		.loc 15 95 59 view .LVU99
 524 0022 B0EE40AA 		vmov.f32	s20, s0
 525 0026 F0EE61AA 		vmov.f32	s21, s3
  96:Blink.cpp     ****     float a = 0.9*fuzz;
 526              		.loc 15 96 20 view .LVU100
 527 002a A0EEA6BA 		vfma.f32	s22, s1, s13
  97:Blink.cpp     ****     float y = (8*inGain)*x/(abs(x)+1);
 528              		.loc 15 97 11 view .LVU101
 529 002e B7EEC78B 		vcvt.f32.f64	s16, d7
  95:Blink.cpp     ****     float x = in*(1+inGain*20);
 530              		.loc 15 95 59 view .LVU102
 531 0032 B0EE609A 		vmov.f32	s18, s1
  99:Blink.cpp     ****     float term2 = 2*exp((a*(1-y))/(a-1));
 532              		.loc 15 99 33 view .LVU103
 533 0036 78EE69BA 		vsub.f32	s23, s16, s19
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 32


  96:Blink.cpp     ****     float a = 0.9*fuzz;
 534              		.loc 15 96 11 view .LVU104
 535 003a 2BEE00BA 		vmul.f32	s22, s22, s0
 536              	.LVL27:
  97:Blink.cpp     ****     float y = (8*inGain)*x/(abs(x)+1);
 537              		.loc 15 97 5 is_stmt 1 view .LVU105
  98:Blink.cpp     ****     float term1 = 1+exp((2*a)/(a-1));
 538              		.loc 15 98 5 view .LVU106
 539              	.LBB379:
 540              	.LBI379:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 541              		.loc 17 75 3 view .LVU107
 542              	.LBB380:
 543              		.loc 17 76 5 view .LVU108
 544              		.loc 17 76 5 is_stmt 0 view .LVU109
 545              	.LBE380:
 546              	.LBE379:
  99:Blink.cpp     ****     float term2 = 2*exp((a*(1-y))/(a-1));
 547              		.loc 15 99 5 is_stmt 1 view .LVU110
 548              	.LBB382:
 549              	.LBI382:
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 550              		.loc 16 222 3 view .LVU111
 551              	.LBB383:
 552              		.loc 16 223 5 view .LVU112
 553              	.LBE383:
 554              	.LBE382:
  99:Blink.cpp     ****     float term2 = 2*exp((a*(1-y))/(a-1));
 555              		.loc 15 99 27 is_stmt 0 view .LVU113
 556 003e 38EE080A 		vadd.f32	s0, s16, s16
 557              	.LVL28:
 558              	.LBB386:
 559              	.LBB384:
 560              		.loc 16 223 26 view .LVU114
 561 0042 80EE2B0A 		vdiv.f32	s0, s0, s23
 562              	.LVL29:
 563              		.loc 16 223 26 view .LVU115
 564 0046 FFF7FEFF 		bl	expf
 565              	.LVL30:
 566              		.loc 16 223 26 view .LVU116
 567              	.LBE384:
 568              	.LBE386:
  98:Blink.cpp     ****     float term1 = 1+exp((2*a)/(a-1));
 569              		.loc 15 98 17 view .LVU117
 570 004a F2EE000A 		vmov.f32	s1, #8.0e+0
 571              	.LBB387:
 572              	.LBB381:
 573              		.loc 17 76 31 view .LVU118
 574 004e F0EECB7A 		vabs.f32	s15, s22
 575              	.LBE381:
 576              	.LBE387:
 577              	.LBB388:
 578              	.LBB385:
 579              		.loc 16 223 26 view .LVU119
 580 0052 F0EE408A 		vmov.f32	s17, s0
 581              	.LVL31:
 582              		.loc 16 223 26 view .LVU120
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 33


 583              	.LBE385:
 584              	.LBE388:
 100:Blink.cpp     ****     float term3 = term1-term2;
 585              		.loc 15 100 5 is_stmt 1 view .LVU121
 586              	.LBB389:
 587              	.LBI389:
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 588              		.loc 16 222 3 view .LVU122
 589              	.LBB390:
 590              		.loc 16 223 5 view .LVU123
 591              	.LBE390:
 592              	.LBE389:
  98:Blink.cpp     ****     float term1 = 1+exp((2*a)/(a-1));
 593              		.loc 15 98 17 is_stmt 0 view .LVU124
 594 0056 29EE209A 		vmul.f32	s18, s18, s1
 595              	.LVL32:
  98:Blink.cpp     ****     float term1 = 1+exp((2*a)/(a-1));
 596              		.loc 15 98 35 view .LVU125
 597 005a 77EEA97A 		vadd.f32	s15, s15, s19
 598              	.LVL33:
  98:Blink.cpp     ****     float term1 = 1+exp((2*a)/(a-1));
 599              		.loc 15 98 25 view .LVU126
 600 005e 29EE0B9A 		vmul.f32	s18, s18, s22
 601              	.LVL34:
  98:Blink.cpp     ****     float term1 = 1+exp((2*a)/(a-1));
 602              		.loc 15 98 37 view .LVU127
 603 0062 89EE270A 		vdiv.f32	s0, s18, s15
 604              	.LVL35:
 100:Blink.cpp     ****     float term3 = term1-term2;
 605              		.loc 15 100 30 view .LVU128
 606 0066 39EEC00A 		vsub.f32	s0, s19, s0
 607              	.LVL36:
 100:Blink.cpp     ****     float term3 = term1-term2;
 608              		.loc 15 100 27 view .LVU129
 609 006a 20EE080A 		vmul.f32	s0, s0, s16
 610              	.LBB392:
 611              	.LBB391:
 612              		.loc 16 223 26 view .LVU130
 613 006e 80EE2B0A 		vdiv.f32	s0, s0, s23
 614 0072 FFF7FEFF 		bl	expf
 615              	.LVL37:
 616              		.loc 16 223 26 view .LVU131
 617              	.LBE391:
 618              	.LBE392:
 101:Blink.cpp     ****     float var = a/(a-1);
 619              		.loc 15 101 5 is_stmt 1 view .LVU132
 102:Blink.cpp     ****     float coth = cosh(var)/sinh(var) - 1;
 620              		.loc 15 102 11 is_stmt 0 view .LVU133
 621 0076 88EE2B9A 		vdiv.f32	s18, s16, s23
 101:Blink.cpp     ****     float var = a/(a-1);
 622              		.loc 15 101 11 view .LVU134
 623 007a F0EE007A 		vmov.f32	s15, #2.0e+0
  99:Blink.cpp     ****     float term2 = 2*exp((a*(1-y))/(a-1));
 624              		.loc 15 99 36 view .LVU135
 625 007e 38EEA98A 		vadd.f32	s16, s17, s19
 626              	.LVL38:
 101:Blink.cpp     ****     float var = a/(a-1);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 34


 627              		.loc 15 101 11 view .LVU136
 628 0082 A0EE678A 		vfms.f32	s16, s0, s15
 629              	.LVL39:
 102:Blink.cpp     ****     float coth = cosh(var)/sinh(var) - 1;
 630              		.loc 15 102 5 is_stmt 1 view .LVU137
 103:Blink.cpp     ****     float out = term3*coth*-1/2 + in;
 631              		.loc 15 103 5 view .LVU138
 632              	.LBB393:
 633              	.LBI393:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 634              		.loc 16 203 3 view .LVU139
 635              	.LBB394:
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 636              		.loc 16 204 5 view .LVU140
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 637              		.loc 16 204 27 is_stmt 0 view .LVU141
 638 0086 B0EE490A 		vmov.f32	s0, s18
 639              	.LVL40:
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 640              		.loc 16 204 27 view .LVU142
 641 008a FFF7FEFF 		bl	coshf
 642              	.LVL41:
 643 008e F0EE408A 		vmov.f32	s17, s0
 644              	.LVL42:
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 645              		.loc 16 204 27 view .LVU143
 646              	.LBE394:
 647              	.LBE393:
 648              	.LBB395:
 649              	.LBB396:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 35


 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 36


 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 37


 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 38


 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(long double __x)
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinl(__x); }
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sin(_Tp __x)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sin(__x); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sinh;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(float __x)
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhf(__x); }
 650              		.loc 16 445 27 view .LVU144
 651 0092 B0EE490A 		vmov.f32	s0, s18
 652              	.LVL43:
 653              		.loc 16 445 27 view .LVU145
 654              	.LBE396:
 655              	.LBI395:
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhf(__x); }
 656              		.loc 16 444 3 is_stmt 1 view .LVU146
 657              	.LBB397:
 658              		.loc 16 445 5 view .LVU147
 659              		.loc 16 445 27 is_stmt 0 view .LVU148
 660 0096 FFF7FEFF 		bl	sinhf
 661              	.LVL44:
 662              		.loc 16 445 27 view .LVU149
 663              	.LBE397:
 664              	.LBE395:
 104:Blink.cpp     **** 
 665              		.loc 15 104 5 is_stmt 1 view .LVU150
 106:Blink.cpp     ****     hp.SetFreq(100+(intone*100));
 666              		.loc 15 106 23 is_stmt 0 view .LVU151
 667 009a 3AEEE97A 		vsub.f32	s14, s21, s19
 103:Blink.cpp     ****     float out = term3*coth*-1/2 + in;
 668              		.loc 15 103 27 view .LVU152
 669 009e C8EE807A 		vdiv.f32	s15, s17, s0
 107:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 670              		.loc 15 107 15 view .LVU153
 671 00a2 DFED196A 		vldr.32	s13, .L16+16
 672 00a6 2046     		mov	r0, r4
 673              	.LBB398:
 674              	.LBB399:
 675              		.loc 17 76 31 view .LVU154
 676 00a8 B0EEC77A 		vabs.f32	s14, s14
 677              	.LBE399:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 39


 678              	.LBE398:
 104:Blink.cpp     **** 
 679              		.loc 15 104 11 view .LVU155
 680 00ac B6EE006A 		vmov.f32	s12, #5.0e-1
 107:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 681              		.loc 15 107 15 view .LVU156
 682 00b0 E7EE266A 		vfma.f32	s13, s14, s13
 683 00b4 B0EE660A 		vmov.f32	s0, s13
 684              	.LVL45:
 103:Blink.cpp     ****     float out = term3*coth*-1/2 + in;
 685              		.loc 15 103 40 view .LVU157
 686 00b8 77EEE97A 		vsub.f32	s15, s15, s19
 687              	.LVL46:
 104:Blink.cpp     **** 
 688              		.loc 15 104 27 view .LVU158
 689 00bc 28EE678A 		vnmul.f32	s16, s16, s15
 690              	.LVL47:
 104:Blink.cpp     **** 
 691              		.loc 15 104 11 view .LVU159
 692 00c0 A8EE06AA 		vfma.f32	s20, s16, s12
 693              	.LVL48:
 106:Blink.cpp     ****     hp.SetFreq(100+(intone*100));
 694              		.loc 15 106 5 is_stmt 1 view .LVU160
 695              	.LBB401:
 696              	.LBI398:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 697              		.loc 17 75 3 view .LVU161
 698              	.LBB400:
 699              		.loc 17 76 5 view .LVU162
 700              		.loc 17 76 5 is_stmt 0 view .LVU163
 701              	.LBE400:
 702              	.LBE401:
 107:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 703              		.loc 15 107 5 is_stmt 1 view .LVU164
 107:Blink.cpp     ****     lp.SetFreq((15000*tone)+200);
 704              		.loc 15 107 15 is_stmt 0 view .LVU165
 705 00c4 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7SetFreqEf
 706              	.LVL49:
 707              		.loc 15 108 5 is_stmt 1 view .LVU166
 708              		.loc 15 108 15 is_stmt 0 view .LVU167
 709 00c8 DFED107A 		vldr.32	s15, .L16+20
 710 00cc 2846     		mov	r0, r5
 711 00ce 9FED100A 		vldr.32	s0, .L16+24
 712 00d2 AAEEA70A 		vfma.f32	s0, s21, s15
 713 00d6 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7SetFreqEf
 714              	.LVL50:
 109:Blink.cpp     **** 
 110:Blink.cpp     ****     return hp.Process(lp.Process(out));
 715              		.loc 15 110 5 is_stmt 1 view .LVU168
 716              		.loc 15 110 22 is_stmt 0 view .LVU169
 717 00da 2846     		mov	r0, r5
 718 00dc B0EE4A0A 		vmov.f32	s0, s20
 719 00e0 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7ProcessEf
 720              	.LVL51:
 721 00e4 2046     		mov	r0, r4
 111:Blink.cpp     **** }
 722              		.loc 15 111 1 view .LVU170
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 40


 723 00e6 BDEC088B 		vldm	sp!, {d8-d11}
 724              		.cfi_restore 86
 725              		.cfi_restore 87
 726              		.cfi_restore 84
 727              		.cfi_restore 85
 728              		.cfi_restore 82
 729              		.cfi_restore 83
 730              		.cfi_restore 80
 731              		.cfi_restore 81
 732              		.cfi_def_cfa_offset 16
 733              	.LVL52:
 734              		.loc 15 111 1 view .LVU171
 735 00ea BDE83840 		pop	{r3, r4, r5, lr}
 736              		.cfi_restore 14
 737              		.cfi_restore 5
 738              		.cfi_restore 4
 739              		.cfi_restore 3
 740              		.cfi_def_cfa_offset 0
 110:Blink.cpp     **** }
 741              		.loc 15 110 22 view .LVU172
 742 00ee FFF7FEBF 		b	_ZN7daisysp12LadderFilter7ProcessEf
 743              	.LVL53:
 744              	.L17:
 745 00f2 00BFAFF3 		.align	3
 745      0080
 746              	.L16:
 747 00f8 CDCCCCCC 		.word	-858993459
 748 00fc CCCCEC3F 		.word	1072483532
 749 0100 00000000 		.word	.LANCHOR0
 750 0104 00000000 		.word	.LANCHOR1
 751 0108 0000C842 		.word	1120403456
 752 010c 00606A46 		.word	1181376512
 753 0110 00004843 		.word	1128792064
 754              		.cfi_endproc
 755              	.LFE4897:
 757              		.section	.text._Z14effectsProcessfh,"ax",%progbits
 758              		.align	1
 759              		.p2align 2,,3
 760              		.global	_Z14effectsProcessfh
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv5-d16
 766              	_Z14effectsProcessfh:
 767              	.LVL54:
 768              	.LFB4898:
 112:Blink.cpp     **** 
 113:Blink.cpp     **** 
 114:Blink.cpp     **** //process the samples
 115:Blink.cpp     **** float effectsProcess(float in, uint8_t effect){
 769              		.loc 15 115 47 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 116:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 773              		.loc 15 116 5 view .LVU174
 115:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 41


 774              		.loc 15 115 47 is_stmt 0 view .LVU175
 775 0000 70B5     		push	{r4, r5, r6, lr}
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 4, -16
 778              		.cfi_offset 5, -12
 779              		.cfi_offset 6, -8
 780              		.cfi_offset 14, -4
 781              		.loc 15 116 32 view .LVU176
 782 0002 0321     		movs	r1, #3
 115:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 783              		.loc 15 115 47 view .LVU177
 784 0004 0446     		mov	r4, r0
 785              		.loc 15 116 32 view .LVU178
 786 0006 A148     		ldr	r0, .L50
 787              	.LVL55:
 115:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 788              		.loc 15 115 47 view .LVU179
 789 0008 2DED028B 		vpush.64	{d8}
 790              		.cfi_def_cfa_offset 24
 791              		.cfi_offset 80, -24
 792              		.cfi_offset 81, -20
 115:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 793              		.loc 15 115 47 view .LVU180
 794 000c B0EE408A 		vmov.f32	s16, s0
 795              		.loc 15 116 32 view .LVU181
 796 0010 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 797              	.LVL56:
 798              	.LBB434:
 799              	.LBI434:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 800              		.loc 17 75 3 is_stmt 1 view .LVU182
 801              	.LBB435:
 802              		.loc 17 76 5 view .LVU183
 803              	.LBE435:
 804              	.LBE434:
 805              		.loc 15 116 14 is_stmt 0 view .LVU184
 806 0014 B7EE007A 		vmov.f32	s14, #1.0e+0
 117:Blink.cpp     ****     wahflt.SetFreq(1200*wah+400);
 807              		.loc 15 117 19 view .LVU185
 808 0018 9FED9D6A 		vldr.32	s12, .L50+4
 809 001c DFED9D6A 		vldr.32	s13, .L50+8
 116:Blink.cpp     ****     wahflt.SetFreq(1200*wah+400);
 810              		.loc 15 116 9 view .LVU186
 811 0020 9D4B     		ldr	r3, .L50+12
 116:Blink.cpp     ****     wahflt.SetFreq(1200*wah+400);
 812              		.loc 15 116 14 view .LVU187
 813 0022 77EE407A 		vsub.f32	s15, s14, s0
 814              	.LVL57:
 815              		.loc 15 117 19 view .LVU188
 816 0026 9D48     		ldr	r0, .L50+16
 817              	.LBB437:
 818              	.LBB436:
 819              		.loc 17 76 31 view .LVU189
 820 0028 F0EEE77A 		vabs.f32	s15, s15
 821              	.LVL58:
 822              		.loc 17 76 31 view .LVU190
 823              	.LBE436:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 42


 824              	.LBE437:
 825              		.loc 15 117 19 view .LVU191
 826 002c E7EE866A 		vfma.f32	s13, s15, s12
 116:Blink.cpp     ****     wahflt.SetFreq(1200*wah+400);
 827              		.loc 15 116 9 view .LVU192
 828 0030 C3ED007A 		vstr.32	s15, [r3]
 829              		.loc 15 117 5 is_stmt 1 view .LVU193
 830              		.loc 15 117 19 is_stmt 0 view .LVU194
 831 0034 B0EE660A 		vmov.f32	s0, s13
 832 0038 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7SetFreqEf
 833              	.LVL59:
 118:Blink.cpp     ****     switch (effect)
 834              		.loc 15 118 5 is_stmt 1 view .LVU195
 835 003c 072C     		cmp	r4, #7
 836 003e 19D8     		bhi	.L38
 837 0040 DFE804F0 		tbb	[pc, r4]
 838              	.L21:
 839 0044 0D       		.byte	(.L28-.L21)/2
 840 0045 1D       		.byte	(.L27-.L21)/2
 841 0046 38       		.byte	(.L26-.L21)/2
 842 0047 8F       		.byte	(.L25-.L21)/2
 843 0048 98       		.byte	(.L24-.L21)/2
 844 0049 A1       		.byte	(.L23-.L21)/2
 845 004a AA       		.byte	(.L22-.L21)/2
 846 004b 04       		.byte	(.L20-.L21)/2
 847              		.p2align 1
 848              	.L20:
 119:Blink.cpp     ****     {
 120:Blink.cpp     ****     case 0:
 121:Blink.cpp     ****         if(profile == 0){
 122:Blink.cpp     ****             return distort(in, p1dingain, p1doutgain, p1dtone);
 123:Blink.cpp     ****         } else if(profile == 1){
 124:Blink.cpp     ****             return distort(in, p2dingain, p2doutgain, p2dtone);
 125:Blink.cpp     ****         } else if(profile == 2){
 126:Blink.cpp     ****             return distort(in, p3dingain, p3doutgain, p3dtone);
 127:Blink.cpp     ****         }
 128:Blink.cpp     ****         break;
 129:Blink.cpp     ****     case 1:
 130:Blink.cpp     ****         if(profile == 0){
 131:Blink.cpp     ****             return Fuzz(in, p1fingain, p1fuzz, p1ftone);
 132:Blink.cpp     ****         } else if(profile == 1){
 133:Blink.cpp     ****             return Fuzz(in, p2fingain, p2fuzz, p2ftone);
 134:Blink.cpp     ****         } else if(profile == 2){
 135:Blink.cpp     ****             return Fuzz(in, p3fingain, p3fuzz, p3ftone);
 136:Blink.cpp     ****         }
 137:Blink.cpp     ****         break;
 138:Blink.cpp     ****     case 2:
 139:Blink.cpp     ****         if(profile == 0){
 140:Blink.cpp     ****             return in + del1.Process(in);
 141:Blink.cpp     ****         } else if(profile == 1){
 142:Blink.cpp     ****             return in + del2.Process(in);
 143:Blink.cpp     ****         } else if(profile == 2){
 144:Blink.cpp     ****             return in + del3.Process(in);
 145:Blink.cpp     ****         }
 146:Blink.cpp     ****         break;
 147:Blink.cpp     ****     case 3:
 148:Blink.cpp     ****         return ch.Process(in);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 43


 149:Blink.cpp     ****         break;
 150:Blink.cpp     ****     case 4:
 151:Blink.cpp     ****         return fl.Process(in);
 152:Blink.cpp     ****         break;
 153:Blink.cpp     ****     case 5:
 154:Blink.cpp     ****         return wahflt.Process(in);
 155:Blink.cpp     ****         break;
 156:Blink.cpp     ****     case 6:
 157:Blink.cpp     ****         return trem.Process(in);
 158:Blink.cpp     ****         break;
 849              		.loc 15 158 9 view .LVU196
 159:Blink.cpp     ****     case 7:
 850              		.loc 15 159 5 view .LVU197
 160:Blink.cpp     ****         return ph.Process(in);
 851              		.loc 15 160 9 view .LVU198
 852              		.loc 15 160 26 is_stmt 0 view .LVU199
 853 004c B0EE480A 		vmov.f32	s0, s16
 854 0050 9348     		ldr	r0, .L50+20
 161:Blink.cpp     ****         break;
 162:Blink.cpp     ****     default:
 163:Blink.cpp     ****         break;
 164:Blink.cpp     ****     }
 165:Blink.cpp     ****     return in;
 166:Blink.cpp     **** }
 855              		.loc 15 166 1 view .LVU200
 856 0052 BDEC028B 		vldm	sp!, {d8}
 857              		.cfi_remember_state
 858              		.cfi_restore 80
 859              		.cfi_restore 81
 860              		.cfi_def_cfa_offset 16
 861              	.LVL60:
 862              		.loc 15 166 1 view .LVU201
 863 0056 BDE87040 		pop	{r4, r5, r6, lr}
 864              		.cfi_restore 14
 865              		.cfi_restore 6
 866              		.cfi_restore 5
 867              		.cfi_restore 4
 868              		.cfi_def_cfa_offset 0
 160:Blink.cpp     ****         return ph.Process(in);
 869              		.loc 15 160 26 view .LVU202
 870 005a FFF7FEBF 		b	_ZN7daisysp6Phaser7ProcessEf
 871              	.LVL61:
 872              	.L28:
 873              		.cfi_restore_state
 120:Blink.cpp     ****         if(profile == 0){
 874              		.loc 15 120 5 is_stmt 1 view .LVU203
 121:Blink.cpp     ****             return distort(in, p1dingain, p1doutgain, p1dtone);
 875              		.loc 15 121 9 view .LVU204
 121:Blink.cpp     ****             return distort(in, p1dingain, p1doutgain, p1dtone);
 876              		.loc 15 121 20 is_stmt 0 view .LVU205
 877 005e 914B     		ldr	r3, .L50+24
 878 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 121:Blink.cpp     ****             return distort(in, p1dingain, p1doutgain, p1dtone);
 879              		.loc 15 121 9 view .LVU206
 880 0062 002B     		cmp	r3, #0
 881 0064 00F00381 		beq	.L43
 123:Blink.cpp     ****             return distort(in, p2dingain, p2doutgain, p2dtone);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 44


 882              		.loc 15 123 16 is_stmt 1 view .LVU207
 883 0068 012B     		cmp	r3, #1
 884 006a 00F00481 		beq	.L44
 125:Blink.cpp     ****             return distort(in, p3dingain, p3doutgain, p3dtone);
 885              		.loc 15 125 16 view .LVU208
 886 006e 022B     		cmp	r3, #2
 887 0070 00F09B80 		beq	.L45
 888              	.L38:
 165:Blink.cpp     **** }
 889              		.loc 15 165 12 is_stmt 0 view .LVU209
 890 0074 B0EE480A 		vmov.f32	s0, s16
 891              	.L18:
 892              		.loc 15 166 1 view .LVU210
 893 0078 BDEC028B 		vldm	sp!, {d8}
 894              		.cfi_remember_state
 895              		.cfi_restore 80
 896              		.cfi_restore 81
 897              		.cfi_def_cfa_offset 16
 898              	.LVL62:
 899              		.loc 15 166 1 view .LVU211
 900 007c 70BD     		pop	{r4, r5, r6, pc}
 901              	.LVL63:
 902              	.L27:
 903              		.cfi_restore_state
 129:Blink.cpp     ****         if(profile == 0){
 904              		.loc 15 129 5 is_stmt 1 view .LVU212
 130:Blink.cpp     ****             return Fuzz(in, p1fingain, p1fuzz, p1ftone);
 905              		.loc 15 130 9 view .LVU213
 130:Blink.cpp     ****             return Fuzz(in, p1fingain, p1fuzz, p1ftone);
 906              		.loc 15 130 20 is_stmt 0 view .LVU214
 907 007e 894B     		ldr	r3, .L50+24
 908 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130:Blink.cpp     ****             return Fuzz(in, p1fingain, p1fuzz, p1ftone);
 909              		.loc 15 130 9 view .LVU215
 910 0082 002B     		cmp	r3, #0
 911 0084 00F0EF80 		beq	.L46
 132:Blink.cpp     ****             return Fuzz(in, p2fingain, p2fuzz, p2ftone);
 912              		.loc 15 132 16 is_stmt 1 view .LVU216
 913 0088 012B     		cmp	r3, #1
 914 008a 00F0FA80 		beq	.L47
 134:Blink.cpp     ****             return Fuzz(in, p3fingain, p3fuzz, p3ftone);
 915              		.loc 15 134 16 view .LVU217
 916 008e 022B     		cmp	r3, #2
 917 0090 F0D1     		bne	.L38
 135:Blink.cpp     ****         }
 918              		.loc 15 135 13 view .LVU218
 135:Blink.cpp     ****         }
 919              		.loc 15 135 24 is_stmt 0 view .LVU219
 920 0092 8549     		ldr	r1, .L50+28
 921 0094 854A     		ldr	r2, .L50+32
 922 0096 864B     		ldr	r3, .L50+36
 923              	.L42:
 133:Blink.cpp     ****         } else if(profile == 2){
 924              		.loc 15 133 24 view .LVU220
 925 0098 B0EE480A 		vmov.f32	s0, s16
 926 009c D1ED001A 		vldr.32	s3, [r1]
 927 00a0 92ED001A 		vldr.32	s2, [r2]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 45


 928 00a4 D3ED000A 		vldr.32	s1, [r3]
 929              		.loc 15 166 1 view .LVU221
 930 00a8 BDEC028B 		vldm	sp!, {d8}
 931              		.cfi_remember_state
 932              		.cfi_restore 80
 933              		.cfi_restore 81
 934              		.cfi_def_cfa_offset 16
 935              	.LVL64:
 936              		.loc 15 166 1 view .LVU222
 937 00ac BDE87040 		pop	{r4, r5, r6, lr}
 938              		.cfi_restore 14
 939              		.cfi_restore 6
 940              		.cfi_restore 5
 941              		.cfi_restore 4
 942              		.cfi_def_cfa_offset 0
 133:Blink.cpp     ****         } else if(profile == 2){
 943              		.loc 15 133 24 view .LVU223
 944 00b0 FFF7FEBF 		b	_Z4Fuzzffff
 945              	.LVL65:
 946              	.L26:
 947              		.cfi_restore_state
 138:Blink.cpp     ****         if(profile == 0){
 948              		.loc 15 138 5 is_stmt 1 view .LVU224
 139:Blink.cpp     ****             return in + del1.Process(in);
 949              		.loc 15 139 9 view .LVU225
 139:Blink.cpp     ****             return in + del1.Process(in);
 950              		.loc 15 139 20 is_stmt 0 view .LVU226
 951 00b4 7B4B     		ldr	r3, .L50+24
 952 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139:Blink.cpp     ****             return in + del1.Process(in);
 953              		.loc 15 139 9 view .LVU227
 954 00b8 002B     		cmp	r3, #0
 955 00ba 00F08780 		beq	.L48
 141:Blink.cpp     ****             return in + del2.Process(in);
 956              		.loc 15 141 16 is_stmt 1 view .LVU228
 957 00be 012B     		cmp	r3, #1
 958 00c0 00F0DD80 		beq	.L49
 143:Blink.cpp     ****             return in + del3.Process(in);
 959              		.loc 15 143 16 view .LVU229
 960 00c4 022B     		cmp	r3, #2
 961 00c6 D5D1     		bne	.L38
 144:Blink.cpp     ****         }
 962              		.loc 15 144 13 view .LVU230
 963              	.LVL66:
 964              	.LBB438:
 965              	.LBI438:
  65:Blink.cpp     ****     {
 966              		.loc 15 65 11 view .LVU231
 967              	.LBB439:
  68:Blink.cpp     ****         del->SetDelay(currentDelay);
 968              		.loc 15 68 9 view .LVU232
 969              	.LBB440:
 970              	.LBI440:
 971              		.file 18 "../../DaisySP/Source/Utility/dsp.h"
   1:../../DaisySP/Source/Utility/dsp.h **** /*
   2:../../DaisySP/Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP/Source/Utility/dsp.h **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 46


   4:../../DaisySP/Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP/Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP/Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP/Source/Utility/dsp.h **** */
   8:../../DaisySP/Source/Utility/dsp.h **** 
   9:../../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../DaisySP/Source/Utility/dsp.h **** */
  11:../../DaisySP/Source/Utility/dsp.h **** #pragma once
  12:../../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../DaisySP/Source/Utility/dsp.h **** #include <cassert>
  15:../../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
  16:../../DaisySP/Source/Utility/dsp.h **** #include <random>
  17:../../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  18:../../DaisySP/Source/Utility/dsp.h **** 
  19:../../DaisySP/Source/Utility/dsp.h **** /** PIs
  20:../../DaisySP/Source/Utility/dsp.h **** */
  21:../../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../DaisySP/Source/Utility/dsp.h **** 
  29:../../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  30:../../DaisySP/Source/Utility/dsp.h **** {
  31:../../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../DaisySP/Source/Utility/dsp.h **** 
  34:../../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../DaisySP/Source/Utility/dsp.h **** 
  37:../../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  39:../../DaisySP/Source/Utility/dsp.h **** */
  40:../../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../DaisySP/Source/Utility/dsp.h **** {
  42:../../DaisySP/Source/Utility/dsp.h ****     float r;
  43:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  44:../../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:../../DaisySP/Source/Utility/dsp.h **** #else
  46:../../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  48:../../DaisySP/Source/Utility/dsp.h ****     return r;
  49:../../DaisySP/Source/Utility/dsp.h **** }
  50:../../DaisySP/Source/Utility/dsp.h **** 
  51:../../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../DaisySP/Source/Utility/dsp.h **** {
  53:../../DaisySP/Source/Utility/dsp.h ****     float r;
  54:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  55:../../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  56:../../DaisySP/Source/Utility/dsp.h **** #else
  57:../../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  59:../../DaisySP/Source/Utility/dsp.h ****     return r;
  60:../../DaisySP/Source/Utility/dsp.h **** }
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 47


  61:../../DaisySP/Source/Utility/dsp.h **** 
  62:../../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  63:../../DaisySP/Source/Utility/dsp.h **** */
  64:../../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:../../DaisySP/Source/Utility/dsp.h **** {
  66:../../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  67:../../DaisySP/Source/Utility/dsp.h **** }
  68:../../DaisySP/Source/Utility/dsp.h **** 
  69:../../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:../../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:../../DaisySP/Source/Utility/dsp.h **** These are approximations
  72:../../DaisySP/Source/Utility/dsp.h **** */
  73:../../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  74:../../DaisySP/Source/Utility/dsp.h **** {
  75:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  76:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  78:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:../../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  80:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  81:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  82:../../DaisySP/Source/Utility/dsp.h ****     return f;
  83:../../DaisySP/Source/Utility/dsp.h **** }
  84:../../DaisySP/Source/Utility/dsp.h **** 
  85:../../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:../../DaisySP/Source/Utility/dsp.h **** {
  87:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  88:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  90:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:../../DaisySP/Source/Utility/dsp.h ****     l >>= (n - 1);
  92:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  93:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  94:../../DaisySP/Source/Utility/dsp.h ****     return f;
  95:../../DaisySP/Source/Utility/dsp.h **** }
  96:../../DaisySP/Source/Utility/dsp.h **** 
  97:../../DaisySP/Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:../../DaisySP/Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:../../DaisySP/Source/Utility/dsp.h ****  */
 100:../../DaisySP/Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:../../DaisySP/Source/Utility/dsp.h **** {
 102:../../DaisySP/Source/Utility/dsp.h ****     return x - static_cast<int>(x);
 103:../../DaisySP/Source/Utility/dsp.h **** }
 104:../../DaisySP/Source/Utility/dsp.h **** 
 105:../../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:../../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
 107:../../DaisySP/Source/Utility/dsp.h **** */
 108:../../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
 109:../../DaisySP/Source/Utility/dsp.h **** {
 110:../../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:../../DaisySP/Source/Utility/dsp.h **** }
 112:../../DaisySP/Source/Utility/dsp.h **** 
 113:../../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
 114:../../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:../../DaisySP/Source/Utility/dsp.h **** */
 116:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:../../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 48


 118:../../DaisySP/Source/Utility/dsp.h ****     float frac;
 119:../../DaisySP/Source/Utility/dsp.h ****     int   exp;
 120:../../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:../../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 123:../../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 125:../../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 126:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 127:../../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:../../DaisySP/Source/Utility/dsp.h ****     f += exp;
 129:../../DaisySP/Source/Utility/dsp.h ****     return (f);
 130:../../DaisySP/Source/Utility/dsp.h **** }
 131:../../DaisySP/Source/Utility/dsp.h **** 
 132:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 133:../../DaisySP/Source/Utility/dsp.h **** {
 134:../../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:../../DaisySP/Source/Utility/dsp.h **** }
 136:../../DaisySP/Source/Utility/dsp.h **** 
 137:../../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 138:../../DaisySP/Source/Utility/dsp.h **** */
 139:../../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 140:../../DaisySP/Source/Utility/dsp.h **** {
 141:../../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 142:../../DaisySP/Source/Utility/dsp.h **** }
 143:../../DaisySP/Source/Utility/dsp.h **** 
 144:../../DaisySP/Source/Utility/dsp.h **** 
 145:../../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 146:../../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 147:../../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 148:../../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 149:../../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 150:../../DaisySP/Source/Utility/dsp.h **** */
 151:../../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 972              		.loc 18 151 13 view .LVU233
 973              	.LBB441:
 152:../../DaisySP/Source/Utility/dsp.h **** {
 153:../../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 974              		.loc 18 153 5 view .LVU234
 975              		.loc 18 153 9 is_stmt 0 view .LVU235
 976 00c8 7A49     		ldr	r1, .L50+40
 977              	.LVL67:
 978              	.L40:
 979              		.loc 18 153 9 view .LVU236
 980 00ca D1ED017A 		vldr.32	s15, [r1, #4]
 981              		.loc 18 153 24 view .LVU237
 982 00ce 91ED027A 		vldr.32	s14, [r1, #8]
 983              		.loc 18 153 9 view .LVU238
 984 00d2 9FED796A 		vldr.32	s12, .L50+44
 985              		.loc 18 153 24 view .LVU239
 986 00d6 37EE677A 		vsub.f32	s14, s14, s15
 987              	.LBE441:
 988              	.LBE440:
  69:Blink.cpp     **** 
 989              		.loc 15 69 9 view .LVU240
 990 00da 0B68     		ldr	r3, [r1]
  72:Blink.cpp     **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 49


 991              		.loc 15 72 19 view .LVU241
 992 00dc D1ED036A 		vldr.32	s13, [r1, #12]
 993              	.LBB444:
 994              	.LBB445:
  33:../../DaisySP/Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  34:../../DaisySP/Source/Utility/delayline.h ****     */
  35:../../DaisySP/Source/Utility/delayline.h ****     void Init() { Reset(); }
  36:../../DaisySP/Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  37:../../DaisySP/Source/Utility/delayline.h ****     */
  38:../../DaisySP/Source/Utility/delayline.h ****     void Reset()
  39:../../DaisySP/Source/Utility/delayline.h ****     {
  40:../../DaisySP/Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
  41:../../DaisySP/Source/Utility/delayline.h ****         {
  42:../../DaisySP/Source/Utility/delayline.h ****             line_[i] = T(0);
  43:../../DaisySP/Source/Utility/delayline.h ****         }
  44:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_ = 0;
  45:../../DaisySP/Source/Utility/delayline.h ****         delay_     = 1;
  46:../../DaisySP/Source/Utility/delayline.h ****     }
  47:../../DaisySP/Source/Utility/delayline.h **** 
  48:../../DaisySP/Source/Utility/delayline.h ****     /** sets the delay time in samples
  49:../../DaisySP/Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  50:../../DaisySP/Source/Utility/delayline.h ****     */
  51:../../DaisySP/Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  52:../../DaisySP/Source/Utility/delayline.h ****     {
  53:../../DaisySP/Source/Utility/delayline.h ****         frac_  = 0.0f;
  54:../../DaisySP/Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  55:../../DaisySP/Source/Utility/delayline.h ****     }
  56:../../DaisySP/Source/Utility/delayline.h **** 
  57:../../DaisySP/Source/Utility/delayline.h ****     /** sets the delay time in samples
  58:../../DaisySP/Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  59:../../DaisySP/Source/Utility/delayline.h ****     */
  60:../../DaisySP/Source/Utility/delayline.h ****     inline void SetDelay(float delay)
  61:../../DaisySP/Source/Utility/delayline.h ****     {
  62:../../DaisySP/Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  63:../../DaisySP/Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
  64:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  65:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
  66:../../DaisySP/Source/Utility/delayline.h ****     }
  67:../../DaisySP/Source/Utility/delayline.h **** 
  68:../../DaisySP/Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  69:../../DaisySP/Source/Utility/delayline.h ****     */
  70:../../DaisySP/Source/Utility/delayline.h ****     inline void Write(const T sample)
  71:../../DaisySP/Source/Utility/delayline.h ****     {
  72:../../DaisySP/Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  73:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  74:../../DaisySP/Source/Utility/delayline.h ****     }
  75:../../DaisySP/Source/Utility/delayline.h **** 
  76:../../DaisySP/Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  77:../../DaisySP/Source/Utility/delayline.h ****     */
  78:../../DaisySP/Source/Utility/delayline.h ****     inline const T Read() const
  79:../../DaisySP/Source/Utility/delayline.h ****     {
  80:../../DaisySP/Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
 995              		.loc 13 80 22 view .LVU242
 996 00e0 5D68     		ldr	r5, [r3, #4]
 997              	.LBE445:
 998              	.LBE444:
 999              	.LBB454:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 50


 1000              	.LBB442:
 1001              		.loc 18 153 9 view .LVU243
 1002 00e2 E7EE067A 		vfma.f32	s15, s14, s12
 1003              	.LBE442:
 1004              	.LBE454:
 1005              	.LBB455:
 1006              	.LBB456:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1007              		.loc 13 64 60 view .LVU244
 1008 00e6 754A     		ldr	r2, .L50+48
 1009              	.LBE456:
 1010              	.LBE455:
 1011              	.LBB461:
 1012              	.LBB446:
 1013              		.loc 13 80 43 view .LVU245
 1014 00e8 754E     		ldr	r6, .L50+52
 1015              	.LBE446:
 1016              	.LBE461:
 1017              	.LBB462:
 1018              	.LBB457:
  62:../../DaisySP/Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 1019              		.loc 13 62 17 view .LVU246
 1020 00ea BDEEE77A 		vcvt.s32.f32	s14, s15
 1021              	.LBE457:
 1022              	.LBE462:
 1023              	.LBB463:
 1024              	.LBB443:
 1025              		.loc 18 153 9 view .LVU247
 1026 00ee C1ED017A 		vstr.32	s15, [r1, #4]
 1027              	.LBE443:
 1028              	.LBE463:
  69:Blink.cpp     **** 
 1029              		.loc 15 69 9 is_stmt 1 view .LVU248
 1030              	.LVL68:
 1031              	.LBB464:
 1032              	.LBI455:
  60:../../DaisySP/Source/Utility/delayline.h ****     {
 1033              		.loc 13 60 17 view .LVU249
 1034              	.LBB458:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1035              		.loc 13 64 60 is_stmt 0 view .LVU250
 1036 00f2 17EE101A 		vmov	r1, s14	@ int
  63:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1037              		.loc 13 63 37 view .LVU251
 1038 00f6 B8EEC77A 		vcvt.f32.s32	s14, s14
 1039              	.LVL69:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1040              		.loc 13 64 60 view .LVU252
 1041 00fa 9142     		cmp	r1, r2
  63:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1042              		.loc 13 63 35 view .LVU253
 1043 00fc 77EEC77A 		vsub.f32	s15, s15, s14
 1044              	.LVL70:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1045              		.loc 13 64 60 view .LVU254
 1046 0100 28BF     		it	cs
 1047 0102 1146     		movcs	r1, r2
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 51


 1048              	.LVL71:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1049              		.loc 13 64 60 view .LVU255
 1050              	.LBE458:
 1051              	.LBE464:
 1052              	.LBB465:
 1053              	.LBB466:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1054              		.loc 13 73 45 view .LVU256
 1055 0104 2A44     		add	r2, r2, r5
 1056              	.LBE466:
 1057              	.LBE465:
 1058              	.LBB472:
 1059              	.LBB447:
 1060              		.loc 13 80 33 view .LVU257
 1061 0106 4819     		adds	r0, r1, r5
 1062              	.LBE447:
 1063              	.LBE472:
 1064              	.LBB473:
 1065              	.LBB459:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1066              		.loc 13 64 16 view .LVU258
 1067 0108 9960     		str	r1, [r3, #8]
 1068              	.LVL72:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1069              		.loc 13 64 16 view .LVU259
 1070              	.LBE459:
 1071              	.LBE473:
  71:Blink.cpp     ****         del->Write((feedback * read) + in);
 1072              		.loc 15 71 9 is_stmt 1 view .LVU260
 1073              	.LBB474:
 1074              	.LBI444:
  78:../../DaisySP/Source/Utility/delayline.h ****     {
 1075              		.loc 13 78 20 view .LVU261
 1076              	.LBB448:
 1077              		.loc 13 80 43 is_stmt 0 view .LVU262
 1078 010a 6E49     		ldr	r1, .L50+56
 1079              	.LBE448:
 1080              	.LBE474:
 1081              	.LBB475:
 1082              	.LBB467:
  72:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1083              		.loc 13 72 27 view .LVU263
 1084 010c 03EB8505 		add	r5, r3, r5, lsl #2
 1085              	.LBE467:
 1086              	.LBE475:
 1087              	.LBB476:
 1088              	.LBB449:
  81:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1089              		.loc 13 81 42 view .LVU264
 1090 0110 441C     		adds	r4, r0, #1
 1091              	.LBE449:
 1092              	.LBE476:
 1093              	.LBB477:
 1094              	.LBB460:
  63:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1095              		.loc 13 63 27 view .LVU265
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 52


 1096 0112 C3ED007A 		vstr.32	s15, [r3]
 1097              	.LBE460:
 1098              	.LBE477:
 1099              	.LBB478:
 1100              	.LBB450:
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1101              		.loc 13 80 43 view .LVU266
 1102 0116 A1FB00EC 		umull	lr, ip, r1, r0
 1103 011a 4FEADC2C 		lsr	ip, ip, #11
 1104 011e 06FB1C00 		mls	r0, r6, ip, r0
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1105              		.loc 13 80 11 view .LVU267
 1106 0122 03EB8000 		add	r0, r3, r0, lsl #2
 1107 0126 90ED030A 		vldr.32	s0, [r0, #12]
 1108              	.LVL73:
 1109              		.loc 13 81 47 view .LVU268
 1110 012a A1FB04C0 		umull	ip, r0, r1, r4
 1111              	.LBE450:
 1112              	.LBE478:
 1113              	.LBB479:
 1114              	.LBB468:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1115              		.loc 13 73 57 view .LVU269
 1116 012e A1FB02C1 		umull	ip, r1, r1, r2
 1117              	.LBE468:
 1118              	.LBE479:
 1119              	.LBB480:
 1120              	.LBB451:
 1121              		.loc 13 81 47 view .LVU270
 1122 0132 C00A     		lsrs	r0, r0, #11
 1123              	.LBE451:
 1124              	.LBE480:
 1125              	.LBB481:
 1126              	.LBB469:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1127              		.loc 13 73 57 view .LVU271
 1128 0134 C90A     		lsrs	r1, r1, #11
 1129              	.LBE469:
 1130              	.LBE481:
 1131              	.LBB482:
 1132              	.LBB452:
 1133              		.loc 13 81 47 view .LVU272
 1134 0136 06FB1044 		mls	r4, r6, r0, r4
 1135              	.LVL74:
 1136              		.loc 13 81 47 view .LVU273
 1137              	.LBE452:
 1138              	.LBE482:
 1139              	.LBB483:
 1140              	.LBB470:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1141              		.loc 13 73 57 view .LVU274
 1142 013a 06FB1122 		mls	r2, r6, r1, r2
 1143              	.LBE470:
 1144              	.LBE483:
 1145              	.LBB484:
 1146              	.LBB453:
 1147              		.loc 13 81 11 view .LVU275
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 53


 1148 013e 03EB8401 		add	r1, r3, r4, lsl #2
  82:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1149              		.loc 13 82 23 view .LVU276
 1150 0142 91ED037A 		vldr.32	s14, [r1, #12]
 1151 0146 37EE407A 		vsub.f32	s14, s14, s0
 1152              		.loc 13 82 30 view .LVU277
 1153 014a A7EE870A 		vfma.f32	s0, s15, s14
 1154              	.LVL75:
 1155              		.loc 13 82 30 view .LVU278
 1156              	.LBE453:
 1157              	.LBE484:
  72:Blink.cpp     **** 
 1158              		.loc 15 72 9 is_stmt 1 view .LVU279
  72:Blink.cpp     **** 
 1159              		.loc 15 72 19 is_stmt 0 view .LVU280
 1160 014e F0EE487A 		vmov.f32	s15, s16
 1161 0152 E6EE807A 		vfma.f32	s15, s13, s0
 1162              	.LVL76:
 1163              	.LBB485:
 1164              	.LBI465:
  70:../../DaisySP/Source/Utility/delayline.h ****     {
 1165              		.loc 13 70 17 is_stmt 1 view .LVU281
 1166              	.LBE485:
 1167              	.LBE439:
 1168              	.LBE438:
 144:Blink.cpp     ****         }
 1169              		.loc 15 144 40 is_stmt 0 view .LVU282
 1170 0156 38EE000A 		vadd.f32	s0, s16, s0
 1171              	.LVL77:
 1172              	.LBB488:
 1173              	.LBB487:
 1174              	.LBB486:
 1175              	.LBB471:
  72:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1176              		.loc 13 72 27 view .LVU283
 1177 015a C5ED037A 		vstr.32	s15, [r5, #12]
 1178              	.LVL78:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1179              		.loc 13 73 27 view .LVU284
 1180 015e 5A60     		str	r2, [r3, #4]
 1181              	.LVL79:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1182              		.loc 13 73 27 view .LVU285
 1183              	.LBE471:
 1184              	.LBE486:
  74:Blink.cpp     ****     }
 1185              		.loc 15 74 9 is_stmt 1 view .LVU286
  74:Blink.cpp     ****     }
 1186              		.loc 15 74 9 is_stmt 0 view .LVU287
 1187              	.LBE487:
 1188              	.LBE488:
 144:Blink.cpp     ****         }
 1189              		.loc 15 144 40 view .LVU288
 1190 0160 8AE7     		b	.L18
 1191              	.L25:
 147:Blink.cpp     ****         return ch.Process(in);
 1192              		.loc 15 147 5 is_stmt 1 view .LVU289
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 54


 148:Blink.cpp     ****         break;
 1193              		.loc 15 148 9 view .LVU290
 148:Blink.cpp     ****         break;
 1194              		.loc 15 148 26 is_stmt 0 view .LVU291
 1195 0162 B0EE480A 		vmov.f32	s0, s16
 1196 0166 5848     		ldr	r0, .L50+60
 1197              		.loc 15 166 1 view .LVU292
 1198 0168 BDEC028B 		vldm	sp!, {d8}
 1199              		.cfi_remember_state
 1200              		.cfi_restore 80
 1201              		.cfi_restore 81
 1202              		.cfi_def_cfa_offset 16
 1203              	.LVL80:
 1204              		.loc 15 166 1 view .LVU293
 1205 016c BDE87040 		pop	{r4, r5, r6, lr}
 1206              		.cfi_restore 14
 1207              		.cfi_restore 6
 1208              		.cfi_restore 5
 1209              		.cfi_restore 4
 1210              		.cfi_def_cfa_offset 0
 148:Blink.cpp     ****         break;
 1211              		.loc 15 148 26 view .LVU294
 1212 0170 FFF7FEBF 		b	_ZN7daisysp6Chorus7ProcessEf
 1213              	.LVL81:
 1214              	.L24:
 1215              		.cfi_restore_state
 149:Blink.cpp     ****     case 4:
 1216              		.loc 15 149 9 is_stmt 1 view .LVU295
 150:Blink.cpp     ****         return fl.Process(in);
 1217              		.loc 15 150 5 view .LVU296
 151:Blink.cpp     ****         break;
 1218              		.loc 15 151 9 view .LVU297
 151:Blink.cpp     ****         break;
 1219              		.loc 15 151 26 is_stmt 0 view .LVU298
 1220 0174 B0EE480A 		vmov.f32	s0, s16
 1221 0178 5448     		ldr	r0, .L50+64
 1222              		.loc 15 166 1 view .LVU299
 1223 017a BDEC028B 		vldm	sp!, {d8}
 1224              		.cfi_remember_state
 1225              		.cfi_restore 80
 1226              		.cfi_restore 81
 1227              		.cfi_def_cfa_offset 16
 1228              	.LVL82:
 1229              		.loc 15 166 1 view .LVU300
 1230 017e BDE87040 		pop	{r4, r5, r6, lr}
 1231              		.cfi_restore 14
 1232              		.cfi_restore 6
 1233              		.cfi_restore 5
 1234              		.cfi_restore 4
 1235              		.cfi_def_cfa_offset 0
 151:Blink.cpp     ****         break;
 1236              		.loc 15 151 26 view .LVU301
 1237 0182 FFF7FEBF 		b	_ZN7daisysp7Flanger7ProcessEf
 1238              	.LVL83:
 1239              	.L23:
 1240              		.cfi_restore_state
 152:Blink.cpp     ****     case 5:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 55


 1241              		.loc 15 152 9 is_stmt 1 view .LVU302
 153:Blink.cpp     ****         return wahflt.Process(in);
 1242              		.loc 15 153 5 view .LVU303
 154:Blink.cpp     ****         break;
 1243              		.loc 15 154 9 view .LVU304
 154:Blink.cpp     ****         break;
 1244              		.loc 15 154 30 is_stmt 0 view .LVU305
 1245 0186 B0EE480A 		vmov.f32	s0, s16
 1246 018a 4448     		ldr	r0, .L50+16
 1247              		.loc 15 166 1 view .LVU306
 1248 018c BDEC028B 		vldm	sp!, {d8}
 1249              		.cfi_remember_state
 1250              		.cfi_restore 80
 1251              		.cfi_restore 81
 1252              		.cfi_def_cfa_offset 16
 1253              	.LVL84:
 1254              		.loc 15 166 1 view .LVU307
 1255 0190 BDE87040 		pop	{r4, r5, r6, lr}
 1256              		.cfi_restore 14
 1257              		.cfi_restore 6
 1258              		.cfi_restore 5
 1259              		.cfi_restore 4
 1260              		.cfi_def_cfa_offset 0
 154:Blink.cpp     ****         break;
 1261              		.loc 15 154 30 view .LVU308
 1262 0194 FFF7FEBF 		b	_ZN7daisysp12LadderFilter7ProcessEf
 1263              	.LVL85:
 1264              	.L22:
 1265              		.cfi_restore_state
 155:Blink.cpp     ****     case 6:
 1266              		.loc 15 155 9 is_stmt 1 view .LVU309
 156:Blink.cpp     ****         return trem.Process(in);
 1267              		.loc 15 156 5 view .LVU310
 157:Blink.cpp     ****         break;
 1268              		.loc 15 157 9 view .LVU311
 157:Blink.cpp     ****         break;
 1269              		.loc 15 157 28 is_stmt 0 view .LVU312
 1270 0198 B0EE480A 		vmov.f32	s0, s16
 1271 019c 4C48     		ldr	r0, .L50+68
 1272              		.loc 15 166 1 view .LVU313
 1273 019e BDEC028B 		vldm	sp!, {d8}
 1274              		.cfi_remember_state
 1275              		.cfi_restore 80
 1276              		.cfi_restore 81
 1277              		.cfi_def_cfa_offset 16
 1278              	.LVL86:
 1279              		.loc 15 166 1 view .LVU314
 1280 01a2 BDE87040 		pop	{r4, r5, r6, lr}
 1281              		.cfi_restore 14
 1282              		.cfi_restore 6
 1283              		.cfi_restore 5
 1284              		.cfi_restore 4
 1285              		.cfi_def_cfa_offset 0
 157:Blink.cpp     ****         break;
 1286              		.loc 15 157 28 view .LVU315
 1287 01a6 FFF7FEBF 		b	_ZN7daisysp7Tremolo7ProcessEf
 1288              	.LVL87:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 56


 1289              	.L45:
 1290              		.cfi_restore_state
 126:Blink.cpp     ****         }
 1291              		.loc 15 126 13 is_stmt 1 view .LVU316
 126:Blink.cpp     ****         }
 1292              		.loc 15 126 27 is_stmt 0 view .LVU317
 1293 01aa 4A49     		ldr	r1, .L50+72
 1294 01ac 4A4A     		ldr	r2, .L50+76
 1295 01ae 4B4B     		ldr	r3, .L50+80
 1296              	.L41:
 124:Blink.cpp     ****         } else if(profile == 2){
 1297              		.loc 15 124 27 view .LVU318
 1298 01b0 B0EE480A 		vmov.f32	s0, s16
 1299 01b4 D1ED001A 		vldr.32	s3, [r1]
 1300 01b8 92ED001A 		vldr.32	s2, [r2]
 1301 01bc D3ED000A 		vldr.32	s1, [r3]
 1302              		.loc 15 166 1 view .LVU319
 1303 01c0 BDEC028B 		vldm	sp!, {d8}
 1304              		.cfi_remember_state
 1305              		.cfi_restore 80
 1306              		.cfi_restore 81
 1307              		.cfi_def_cfa_offset 16
 1308              	.LVL88:
 1309              		.loc 15 166 1 view .LVU320
 1310 01c4 BDE87040 		pop	{r4, r5, r6, lr}
 1311              		.cfi_restore 14
 1312              		.cfi_restore 6
 1313              		.cfi_restore 5
 1314              		.cfi_restore 4
 1315              		.cfi_def_cfa_offset 0
 124:Blink.cpp     ****         } else if(profile == 2){
 1316              		.loc 15 124 27 view .LVU321
 1317 01c8 FFF7FEBF 		b	_Z7distortffff
 1318              	.LVL89:
 1319              	.L48:
 1320              		.cfi_restore_state
 140:Blink.cpp     ****         } else if(profile == 1){
 1321              		.loc 15 140 13 is_stmt 1 view .LVU322
 1322              	.LBB489:
 1323              	.LBI489:
  65:Blink.cpp     ****     {
 1324              		.loc 15 65 11 view .LVU323
 1325              	.LBB490:
  68:Blink.cpp     ****         del->SetDelay(currentDelay);
 1326              		.loc 15 68 9 view .LVU324
 1327              	.LBB491:
 1328              	.LBI491:
 151:../../DaisySP/Source/Utility/dsp.h **** {
 1329              		.loc 18 151 13 view .LVU325
 1330              	.LBB492:
 1331              		.loc 18 153 5 view .LVU326
 1332              		.loc 18 153 9 is_stmt 0 view .LVU327
 1333 01cc 4449     		ldr	r1, .L50+84
 1334 01ce 9FED3A6A 		vldr.32	s12, .L50+44
 1335 01d2 D1ED017A 		vldr.32	s15, [r1, #4]
 1336              		.loc 18 153 24 view .LVU328
 1337 01d6 91ED027A 		vldr.32	s14, [r1, #8]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 57


 1338              	.LBE492:
 1339              	.LBE491:
  69:Blink.cpp     **** 
 1340              		.loc 15 69 9 view .LVU329
 1341 01da 0B68     		ldr	r3, [r1]
 1342              	.LBB496:
 1343              	.LBB493:
 1344              		.loc 18 153 24 view .LVU330
 1345 01dc 37EE677A 		vsub.f32	s14, s14, s15
 1346              	.LBE493:
 1347              	.LBE496:
  72:Blink.cpp     **** 
 1348              		.loc 15 72 19 view .LVU331
 1349 01e0 D1ED036A 		vldr.32	s13, [r1, #12]
 1350              	.LBB497:
 1351              	.LBB498:
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1352              		.loc 13 80 22 view .LVU332
 1353 01e4 5C68     		ldr	r4, [r3, #4]
 1354              	.LBE498:
 1355              	.LBE497:
 1356              	.LBB506:
 1357              	.LBB507:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1358              		.loc 13 64 60 view .LVU333
 1359 01e6 354A     		ldr	r2, .L50+48
 1360              	.LBE507:
 1361              	.LBE506:
 1362              	.LBB512:
 1363              	.LBB494:
 1364              		.loc 18 153 9 view .LVU334
 1365 01e8 E7EE067A 		vfma.f32	s15, s14, s12
 1366              	.LBE494:
 1367              	.LBE512:
 1368              	.LBB513:
 1369              	.LBB499:
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1370              		.loc 13 80 43 view .LVU335
 1371 01ec 344D     		ldr	r5, .L50+52
 1372              	.LBE499:
 1373              	.LBE513:
 1374              	.LBB514:
 1375              	.LBB515:
  72:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1376              		.loc 13 72 27 view .LVU336
 1377 01ee 03EB840C 		add	ip, r3, r4, lsl #2
 1378              	.LBE515:
 1379              	.LBE514:
 1380              	.LBB521:
 1381              	.LBB508:
  62:../../DaisySP/Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 1382              		.loc 13 62 17 view .LVU337
 1383 01f2 BDEEE77A 		vcvt.s32.f32	s14, s15
 1384              	.LBE508:
 1385              	.LBE521:
 1386              	.LBB522:
 1387              	.LBB495:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 58


 1388              		.loc 18 153 9 view .LVU338
 1389 01f6 C1ED017A 		vstr.32	s15, [r1, #4]
 1390              	.LVL90:
 1391              		.loc 18 153 9 view .LVU339
 1392              	.LBE495:
 1393              	.LBE522:
  69:Blink.cpp     **** 
 1394              		.loc 15 69 9 is_stmt 1 view .LVU340
 1395              	.LBB523:
 1396              	.LBI506:
  60:../../DaisySP/Source/Utility/delayline.h ****     {
 1397              		.loc 13 60 17 view .LVU341
 1398              	.LBB509:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1399              		.loc 13 64 60 is_stmt 0 view .LVU342
 1400 01fa 17EE101A 		vmov	r1, s14	@ int
  63:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1401              		.loc 13 63 37 view .LVU343
 1402 01fe B8EEC77A 		vcvt.f32.s32	s14, s14
 1403              	.LVL91:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1404              		.loc 13 64 60 view .LVU344
 1405 0202 9142     		cmp	r1, r2
  63:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1406              		.loc 13 63 35 view .LVU345
 1407 0204 77EEC77A 		vsub.f32	s15, s15, s14
 1408              	.LVL92:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1409              		.loc 13 64 60 view .LVU346
 1410 0208 28BF     		it	cs
 1411 020a 1146     		movcs	r1, r2
 1412              	.LVL93:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1413              		.loc 13 64 60 view .LVU347
 1414              	.LBE509:
 1415              	.LBE523:
 1416              	.LBB524:
 1417              	.LBB516:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1418              		.loc 13 73 45 view .LVU348
 1419 020c 2244     		add	r2, r2, r4
 1420              	.LBE516:
 1421              	.LBE524:
 1422              	.LBB525:
 1423              	.LBB500:
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1424              		.loc 13 80 33 view .LVU349
 1425 020e 0819     		adds	r0, r1, r4
 1426              	.LBE500:
 1427              	.LBE525:
 1428              	.LBB526:
 1429              	.LBB510:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
 1430              		.loc 13 64 16 view .LVU350
 1431 0210 9960     		str	r1, [r3, #8]
 1432              	.LVL94:
  64:../../DaisySP/Source/Utility/delayline.h ****                                                            : max_size - 1;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 59


 1433              		.loc 13 64 16 view .LVU351
 1434              	.LBE510:
 1435              	.LBE526:
  71:Blink.cpp     ****         del->Write((feedback * read) + in);
 1436              		.loc 15 71 9 is_stmt 1 view .LVU352
 1437              	.LBB527:
 1438              	.LBI497:
  78:../../DaisySP/Source/Utility/delayline.h ****     {
 1439              		.loc 13 78 20 view .LVU353
 1440              	.LBB501:
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1441              		.loc 13 80 43 is_stmt 0 view .LVU354
 1442 0212 2C49     		ldr	r1, .L50+56
  81:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1443              		.loc 13 81 42 view .LVU355
 1444 0214 441C     		adds	r4, r0, #1
 1445              	.LBE501:
 1446              	.LBE527:
 1447              	.LBB528:
 1448              	.LBB511:
  63:../../DaisySP/Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1449              		.loc 13 63 27 view .LVU356
 1450 0216 C3ED007A 		vstr.32	s15, [r3]
 1451              	.LBE511:
 1452              	.LBE528:
 1453              	.LBB529:
 1454              	.LBB502:
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1455              		.loc 13 80 43 view .LVU357
 1456 021a A1FB006E 		umull	r6, lr, r1, r0
 1457 021e 4FEADE2E 		lsr	lr, lr, #11
 1458 0222 05FB1E00 		mls	r0, r5, lr, r0
  80:../../DaisySP/Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1459              		.loc 13 80 11 view .LVU358
 1460 0226 03EB8000 		add	r0, r3, r0, lsl #2
 1461 022a 90ED030A 		vldr.32	s0, [r0, #12]
 1462              	.LVL95:
  81:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1463              		.loc 13 81 47 view .LVU359
 1464 022e A1FB0460 		umull	r6, r0, r1, r4
 1465              	.LBE502:
 1466              	.LBE529:
 1467              	.LBB530:
 1468              	.LBB517:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1469              		.loc 13 73 57 view .LVU360
 1470 0232 A1FB0261 		umull	r6, r1, r1, r2
 1471              	.LBE517:
 1472              	.LBE530:
 1473              	.LBB531:
 1474              	.LBB503:
  81:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1475              		.loc 13 81 47 view .LVU361
 1476 0236 C00A     		lsrs	r0, r0, #11
 1477              	.LBE503:
 1478              	.LBE531:
 1479              	.LBB532:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 60


 1480              	.LBB518:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1481              		.loc 13 73 57 view .LVU362
 1482 0238 C90A     		lsrs	r1, r1, #11
 1483              	.LBE518:
 1484              	.LBE532:
 1485              	.LBB533:
 1486              	.LBB504:
  81:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1487              		.loc 13 81 47 view .LVU363
 1488 023a 05FB1044 		mls	r4, r5, r0, r4
 1489              	.LVL96:
  81:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1490              		.loc 13 81 47 view .LVU364
 1491              	.LBE504:
 1492              	.LBE533:
 1493              	.LBB534:
 1494              	.LBB519:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1495              		.loc 13 73 57 view .LVU365
 1496 023e 05FB1121 		mls	r1, r5, r1, r2
 1497              	.LBE519:
 1498              	.LBE534:
 1499              	.LBB535:
 1500              	.LBB505:
  81:../../DaisySP/Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1501              		.loc 13 81 11 view .LVU366
 1502 0242 03EB8404 		add	r4, r3, r4, lsl #2
 1503              		.loc 13 82 23 view .LVU367
 1504 0246 94ED037A 		vldr.32	s14, [r4, #12]
 1505 024a 37EE407A 		vsub.f32	s14, s14, s0
 1506              		.loc 13 82 30 view .LVU368
 1507 024e A7EE870A 		vfma.f32	s0, s15, s14
 1508              	.LVL97:
 1509              		.loc 13 82 30 view .LVU369
 1510              	.LBE505:
 1511              	.LBE535:
  72:Blink.cpp     **** 
 1512              		.loc 15 72 9 is_stmt 1 view .LVU370
  72:Blink.cpp     **** 
 1513              		.loc 15 72 19 is_stmt 0 view .LVU371
 1514 0252 F0EE487A 		vmov.f32	s15, s16
 1515 0256 E6EE807A 		vfma.f32	s15, s13, s0
 1516              	.LVL98:
 1517              	.LBB536:
 1518              	.LBI514:
  70:../../DaisySP/Source/Utility/delayline.h ****     {
 1519              		.loc 13 70 17 is_stmt 1 view .LVU372
 1520              	.LBE536:
 1521              	.LBE490:
 1522              	.LBE489:
 140:Blink.cpp     ****         } else if(profile == 1){
 1523              		.loc 15 140 40 is_stmt 0 view .LVU373
 1524 025a 38EE000A 		vadd.f32	s0, s16, s0
 1525              	.LVL99:
 1526              	.LBB539:
 1527              	.LBB538:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 61


 1528              	.LBB537:
 1529              	.LBB520:
  72:../../DaisySP/Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1530              		.loc 13 72 27 view .LVU374
 1531 025e CCED037A 		vstr.32	s15, [ip, #12]
 1532              	.LVL100:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1533              		.loc 13 73 27 view .LVU375
 1534 0262 5960     		str	r1, [r3, #4]
 1535              	.LVL101:
  73:../../DaisySP/Source/Utility/delayline.h ****     }
 1536              		.loc 13 73 27 view .LVU376
 1537              	.LBE520:
 1538              	.LBE537:
  74:Blink.cpp     ****     }
 1539              		.loc 15 74 9 is_stmt 1 view .LVU377
  74:Blink.cpp     ****     }
 1540              		.loc 15 74 9 is_stmt 0 view .LVU378
 1541              	.LBE538:
 1542              	.LBE539:
 140:Blink.cpp     ****         } else if(profile == 1){
 1543              		.loc 15 140 40 view .LVU379
 1544 0264 08E7     		b	.L18
 1545              	.L46:
 131:Blink.cpp     ****         } else if(profile == 1){
 1546              		.loc 15 131 13 is_stmt 1 view .LVU380
 131:Blink.cpp     ****         } else if(profile == 1){
 1547              		.loc 15 131 24 is_stmt 0 view .LVU381
 1548 0266 1F49     		ldr	r1, .L50+88
 1549 0268 1F4A     		ldr	r2, .L50+92
 1550 026a 204B     		ldr	r3, .L50+96
 1551 026c 14E7     		b	.L42
 1552              	.L43:
 122:Blink.cpp     ****         } else if(profile == 1){
 1553              		.loc 15 122 13 is_stmt 1 view .LVU382
 122:Blink.cpp     ****         } else if(profile == 1){
 1554              		.loc 15 122 27 is_stmt 0 view .LVU383
 1555 026e 2049     		ldr	r1, .L50+100
 1556 0270 204A     		ldr	r2, .L50+104
 1557 0272 214B     		ldr	r3, .L50+108
 1558 0274 9CE7     		b	.L41
 1559              	.L44:
 124:Blink.cpp     ****         } else if(profile == 2){
 1560              		.loc 15 124 13 is_stmt 1 view .LVU384
 124:Blink.cpp     ****         } else if(profile == 2){
 1561              		.loc 15 124 27 is_stmt 0 view .LVU385
 1562 0276 2149     		ldr	r1, .L50+112
 1563 0278 214A     		ldr	r2, .L50+116
 1564 027a 224B     		ldr	r3, .L50+120
 1565 027c 98E7     		b	.L41
 1566              	.L49:
 142:Blink.cpp     ****         } else if(profile == 2){
 1567              		.loc 15 142 13 is_stmt 1 view .LVU386
 1568              	.LVL102:
 1569              	.LBB540:
 1570              	.LBI540:
  65:Blink.cpp     ****     {
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 62


 1571              		.loc 15 65 11 view .LVU387
 1572              	.LBB541:
  68:Blink.cpp     ****         del->SetDelay(currentDelay);
 1573              		.loc 15 68 9 view .LVU388
 1574              	.LBB542:
 1575              	.LBI542:
 151:../../DaisySP/Source/Utility/dsp.h **** {
 1576              		.loc 18 151 13 view .LVU389
 1577              	.LBB543:
 1578              		.loc 18 153 5 view .LVU390
 1579              		.loc 18 153 9 is_stmt 0 view .LVU391
 1580 027e 2249     		ldr	r1, .L50+124
 1581 0280 23E7     		b	.L40
 1582              	.LVL103:
 1583              	.L47:
 1584              		.loc 18 153 9 view .LVU392
 1585              	.LBE543:
 1586              	.LBE542:
 1587              	.LBE541:
 1588              	.LBE540:
 133:Blink.cpp     ****         } else if(profile == 2){
 1589              		.loc 15 133 13 is_stmt 1 view .LVU393
 133:Blink.cpp     ****         } else if(profile == 2){
 1590              		.loc 15 133 24 is_stmt 0 view .LVU394
 1591 0282 2249     		ldr	r1, .L50+128
 1592 0284 224A     		ldr	r2, .L50+132
 1593 0286 234B     		ldr	r3, .L50+136
 1594 0288 06E7     		b	.L42
 1595              	.L51:
 1596 028a 00BF     		.align	2
 1597              	.L50:
 1598 028c 18000000 		.word	.LANCHOR2+24
 1599 0290 00009644 		.word	1150681088
 1600 0294 0000C843 		.word	1137180672
 1601 0298 00000000 		.word	.LANCHOR3
 1602 029c 00000000 		.word	.LANCHOR4
 1603 02a0 00000000 		.word	ph
 1604 02a4 00000000 		.word	.LANCHOR5
 1605 02a8 00000000 		.word	.LANCHOR21
 1606 02ac 00000000 		.word	.LANCHOR22
 1607 02b0 00000000 		.word	.LANCHOR23
 1608 02b4 00000000 		.word	.LANCHOR26
 1609 02b8 17B75139 		.word	961656599
 1610 02bc FF760100 		.word	95999
 1611 02c0 00770100 		.word	96000
 1612 02c4 F1197605 		.word	91625969
 1613 02c8 00000000 		.word	ch
 1614 02cc 00000000 		.word	.LANCHOR27
 1615 02d0 00000000 		.word	.LANCHOR28
 1616 02d4 00000000 		.word	.LANCHOR12
 1617 02d8 00000000 		.word	.LANCHOR13
 1618 02dc 00000000 		.word	.LANCHOR14
 1619 02e0 00000000 		.word	.LANCHOR24
 1620 02e4 00000000 		.word	.LANCHOR15
 1621 02e8 00000000 		.word	.LANCHOR16
 1622 02ec 00000000 		.word	.LANCHOR17
 1623 02f0 00000000 		.word	.LANCHOR6
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 63


 1624 02f4 00000000 		.word	.LANCHOR7
 1625 02f8 00000000 		.word	.LANCHOR8
 1626 02fc 00000000 		.word	.LANCHOR9
 1627 0300 00000000 		.word	.LANCHOR10
 1628 0304 00000000 		.word	.LANCHOR11
 1629 0308 00000000 		.word	.LANCHOR25
 1630 030c 00000000 		.word	.LANCHOR18
 1631 0310 00000000 		.word	.LANCHOR19
 1632 0314 00000000 		.word	.LANCHOR20
 1633              		.cfi_endproc
 1634              	.LFE4898:
 1636              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 1637              		.align	1
 1638              		.p2align 2,,3
 1639              		.global	_Z13AudioCallbackPKPKfPPfj
 1640              		.syntax unified
 1641              		.thumb
 1642              		.thumb_func
 1643              		.fpu fpv5-d16
 1645              	_Z13AudioCallbackPKPKfPPfj:
 1646              	.LVL104:
 1647              	.LFB4907:
 167:Blink.cpp     **** 
 168:Blink.cpp     **** //get effect parameters for each effect for each profile to process as well as send to screen when 
 169:Blink.cpp     **** float getEffectParams(uint8_t num){
 170:Blink.cpp     ****     if(profile == 0){
 171:Blink.cpp     ****         switch (effectCount)
 172:Blink.cpp     ****         {
 173:Blink.cpp     ****         case 0://distortion
 174:Blink.cpp     ****             if(num == 0) {
 175:Blink.cpp     ****                 return p1dtone;
 176:Blink.cpp     ****             } else if(num == 1){
 177:Blink.cpp     ****                 return p1doutgain;
 178:Blink.cpp     ****             } else {
 179:Blink.cpp     ****                 return p1dingain;
 180:Blink.cpp     ****             }
 181:Blink.cpp     ****             break;
 182:Blink.cpp     ****         case 1://fuzz
 183:Blink.cpp     ****             if(num == 0) {
 184:Blink.cpp     ****                 return p1fingain;
 185:Blink.cpp     ****             } else if(num == 1){
 186:Blink.cpp     ****                 return p1fuzz;
 187:Blink.cpp     ****             } else {
 188:Blink.cpp     ****                 return p1ftone;
 189:Blink.cpp     ****             }
 190:Blink.cpp     ****             break;
 191:Blink.cpp     ****         case 2://delay
 192:Blink.cpp     ****             if(num == 0) {
 193:Blink.cpp     ****                 return 0;
 194:Blink.cpp     ****             } else if(num == 1){
 195:Blink.cpp     ****                 return del1.feedback;
 196:Blink.cpp     ****             } else {
 197:Blink.cpp     ****                 return del1.delayTarget/(48000.0*2);
 198:Blink.cpp     ****             }
 199:Blink.cpp     ****             break;
 200:Blink.cpp     ****         case 3://chorus
 201:Blink.cpp     ****             if(num == 0) {
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 64


 202:Blink.cpp     ****                 return p1chDelay;
 203:Blink.cpp     ****             } else if(num == 1){
 204:Blink.cpp     ****                 return p1chDepth;
 205:Blink.cpp     ****             } else {
 206:Blink.cpp     ****                 return p1chFreq;
 207:Blink.cpp     ****             }
 208:Blink.cpp     ****             break;
 209:Blink.cpp     ****         case 4://flanger
 210:Blink.cpp     ****             if(num == 0) {
 211:Blink.cpp     ****                 return p1flDelay;
 212:Blink.cpp     ****             } else if(num == 1){
 213:Blink.cpp     ****                 return p1flDepth;
 214:Blink.cpp     ****             } else {
 215:Blink.cpp     ****                 return p1flFreq;
 216:Blink.cpp     ****             }
 217:Blink.cpp     ****             break;
 218:Blink.cpp     ****         case 5://wah
 219:Blink.cpp     ****             return 0;
 220:Blink.cpp     ****             break;
 221:Blink.cpp     ****         case 6://tremolo
 222:Blink.cpp     ****             if(num == 0) {
 223:Blink.cpp     ****                 return 0;
 224:Blink.cpp     ****             } else if(num == 1){
 225:Blink.cpp     ****                 return p1tremDepth;
 226:Blink.cpp     ****             } else {
 227:Blink.cpp     ****                 return p1tremFreq;
 228:Blink.cpp     ****             }
 229:Blink.cpp     ****             break;
 230:Blink.cpp     ****         case 7://phaser
 231:Blink.cpp     ****             if(num == 0) {
 232:Blink.cpp     ****                 return 0;
 233:Blink.cpp     ****             } else if(num == 1){
 234:Blink.cpp     ****                 return p1phFreq;
 235:Blink.cpp     ****             } else {
 236:Blink.cpp     ****                 return p1phdepth;
 237:Blink.cpp     ****             }
 238:Blink.cpp     ****             break;
 239:Blink.cpp     ****         }
 240:Blink.cpp     ****     } else if(profile == 1){
 241:Blink.cpp     ****         switch (effectCount)
 242:Blink.cpp     ****         {
 243:Blink.cpp     ****         case 0://distortion
 244:Blink.cpp     ****             if(num == 0) {
 245:Blink.cpp     ****                 return p2dtone;
 246:Blink.cpp     ****             } else if(num == 1){
 247:Blink.cpp     ****                 return p2doutgain;
 248:Blink.cpp     ****             } else {
 249:Blink.cpp     ****                 return p2dingain;
 250:Blink.cpp     ****             }
 251:Blink.cpp     ****             break;
 252:Blink.cpp     ****         case 1://fuzz
 253:Blink.cpp     ****             if(num == 0) {
 254:Blink.cpp     ****                 return p2fingain;
 255:Blink.cpp     ****             } else if(num == 1){
 256:Blink.cpp     ****                 return p2fuzz;
 257:Blink.cpp     ****             } else {
 258:Blink.cpp     ****                 return p2ftone;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 65


 259:Blink.cpp     ****             }
 260:Blink.cpp     ****             break;
 261:Blink.cpp     ****         case 2://delay
 262:Blink.cpp     ****             if(num == 0) {
 263:Blink.cpp     ****                 return 0;
 264:Blink.cpp     ****             } else if(num == 1){
 265:Blink.cpp     ****                 return del2.feedback;
 266:Blink.cpp     ****             } else {
 267:Blink.cpp     ****                 return del2.delayTarget/(48000.0*2);
 268:Blink.cpp     ****             }
 269:Blink.cpp     ****             break;
 270:Blink.cpp     ****         case 3://chorus
 271:Blink.cpp     ****             if(num == 0) {
 272:Blink.cpp     ****                 return p2chDelay;
 273:Blink.cpp     ****             } else if(num == 1){
 274:Blink.cpp     ****                 return p2chDepth;
 275:Blink.cpp     ****             } else {
 276:Blink.cpp     ****                 return p2chFreq;
 277:Blink.cpp     ****             }
 278:Blink.cpp     ****             break;
 279:Blink.cpp     ****         case 4://flanger
 280:Blink.cpp     ****             if(num == 0) {
 281:Blink.cpp     ****                 return p2flDelay;
 282:Blink.cpp     ****             } else if(num == 1){
 283:Blink.cpp     ****                 return p2flDepth;
 284:Blink.cpp     ****             } else {
 285:Blink.cpp     ****                 return p2flFreq;
 286:Blink.cpp     ****             }
 287:Blink.cpp     ****             break;
 288:Blink.cpp     ****         case 5://wah
 289:Blink.cpp     ****             return 0;
 290:Blink.cpp     ****             break;
 291:Blink.cpp     ****         case 6://tremolo
 292:Blink.cpp     ****             if(num == 0) {
 293:Blink.cpp     ****                 return 0;
 294:Blink.cpp     ****             } else if(num == 1){
 295:Blink.cpp     ****                 return p2tremDepth;
 296:Blink.cpp     ****             } else {
 297:Blink.cpp     ****                 return p2tremFreq;
 298:Blink.cpp     ****             }
 299:Blink.cpp     ****             break;
 300:Blink.cpp     ****         case 7://phaser
 301:Blink.cpp     ****             if(num == 0) {
 302:Blink.cpp     ****                 return 0;
 303:Blink.cpp     ****             } else if(num == 1){
 304:Blink.cpp     ****                 return p2phFreq;
 305:Blink.cpp     ****             } else {
 306:Blink.cpp     ****                 return p2phdepth;
 307:Blink.cpp     ****             }
 308:Blink.cpp     ****             break;
 309:Blink.cpp     ****         }
 310:Blink.cpp     ****     } else if (profile == 2){
 311:Blink.cpp     ****         switch (effectCount)
 312:Blink.cpp     ****         {
 313:Blink.cpp     ****         case 0://distortion
 314:Blink.cpp     ****             if(num == 0) {
 315:Blink.cpp     ****                 return p3dtone;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 66


 316:Blink.cpp     ****             } else if(num == 1){
 317:Blink.cpp     ****                 return p3doutgain;
 318:Blink.cpp     ****             } else {
 319:Blink.cpp     ****                 return p3dingain;
 320:Blink.cpp     ****             }
 321:Blink.cpp     ****             break;
 322:Blink.cpp     ****         case 1://fuzz
 323:Blink.cpp     ****             if(num == 0) {
 324:Blink.cpp     ****                 return p3fingain;
 325:Blink.cpp     ****             } else if(num == 1){
 326:Blink.cpp     ****                 return p3fuzz;
 327:Blink.cpp     ****             } else {
 328:Blink.cpp     ****                 return p3ftone;
 329:Blink.cpp     ****             }
 330:Blink.cpp     ****             break;
 331:Blink.cpp     ****         case 2://delay
 332:Blink.cpp     ****             if(num == 0) {
 333:Blink.cpp     ****                 return 0;
 334:Blink.cpp     ****             } else if(num == 1){
 335:Blink.cpp     ****                 return del3.feedback;
 336:Blink.cpp     ****             } else {
 337:Blink.cpp     ****                 return del3.delayTarget/(48000.0*2);
 338:Blink.cpp     ****             }
 339:Blink.cpp     ****             break;
 340:Blink.cpp     ****         case 3://chorus
 341:Blink.cpp     ****             if(num == 0) {
 342:Blink.cpp     ****                 return p3chDelay;
 343:Blink.cpp     ****             } else if(num == 1){
 344:Blink.cpp     ****                 return p3chDepth;
 345:Blink.cpp     ****             } else {
 346:Blink.cpp     ****                 return p3chFreq;
 347:Blink.cpp     ****             }
 348:Blink.cpp     ****             break;
 349:Blink.cpp     ****         case 4://flanger
 350:Blink.cpp     ****             if(num == 0) {
 351:Blink.cpp     ****                 return p3flDelay;
 352:Blink.cpp     ****             } else if(num == 1){
 353:Blink.cpp     ****                 return p3flDepth;
 354:Blink.cpp     ****             } else {
 355:Blink.cpp     ****                 return p3flFreq;
 356:Blink.cpp     ****             }
 357:Blink.cpp     ****             break;
 358:Blink.cpp     ****         case 5://wah
 359:Blink.cpp     ****             return 0;
 360:Blink.cpp     ****             break;
 361:Blink.cpp     ****         case 6://tremolo
 362:Blink.cpp     ****             if(num == 0) {
 363:Blink.cpp     ****                 return 0;
 364:Blink.cpp     ****             } else if(num == 1){
 365:Blink.cpp     ****                 return p3tremDepth;
 366:Blink.cpp     ****             } else {
 367:Blink.cpp     ****                 return p3tremFreq;
 368:Blink.cpp     ****             }
 369:Blink.cpp     ****             break;
 370:Blink.cpp     ****         case 7://phaser
 371:Blink.cpp     ****             if(num == 0) {
 372:Blink.cpp     ****                 return 0;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 67


 373:Blink.cpp     ****             } else if(num == 1){
 374:Blink.cpp     ****                 return p3phFreq;
 375:Blink.cpp     ****             } else {
 376:Blink.cpp     ****                 return p3phdepth;
 377:Blink.cpp     ****             }
 378:Blink.cpp     ****             break;
 379:Blink.cpp     ****         }   
 380:Blink.cpp     ****     }
 381:Blink.cpp     ****     return 0;
 382:Blink.cpp     **** }
 383:Blink.cpp     **** //reads the knobs and sets the params for later use
 384:Blink.cpp     **** void setEffectPrams(){
 385:Blink.cpp     ****     if(profile == 0) {
 386:Blink.cpp     ****         switch (effectCount)
 387:Blink.cpp     ****         {
 388:Blink.cpp     ****         case 0://distortion
 389:Blink.cpp     ****             p1dtone = knob1;
 390:Blink.cpp     ****             p1doutgain = knob2;
 391:Blink.cpp     ****             p1dingain = knob3;
 392:Blink.cpp     ****             break;
 393:Blink.cpp     ****         case 1://fuzz
 394:Blink.cpp     ****             p1fingain = knob1;
 395:Blink.cpp     ****             p1fuzz = knob2;
 396:Blink.cpp     ****             p1ftone = knob3;
 397:Blink.cpp     ****             break;
 398:Blink.cpp     ****         case 2://delay
 399:Blink.cpp     ****             del1.feedback = knob2;
 400:Blink.cpp     ****             del1.delayTarget = 48000.0*2*knob3;
 401:Blink.cpp     ****             break;
 402:Blink.cpp     ****         case 3://chorus
 403:Blink.cpp     ****             ch.SetDelay(knob1);
 404:Blink.cpp     ****             p1chDelay = knob1;
 405:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 406:Blink.cpp     ****             p1chDepth = knob2;
 407:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 408:Blink.cpp     ****             p1chFreq = knob3;
 409:Blink.cpp     ****             break;
 410:Blink.cpp     ****         case 4://flanger
 411:Blink.cpp     ****             fl.SetDelay(knob1);
 412:Blink.cpp     ****             p1flDelay = knob1;
 413:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 414:Blink.cpp     ****             p1flDepth = knob2;
 415:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 416:Blink.cpp     ****             p1flFreq = knob3;
 417:Blink.cpp     ****             break;
 418:Blink.cpp     ****         case 5://wah
 419:Blink.cpp     ****             wahflt.SetFreq(1200*wah+400);
 420:Blink.cpp     ****             break;
 421:Blink.cpp     ****         case 6://tremolo
 422:Blink.cpp     ****             trem.SetDepth(knob2);
 423:Blink.cpp     ****             p1tremDepth = knob2;
 424:Blink.cpp     ****             trem.SetFreq(knob3*200);
 425:Blink.cpp     ****             p1tremFreq = knob3;
 426:Blink.cpp     ****             break;
 427:Blink.cpp     ****         case 7://phaser
 428:Blink.cpp     ****             ph.SetFreq(knob2*10000);
 429:Blink.cpp     ****             p1phFreq = knob2;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 68


 430:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 431:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 432:Blink.cpp     ****             p1phdepth = knob3;
 433:Blink.cpp     **** 
 434:Blink.cpp     ****             break;
 435:Blink.cpp     ****         
 436:Blink.cpp     ****         default:
 437:Blink.cpp     ****             break;
 438:Blink.cpp     ****         }
 439:Blink.cpp     ****     } else if(profile == 1){
 440:Blink.cpp     ****         switch (effectCount)
 441:Blink.cpp     ****         {
 442:Blink.cpp     ****         case 0://distortion
 443:Blink.cpp     ****             p2dtone = knob1;
 444:Blink.cpp     ****             p2doutgain = knob2;
 445:Blink.cpp     ****             p2dingain = knob3;
 446:Blink.cpp     ****             break;
 447:Blink.cpp     ****         case 1://fuzz
 448:Blink.cpp     ****             p2ftone = knob1;
 449:Blink.cpp     ****             p2fuzz = knob2;
 450:Blink.cpp     ****             p2fingain = knob3;
 451:Blink.cpp     ****             break;
 452:Blink.cpp     ****         case 2://delay
 453:Blink.cpp     ****             del2.delayTarget = 48000.0*2*knob2;
 454:Blink.cpp     ****             del2.feedback = knob3;
 455:Blink.cpp     ****             break;
 456:Blink.cpp     ****         case 3://chorus
 457:Blink.cpp     ****             ch.SetDelay(knob1);
 458:Blink.cpp     ****             p2chDelay = knob1;
 459:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 460:Blink.cpp     ****             p2chDepth = knob2;
 461:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 462:Blink.cpp     ****             p2chFreq = knob3;
 463:Blink.cpp     ****             break;
 464:Blink.cpp     ****         case 4://flanger
 465:Blink.cpp     ****             fl.SetDelay(knob1);
 466:Blink.cpp     ****             p2flDelay = knob1;
 467:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 468:Blink.cpp     ****             p2flDepth = knob2;
 469:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 470:Blink.cpp     ****             p2flFreq = knob3;
 471:Blink.cpp     ****             break;
 472:Blink.cpp     ****         case 5://wah
 473:Blink.cpp     ****             wahflt.SetFreq(1200*wah+400);
 474:Blink.cpp     ****             break;
 475:Blink.cpp     ****         case 6://tremolo
 476:Blink.cpp     ****             trem.SetDepth(knob2);
 477:Blink.cpp     ****             p2tremDepth = knob2;
 478:Blink.cpp     ****             trem.SetFreq(knob3*200);
 479:Blink.cpp     ****             p2tremFreq = knob3;
 480:Blink.cpp     ****             break;
 481:Blink.cpp     ****         case 7://phaser
 482:Blink.cpp     ****             ph.SetFreq(knob2*10000);
 483:Blink.cpp     ****             p2phFreq = knob2;
 484:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 485:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 486:Blink.cpp     ****             p2phdepth = knob3;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 69


 487:Blink.cpp     ****             break;
 488:Blink.cpp     ****         default:
 489:Blink.cpp     ****             break;
 490:Blink.cpp     ****         }
 491:Blink.cpp     ****     } else if(profile == 2){
 492:Blink.cpp     ****         switch (effectCount)
 493:Blink.cpp     ****         {
 494:Blink.cpp     ****         case 0://distortion
 495:Blink.cpp     ****             p3dtone = knob1;
 496:Blink.cpp     ****             p3doutgain = knob2;
 497:Blink.cpp     ****             p3dingain = knob3;
 498:Blink.cpp     ****             break;
 499:Blink.cpp     ****         case 1://fuzz
 500:Blink.cpp     ****             p3ftone = knob1;
 501:Blink.cpp     ****             p3fuzz = knob2;
 502:Blink.cpp     ****             p3fingain = knob3;
 503:Blink.cpp     ****             break;
 504:Blink.cpp     ****         case 2://delay
 505:Blink.cpp     ****             del3.delayTarget = 48000.0*2*knob2;
 506:Blink.cpp     ****             del3.feedback = knob3;
 507:Blink.cpp     ****             break;
 508:Blink.cpp     ****         case 3://chorus
 509:Blink.cpp     ****             ch.SetDelay(knob1);
 510:Blink.cpp     ****             p3chDelay = knob1;
 511:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 512:Blink.cpp     ****             p3chDepth = knob2;
 513:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 514:Blink.cpp     ****             p3chFreq = knob3;
 515:Blink.cpp     ****             break;
 516:Blink.cpp     ****         case 4://flanger
 517:Blink.cpp     ****             fl.SetDelay(knob1);
 518:Blink.cpp     ****             p3flDelay = knob1;
 519:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 520:Blink.cpp     ****             p3flDepth = knob2;
 521:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 522:Blink.cpp     ****             p3flFreq = knob3;
 523:Blink.cpp     ****             break;
 524:Blink.cpp     ****         case 5://wah
 525:Blink.cpp     ****             wahflt.SetFreq(1200*wah+400);
 526:Blink.cpp     ****             break;
 527:Blink.cpp     ****         case 6://tremolo
 528:Blink.cpp     ****             trem.SetDepth(knob2);
 529:Blink.cpp     ****             p3tremDepth = knob2;
 530:Blink.cpp     ****             trem.SetFreq(knob3*200);
 531:Blink.cpp     ****             p3tremFreq = knob3;
 532:Blink.cpp     ****             break;
 533:Blink.cpp     ****         case 7://phaser
 534:Blink.cpp     ****             ph.SetFreq(knob2*10000);
 535:Blink.cpp     ****             p3phFreq = knob2;
 536:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 537:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 538:Blink.cpp     ****             p3phdepth = knob3;
 539:Blink.cpp     **** 
 540:Blink.cpp     ****             break;
 541:Blink.cpp     ****         
 542:Blink.cpp     ****         default:
 543:Blink.cpp     ****             break;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 70


 544:Blink.cpp     ****         }
 545:Blink.cpp     ****     }//end if
 546:Blink.cpp     **** }
 547:Blink.cpp     **** 
 548:Blink.cpp     **** //helper method to check if an effect is already on
 549:Blink.cpp     **** bool contains(uint8_t prof){
 550:Blink.cpp     ****     bool x = false;
 551:Blink.cpp     ****     switch (prof){
 552:Blink.cpp     ****     case 0:
 553:Blink.cpp     ****         for(uint8_t i = 0; i < p1Size; i++){
 554:Blink.cpp     ****             if(profile1[i] == effectCount){
 555:Blink.cpp     ****                 x = true;
 556:Blink.cpp     ****             }
 557:Blink.cpp     ****         }
 558:Blink.cpp     ****         break;
 559:Blink.cpp     ****     case 1:
 560:Blink.cpp     ****         for(uint8_t i = 0; i < p2Size; i++){
 561:Blink.cpp     ****             if(profile2[i] == effectCount){
 562:Blink.cpp     ****                 x = true;
 563:Blink.cpp     ****             }
 564:Blink.cpp     ****         }
 565:Blink.cpp     ****         break;
 566:Blink.cpp     ****     case 2:
 567:Blink.cpp     ****         for(uint8_t i = 0; i < p3Size; i++){
 568:Blink.cpp     ****             if(profile3[i] == effectCount){
 569:Blink.cpp     ****                 x = true;
 570:Blink.cpp     ****             }
 571:Blink.cpp     ****         }
 572:Blink.cpp     ****         break;
 573:Blink.cpp     ****     default:
 574:Blink.cpp     ****         break;
 575:Blink.cpp     ****     }
 576:Blink.cpp     ****     return x;
 577:Blink.cpp     **** }
 578:Blink.cpp     **** //gets the pot data
 579:Blink.cpp     **** void ReadPots(){
 580:Blink.cpp     ****     knob1 = abs(1-hw.adc.GetFloat(0));
 581:Blink.cpp     ****     knob2 = abs(1-hw.adc.GetFloat(1));
 582:Blink.cpp     ****     knob3 = abs(1-hw.adc.GetFloat(2));
 583:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 584:Blink.cpp     **** }
 585:Blink.cpp     **** //removes an effect and shifts the effects up
 586:Blink.cpp     **** void removeEffect() {
 587:Blink.cpp     ****     int indexToRemove = -1;
 588:Blink.cpp     ****     if(profile == 0){
 589:Blink.cpp     ****         for (int i = 0; i < p1Size; i++) {
 590:Blink.cpp     ****             if (profile1[i] == effectCount) {
 591:Blink.cpp     ****                 indexToRemove = i;
 592:Blink.cpp     ****                 break;
 593:Blink.cpp     ****                 }
 594:Blink.cpp     ****             }
 595:Blink.cpp     ****         // If the value was found
 596:Blink.cpp     ****         if (indexToRemove != -1) {
 597:Blink.cpp     ****             // Shift elements up to fill the gap
 598:Blink.cpp     ****             for (int i = indexToRemove; i < p1Size; ++i) {
 599:Blink.cpp     ****                 if((i + 1 < 3)){
 600:Blink.cpp     ****                     profile1[i] = profile1[i + 1];
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 71


 601:Blink.cpp     ****                     profile1[i+1] = 9;
 602:Blink.cpp     ****                 } else {
 603:Blink.cpp     ****                     profile1[i] = 9;
 604:Blink.cpp     ****                 }
 605:Blink.cpp     ****                 
 606:Blink.cpp     ****             }
 607:Blink.cpp     ****             // Decrease the size of the array
 608:Blink.cpp     ****             --p1Size;
 609:Blink.cpp     ****         }
 610:Blink.cpp     ****     } else if(profile == 1) {
 611:Blink.cpp     ****         for (int i = 0; i < p2Size; ++i) {
 612:Blink.cpp     ****         if (profile2[i] == effectCount) {
 613:Blink.cpp     ****             indexToRemove = i;
 614:Blink.cpp     ****             break;
 615:Blink.cpp     ****             }
 616:Blink.cpp     ****         }
 617:Blink.cpp     ****         // If the value was found
 618:Blink.cpp     ****         if (indexToRemove != -1) {
 619:Blink.cpp     ****             // Shift elements up to fill the gap
 620:Blink.cpp     ****             for (int i = indexToRemove; i < p2Size; ++i) {
 621:Blink.cpp     ****                 if((i + 1 < 3)){
 622:Blink.cpp     ****                     profile2[i] = profile2[i + 1];
 623:Blink.cpp     ****                     profile2[i+1] = 9;
 624:Blink.cpp     ****                 } else {
 625:Blink.cpp     ****                     profile2[i] = 9;
 626:Blink.cpp     ****                 }
 627:Blink.cpp     ****                 
 628:Blink.cpp     ****             }
 629:Blink.cpp     ****             // Decrease the size of the array
 630:Blink.cpp     ****             --p2Size;
 631:Blink.cpp     ****         }
 632:Blink.cpp     ****     } else {
 633:Blink.cpp     ****         for (int i = 0; i < p3Size; ++i) {
 634:Blink.cpp     ****         if (profile3[i] == effectCount) {
 635:Blink.cpp     ****             indexToRemove = i;
 636:Blink.cpp     ****             break;
 637:Blink.cpp     ****             }
 638:Blink.cpp     ****         }
 639:Blink.cpp     ****         // If the value was found
 640:Blink.cpp     ****         if (indexToRemove != -1) {
 641:Blink.cpp     ****             // Shift elements up to fill the gap
 642:Blink.cpp     ****             for (int i = indexToRemove; i < p3Size; ++i) {
 643:Blink.cpp     ****                 if((i + 1 < 3)){
 644:Blink.cpp     ****                     profile3[i] = profile3[i + 1];
 645:Blink.cpp     ****                     profile3[i+1] = 9;
 646:Blink.cpp     ****                 } else {
 647:Blink.cpp     ****                     profile3[i] = 9;
 648:Blink.cpp     ****                 }
 649:Blink.cpp     ****                 
 650:Blink.cpp     ****             }
 651:Blink.cpp     ****             // Decrease the size of the array
 652:Blink.cpp     ****             --p3Size;
 653:Blink.cpp     ****         }
 654:Blink.cpp     ****     }
 655:Blink.cpp     **** }
 656:Blink.cpp     **** //handles encoder turns after initial press to save new params, cancel, turn effects on or off
 657:Blink.cpp     **** //one function per profile to avoid more nested if statements
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 72


 658:Blink.cpp     **** void encProfile1(){
 659:Blink.cpp     ****     if((p1Size < 3) && !contains(profile)){
 660:Blink.cpp     ****             profile1[p1Size] = effectCount;
 661:Blink.cpp     ****             p1Size++;
 662:Blink.cpp     ****             bool x = true;
 663:Blink.cpp     ****             while(x){
 664:Blink.cpp     ****                 //set effect params here
 665:Blink.cpp     ****                 setEffectPrams();
 666:Blink.cpp     ****                 configuring = 1;
 667:Blink.cpp     ****                 ReadPots();
 668:Blink.cpp     ****                 transmitData();
 669:Blink.cpp     ****                 transmitData2();
 670:Blink.cpp     ****                 encoder.Debounce();
 671:Blink.cpp     ****         
 672:Blink.cpp     ****                 int inc = encoder.Increment();
 673:Blink.cpp     ****                 if(inc > 0) {
 674:Blink.cpp     ****                     p1Size--;
 675:Blink.cpp     ****                     profile1[p1Size] = 9;
 676:Blink.cpp     ****                     configuring = 0;
 677:Blink.cpp     ****                     return;
 678:Blink.cpp     **** 
 679:Blink.cpp     ****                 } else if (inc < 0) {
 680:Blink.cpp     ****                     configuring = 0;
 681:Blink.cpp     ****                     return;
 682:Blink.cpp     **** 
 683:Blink.cpp     ****                 }
 684:Blink.cpp     ****             }//end while
 685:Blink.cpp     ****         } else if(contains(profile)){
 686:Blink.cpp     **** 
 687:Blink.cpp     ****             bool y = true;
 688:Blink.cpp     ****             float a,b,c;
 689:Blink.cpp     ****             a = getEffectParams(0);
 690:Blink.cpp     ****             b = getEffectParams(1);
 691:Blink.cpp     ****             c = getEffectParams(2);
 692:Blink.cpp     ****             while(y) {
 693:Blink.cpp     ****                 configuring = 1;
 694:Blink.cpp     ****                 ReadPots();
 695:Blink.cpp     ****                 transmitData();
 696:Blink.cpp     ****                 transmitData2();
 697:Blink.cpp     ****                 //set new params for the effect here
 698:Blink.cpp     ****                 setEffectPrams();
 699:Blink.cpp     ****                 encoder.Debounce();
 700:Blink.cpp     ****                 int inc = encoder.Increment();
 701:Blink.cpp     ****                 if(inc > 0) {
 702:Blink.cpp     ****                     configuring = 0;
 703:Blink.cpp     ****                     //set prev values (cancel)
 704:Blink.cpp     ****                     knob1 = a;
 705:Blink.cpp     ****                     knob2 = b;
 706:Blink.cpp     ****                     knob3 = c;
 707:Blink.cpp     ****                     setEffectPrams();
 708:Blink.cpp     ****                     return;
 709:Blink.cpp     **** 
 710:Blink.cpp     ****                 } else if (inc < 0) {
 711:Blink.cpp     ****                     configuring = 0;
 712:Blink.cpp     ****                     //leave new values selected(save)
 713:Blink.cpp     ****                     return;
 714:Blink.cpp     **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 73


 715:Blink.cpp     ****                 } else if(encoder.RisingEdge()){
 716:Blink.cpp     ****                     configuring = 0;
 717:Blink.cpp     ****                     removeEffect();
 718:Blink.cpp     ****                     return;
 719:Blink.cpp     ****                 }
 720:Blink.cpp     ****             }
 721:Blink.cpp     ****         }
 722:Blink.cpp     **** 
 723:Blink.cpp     ****         if(p1Size > 3) {
 724:Blink.cpp     ****             errorFlag = 1;
 725:Blink.cpp     ****         } else {
 726:Blink.cpp     ****             errorFlag = 2;
 727:Blink.cpp     ****         }
 728:Blink.cpp     ****         
 729:Blink.cpp     **** }
 730:Blink.cpp     **** 
 731:Blink.cpp     **** void encProfile2(){
 732:Blink.cpp     ****     if((p2Size < 3) && !contains(profile)){
 733:Blink.cpp     ****             profile2[p2Size] = effectCount;
 734:Blink.cpp     ****             p2Size++;
 735:Blink.cpp     ****             bool x = true;
 736:Blink.cpp     ****             while(x){
 737:Blink.cpp     ****                 //set effect params here
 738:Blink.cpp     ****                 setEffectPrams();
 739:Blink.cpp     ****                 configuring = 1;
 740:Blink.cpp     ****                 ReadPots();
 741:Blink.cpp     ****                 transmitData();
 742:Blink.cpp     ****                 transmitData2();
 743:Blink.cpp     ****                 encoder.Debounce();
 744:Blink.cpp     ****         
 745:Blink.cpp     ****                 int inc = encoder.Increment();
 746:Blink.cpp     ****                 if(inc > 0) {
 747:Blink.cpp     ****                     p2Size--;
 748:Blink.cpp     ****                     profile2[p2Size] = 9;
 749:Blink.cpp     ****                     configuring = 0;
 750:Blink.cpp     ****                     return;
 751:Blink.cpp     **** 
 752:Blink.cpp     ****                 } else if (inc < 0) {
 753:Blink.cpp     ****                     configuring = 0;
 754:Blink.cpp     ****                     return;
 755:Blink.cpp     **** 
 756:Blink.cpp     ****                 }
 757:Blink.cpp     ****             }//end while
 758:Blink.cpp     ****         } else if(contains(profile)){
 759:Blink.cpp     ****             bool y = true;
 760:Blink.cpp     ****             float a,b,c;
 761:Blink.cpp     ****             a = getEffectParams(0);
 762:Blink.cpp     ****             b = getEffectParams(1);
 763:Blink.cpp     ****             c = getEffectParams(2);
 764:Blink.cpp     ****             while(y) {
 765:Blink.cpp     ****                 configuring = 1;
 766:Blink.cpp     ****                 ReadPots();
 767:Blink.cpp     ****                 transmitData();
 768:Blink.cpp     ****                 transmitData2();
 769:Blink.cpp     ****                 setEffectPrams();
 770:Blink.cpp     ****                 //set new params for the effect here
 771:Blink.cpp     ****                 encoder.Debounce();
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 74


 772:Blink.cpp     ****                 int inc = encoder.Increment();
 773:Blink.cpp     ****                 if(inc > 0) {
 774:Blink.cpp     ****                     configuring = 0;
 775:Blink.cpp     ****                     //set prev values (cancel)
 776:Blink.cpp     ****                     knob1 = a;
 777:Blink.cpp     ****                     knob2 = b;
 778:Blink.cpp     ****                     knob3 = c;
 779:Blink.cpp     ****                     setEffectPrams();
 780:Blink.cpp     ****                     return;
 781:Blink.cpp     **** 
 782:Blink.cpp     ****                 } else if (inc < 0) {
 783:Blink.cpp     ****                     configuring = 0;
 784:Blink.cpp     ****                     //leave new values selected(save)
 785:Blink.cpp     ****                     setEffectPrams();
 786:Blink.cpp     ****                     return;
 787:Blink.cpp     **** 
 788:Blink.cpp     ****                 } else if(encoder.RisingEdge()){
 789:Blink.cpp     ****                     configuring = 0;
 790:Blink.cpp     ****                     removeEffect();
 791:Blink.cpp     ****                     return;
 792:Blink.cpp     ****                 }
 793:Blink.cpp     ****             }
 794:Blink.cpp     ****         }
 795:Blink.cpp     ****         if(p2Size > 3) {
 796:Blink.cpp     ****             errorFlag = 1;
 797:Blink.cpp     ****         } else {
 798:Blink.cpp     ****             errorFlag = 2;
 799:Blink.cpp     ****         }
 800:Blink.cpp     **** }
 801:Blink.cpp     **** 
 802:Blink.cpp     **** void encProfile3(){
 803:Blink.cpp     ****     if((p3Size < 3) && !contains(profile)){
 804:Blink.cpp     ****             profile3[p3Size] = effectCount;
 805:Blink.cpp     ****             p3Size++;
 806:Blink.cpp     ****             bool x = true;
 807:Blink.cpp     ****             while(x){
 808:Blink.cpp     ****                 //set effect params here
 809:Blink.cpp     ****                 configuring = 1;
 810:Blink.cpp     ****                 setEffectPrams();
 811:Blink.cpp     ****                 ReadPots();
 812:Blink.cpp     ****                 transmitData();
 813:Blink.cpp     ****                 transmitData();
 814:Blink.cpp     ****                 encoder.Debounce();
 815:Blink.cpp     ****         
 816:Blink.cpp     ****                 int inc = encoder.Increment();
 817:Blink.cpp     ****                 if(inc > 0) {
 818:Blink.cpp     ****                     p3Size--;
 819:Blink.cpp     ****                     profile3[p3Size] = 9;
 820:Blink.cpp     ****                     configuring = 0;
 821:Blink.cpp     ****                     return;
 822:Blink.cpp     **** 
 823:Blink.cpp     ****                 } else if (inc < 0) {
 824:Blink.cpp     ****                     configuring = 0;
 825:Blink.cpp     ****                     return;
 826:Blink.cpp     **** 
 827:Blink.cpp     ****                 }
 828:Blink.cpp     ****             }//end while
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 75


 829:Blink.cpp     ****         } else if(contains(profile)){
 830:Blink.cpp     ****             bool y = true;
 831:Blink.cpp     ****             float a,b,c;
 832:Blink.cpp     ****             a = getEffectParams(0);
 833:Blink.cpp     ****             b = getEffectParams(1);
 834:Blink.cpp     ****             c = getEffectParams(2);
 835:Blink.cpp     ****             while(y) {
 836:Blink.cpp     ****                 configuring = 1;
 837:Blink.cpp     ****                 ReadPots();
 838:Blink.cpp     ****                 transmitData();
 839:Blink.cpp     ****                 transmitData2();
 840:Blink.cpp     ****                 //set new params for the effect here
 841:Blink.cpp     ****                 encoder.Debounce();
 842:Blink.cpp     ****                 int inc = encoder.Increment();
 843:Blink.cpp     ****                 if(inc > 0) {
 844:Blink.cpp     ****                     configuring = 0;
 845:Blink.cpp     ****                     //set prev values (cancel)
 846:Blink.cpp     ****                     knob1 = a;
 847:Blink.cpp     ****                     knob2 = b;
 848:Blink.cpp     ****                     knob3 = c;
 849:Blink.cpp     ****                     setEffectPrams();
 850:Blink.cpp     ****                     return;
 851:Blink.cpp     **** 
 852:Blink.cpp     ****                 } else if (inc < 0) {
 853:Blink.cpp     ****                     configuring = 0;
 854:Blink.cpp     ****                     //leave new values selected(save)
 855:Blink.cpp     ****                     setEffectPrams();
 856:Blink.cpp     ****                     return;
 857:Blink.cpp     **** 
 858:Blink.cpp     ****                 } else if(encoder.RisingEdge()){
 859:Blink.cpp     ****                     configuring = 0;
 860:Blink.cpp     ****                     removeEffect();
 861:Blink.cpp     ****                     return;
 862:Blink.cpp     ****                 }
 863:Blink.cpp     ****             }
 864:Blink.cpp     ****         }
 865:Blink.cpp     ****         if(p3Size > 3) {
 866:Blink.cpp     ****             errorFlag = 1;
 867:Blink.cpp     ****         } else {
 868:Blink.cpp     ****             errorFlag = 2;
 869:Blink.cpp     ****         }
 870:Blink.cpp     **** }
 871:Blink.cpp     **** 
 872:Blink.cpp     **** 
 873:Blink.cpp     **** 
 874:Blink.cpp     **** //high priority interupt when samples are ready to be processed. loops through effects and processe
 875:Blink.cpp     **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size) {
 1648              		.loc 15 875 93 is_stmt 1 view -0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 876:Blink.cpp     **** 
 877:Blink.cpp     ****     for(size_t i = 0; i < size; i++) {
 1652              		.loc 15 877 5 view .LVU396
 1653              	.LBB544:
 1654              		.loc 15 877 25 view .LVU397
 1655 0000 002A     		cmp	r2, #0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 76


 1656 0002 55D0     		beq	.L76
 1657              	.LBE544:
 875:Blink.cpp     **** 
 1658              		.loc 15 875 93 is_stmt 0 view .LVU398
 1659 0004 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1660              		.cfi_def_cfa_offset 40
 1661              		.cfi_offset 3, -40
 1662              		.cfi_offset 4, -36
 1663              		.cfi_offset 5, -32
 1664              		.cfi_offset 6, -28
 1665              		.cfi_offset 7, -24
 1666              		.cfi_offset 8, -20
 1667              		.cfi_offset 9, -16
 1668              		.cfi_offset 10, -12
 1669              		.cfi_offset 11, -8
 1670              		.cfi_offset 14, -4
 1671 0008 8146     		mov	r9, r0
 1672 000a 8A46     		mov	r10, r1
 1673 000c 9046     		mov	r8, r2
 1674              	.LBB566:
 1675              		.loc 15 877 16 view .LVU399
 1676 000e 0024     		movs	r4, #0
 1677 0010 0BE0     		b	.L60
 1678              	.LVL105:
 1679              	.L54:
 1680              		.loc 15 877 16 view .LVU400
 1681              	.LBE566:
 878:Blink.cpp     ****         float val = in[0][i];
 879:Blink.cpp     **** 
 880:Blink.cpp     ****         if(profile == 0){
 881:Blink.cpp     ****             for(uint8_t j = 0; j < p1Size; j++){
 882:Blink.cpp     ****                 val = effectsProcess(val, profile1[j]);
 883:Blink.cpp     ****             }
 884:Blink.cpp     ****         } else if(profile == 1){
 1682              		.loc 15 884 16 is_stmt 1 view .LVU401
 1683              	.LBB567:
 1684              	.LBB545:
 1685              	.LBB546:
 1686              	.LBB547:
 1687 0012 012B     		cmp	r3, #1
 1688 0014 26D0     		beq	.L79
 1689              	.LBE547:
 1690              	.LBE546:
 1691              	.LBE545:
 1692              	.LBE567:
 885:Blink.cpp     ****             for(uint8_t j = 0; j < p2Size; j++){
 886:Blink.cpp     ****                 val = effectsProcess(val, profile2[j]);
 887:Blink.cpp     ****             }
 888:Blink.cpp     ****         } else if(profile == 2){
 1693              		.loc 15 888 16 view .LVU402
 1694              	.LBB568:
 1695              	.LBB561:
 1696              	.LBB556:
 1697              	.LBB552:
 1698              	.LBB548:
 1699 0016 022B     		cmp	r3, #2
 1700 0018 38D0     		beq	.L80
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 77


 1701              	.L55:
 1702              		.loc 15 888 16 is_stmt 0 view .LVU403
 1703              	.LBE548:
 1704              	.LBE552:
 1705              	.LBE556:
 889:Blink.cpp     ****             for(uint8_t j = 0; j < p3Size; j++){
 890:Blink.cpp     ****                 val = effectsProcess(val, profile3[j]);
 891:Blink.cpp     ****             }
 892:Blink.cpp     ****         }
 893:Blink.cpp     ****         
 894:Blink.cpp     ****         out[0][i] = val;
 1706              		.loc 15 894 9 is_stmt 1 discriminator 2 view .LVU404
 1707              		.loc 15 894 19 is_stmt 0 discriminator 2 view .LVU405
 1708 001a DAF80030 		ldr	r3, [r10]
 1709              	.LBE561:
 877:Blink.cpp     ****         float val = in[0][i];
 1710              		.loc 15 877 5 discriminator 2 view .LVU406
 1711 001e 0134     		adds	r4, r4, #1
 1712              	.LVL106:
 1713              	.LBB562:
 1714              		.loc 15 894 19 discriminator 2 view .LVU407
 1715 0020 3B44     		add	r3, r3, r7
 1716              	.LBE562:
 877:Blink.cpp     ****         float val = in[0][i];
 1717              		.loc 15 877 25 discriminator 2 view .LVU408
 1718 0022 A045     		cmp	r8, r4
 1719              	.LBB563:
 1720              		.loc 15 894 19 discriminator 2 view .LVU409
 1721 0024 83ED000A 		vstr.32	s0, [r3]
 1722              	.LBE563:
 877:Blink.cpp     ****         float val = in[0][i];
 1723              		.loc 15 877 5 is_stmt 1 discriminator 2 view .LVU410
 1724              	.LVL107:
 877:Blink.cpp     ****         float val = in[0][i];
 1725              		.loc 15 877 25 discriminator 2 view .LVU411
 1726 0028 2ED0     		beq	.L81
 1727              	.LVL108:
 1728              	.L60:
 1729              	.LBB564:
 878:Blink.cpp     **** 
 1730              		.loc 15 878 9 view .LVU412
 878:Blink.cpp     **** 
 1731              		.loc 15 878 15 is_stmt 0 view .LVU413
 1732 002a D9F80020 		ldr	r2, [r9]
 1733 002e A700     		lsls	r7, r4, #2
 1734              	.LBB557:
 880:Blink.cpp     ****             for(uint8_t j = 0; j < p1Size; j++){
 1735              		.loc 15 880 20 view .LVU414
 1736 0030 204B     		ldr	r3, .L82
 1737              	.LBE557:
 878:Blink.cpp     **** 
 1738              		.loc 15 878 15 view .LVU415
 1739 0032 02EB8402 		add	r2, r2, r4, lsl #2
 1740              	.LBB558:
 880:Blink.cpp     ****             for(uint8_t j = 0; j < p1Size; j++){
 1741              		.loc 15 880 20 view .LVU416
 1742 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 78


 1743              	.LBE558:
 878:Blink.cpp     **** 
 1744              		.loc 15 878 15 view .LVU417
 1745 0038 92ED000A 		vldr.32	s0, [r2]
 1746              	.LVL109:
 880:Blink.cpp     ****             for(uint8_t j = 0; j < p1Size; j++){
 1747              		.loc 15 880 9 is_stmt 1 view .LVU418
 1748              	.LBB559:
 1749 003c 002B     		cmp	r3, #0
 1750 003e E8D1     		bne	.L54
 1751              	.LVL110:
 1752              	.LBB553:
 881:Blink.cpp     ****                 val = effectsProcess(val, profile1[j]);
 1753              		.loc 15 881 34 view .LVU419
 1754 0040 1D4D     		ldr	r5, .L82+4
 1755 0042 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1756 0044 002A     		cmp	r2, #0
 1757 0046 E8D0     		beq	.L55
 1758 0048 9B46     		mov	fp, r3
 1759 004a 1C4E     		ldr	r6, .L82+8
 1760 004c 1A46     		mov	r2, r3
 1761              	.LVL111:
 1762              	.L56:
 882:Blink.cpp     ****             }
 1763              		.loc 15 882 17 discriminator 2 view .LVU420
 881:Blink.cpp     ****                 val = effectsProcess(val, profile1[j]);
 1764              		.loc 15 881 34 is_stmt 0 discriminator 2 view .LVU421
 1765 004e 0BF1010B 		add	fp, fp, #1
 1766              	.LVL112:
 882:Blink.cpp     ****             }
 1767              		.loc 15 882 37 discriminator 2 view .LVU422
 1768 0052 B05C     		ldrb	r0, [r6, r2]	@ zero_extendqisi2
 1769 0054 FFF7FEFF 		bl	_Z14effectsProcessfh
 1770              	.LVL113:
 881:Blink.cpp     ****                 val = effectsProcess(val, profile1[j]);
 1771              		.loc 15 881 34 discriminator 2 view .LVU423
 1772 0058 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1773 005a 5FFA8BF2 		uxtb	r2, fp
 1774              	.LVL114:
 881:Blink.cpp     ****                 val = effectsProcess(val, profile1[j]);
 1775              		.loc 15 881 13 is_stmt 1 discriminator 2 view .LVU424
 881:Blink.cpp     ****                 val = effectsProcess(val, profile1[j]);
 1776              		.loc 15 881 34 discriminator 2 view .LVU425
 1777 005e 9142     		cmp	r1, r2
 1778 0060 F5D8     		bhi	.L56
 1779 0062 DAE7     		b	.L55
 1780              	.L79:
 1781              	.LVL115:
 881:Blink.cpp     ****                 val = effectsProcess(val, profile1[j]);
 1782              		.loc 15 881 34 is_stmt 0 discriminator 2 view .LVU426
 1783              	.LBE553:
 1784              	.LBB554:
 1785              	.LBB550:
 885:Blink.cpp     ****                 val = effectsProcess(val, profile2[j]);
 1786              		.loc 15 885 34 is_stmt 1 view .LVU427
 1787 0064 164D     		ldr	r5, .L82+12
 1788 0066 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 79


 1789 0068 002B     		cmp	r3, #0
 1790 006a D6D0     		beq	.L55
 1791 006c 0026     		movs	r6, #0
 1792 006e DFF858B0 		ldr	fp, .L82+20
 1793 0072 3246     		mov	r2, r6
 1794              	.LVL116:
 1795              	.L58:
 886:Blink.cpp     ****             }
 1796              		.loc 15 886 17 discriminator 2 view .LVU428
 885:Blink.cpp     ****                 val = effectsProcess(val, profile2[j]);
 1797              		.loc 15 885 34 is_stmt 0 discriminator 2 view .LVU429
 1798 0074 0136     		adds	r6, r6, #1
 1799              	.LVL117:
 886:Blink.cpp     ****             }
 1800              		.loc 15 886 37 discriminator 2 view .LVU430
 1801 0076 1BF80200 		ldrb	r0, [fp, r2]	@ zero_extendqisi2
 1802 007a FFF7FEFF 		bl	_Z14effectsProcessfh
 1803              	.LVL118:
 885:Blink.cpp     ****                 val = effectsProcess(val, profile2[j]);
 1804              		.loc 15 885 34 discriminator 2 view .LVU431
 1805 007e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1806 0080 F2B2     		uxtb	r2, r6
 1807              	.LVL119:
 885:Blink.cpp     ****                 val = effectsProcess(val, profile2[j]);
 1808              		.loc 15 885 13 is_stmt 1 discriminator 2 view .LVU432
 885:Blink.cpp     ****                 val = effectsProcess(val, profile2[j]);
 1809              		.loc 15 885 34 discriminator 2 view .LVU433
 1810 0082 9142     		cmp	r1, r2
 1811 0084 F6D8     		bhi	.L58
 1812 0086 C8E7     		b	.L55
 1813              	.L81:
 885:Blink.cpp     ****                 val = effectsProcess(val, profile2[j]);
 1814              		.loc 15 885 34 is_stmt 0 discriminator 2 view .LVU434
 1815              	.LBE550:
 1816              	.LBE554:
 1817              	.LBE559:
 1818              	.LBE564:
 1819              	.LBE568:
 895:Blink.cpp     **** 
 896:Blink.cpp     ****     }
 897:Blink.cpp     **** }
 1820              		.loc 15 897 1 view .LVU435
 1821 0088 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1822              	.LVL120:
 1823              	.L80:
 1824              	.LBB569:
 1825              	.LBB565:
 1826              	.LBB560:
 1827              	.LBB555:
 1828              	.LBB551:
 1829              	.LBB549:
 889:Blink.cpp     ****                 val = effectsProcess(val, profile3[j]);
 1830              		.loc 15 889 34 is_stmt 1 view .LVU436
 1831 008c 0D4D     		ldr	r5, .L82+16
 1832 008e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1833 0090 002B     		cmp	r3, #0
 1834 0092 C2D0     		beq	.L55
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 80


 1835 0094 0026     		movs	r6, #0
 1836 0096 DFF834B0 		ldr	fp, .L82+24
 1837 009a 3246     		mov	r2, r6
 1838              	.LVL121:
 1839              	.L59:
 890:Blink.cpp     ****             }
 1840              		.loc 15 890 17 discriminator 2 view .LVU437
 889:Blink.cpp     ****                 val = effectsProcess(val, profile3[j]);
 1841              		.loc 15 889 34 is_stmt 0 discriminator 2 view .LVU438
 1842 009c 0136     		adds	r6, r6, #1
 1843              	.LVL122:
 890:Blink.cpp     ****             }
 1844              		.loc 15 890 37 discriminator 2 view .LVU439
 1845 009e 1BF80200 		ldrb	r0, [fp, r2]	@ zero_extendqisi2
 1846 00a2 FFF7FEFF 		bl	_Z14effectsProcessfh
 1847              	.LVL123:
 889:Blink.cpp     ****                 val = effectsProcess(val, profile3[j]);
 1848              		.loc 15 889 34 discriminator 2 view .LVU440
 1849 00a6 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1850 00a8 F2B2     		uxtb	r2, r6
 1851              	.LVL124:
 889:Blink.cpp     ****                 val = effectsProcess(val, profile3[j]);
 1852              		.loc 15 889 13 is_stmt 1 discriminator 2 view .LVU441
 889:Blink.cpp     ****                 val = effectsProcess(val, profile3[j]);
 1853              		.loc 15 889 34 discriminator 2 view .LVU442
 1854 00aa 9142     		cmp	r1, r2
 1855 00ac F6D8     		bhi	.L59
 1856 00ae B4E7     		b	.L55
 1857              	.LVL125:
 1858              	.L76:
 1859              		.cfi_def_cfa_offset 0
 1860              		.cfi_restore 3
 1861              		.cfi_restore 4
 1862              		.cfi_restore 5
 1863              		.cfi_restore 6
 1864              		.cfi_restore 7
 1865              		.cfi_restore 8
 1866              		.cfi_restore 9
 1867              		.cfi_restore 10
 1868              		.cfi_restore 11
 1869              		.cfi_restore 14
 889:Blink.cpp     ****                 val = effectsProcess(val, profile3[j]);
 1870              		.loc 15 889 34 is_stmt 0 discriminator 2 view .LVU443
 1871 00b0 7047     		bx	lr
 1872              	.L83:
 1873 00b2 00BF     		.align	2
 1874              	.L82:
 1875 00b4 00000000 		.word	.LANCHOR5
 1876 00b8 00000000 		.word	.LANCHOR29
 1877 00bc 00000000 		.word	.LANCHOR30
 1878 00c0 00000000 		.word	.LANCHOR31
 1879 00c4 00000000 		.word	.LANCHOR33
 1880 00c8 00000000 		.word	.LANCHOR32
 1881 00cc 00000000 		.word	.LANCHOR34
 1882              	.LBE549:
 1883              	.LBE551:
 1884              	.LBE555:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 81


 1885              	.LBE560:
 1886              	.LBE565:
 1887              	.LBE569:
 1888              		.cfi_endproc
 1889              	.LFE4907:
 1891              		.section	.text._Z15getEffectParamsh,"ax",%progbits
 1892              		.align	1
 1893              		.p2align 2,,3
 1894              		.global	_Z15getEffectParamsh
 1895              		.syntax unified
 1896              		.thumb
 1897              		.thumb_func
 1898              		.fpu fpv5-d16
 1900              	_Z15getEffectParamsh:
 1901              	.LVL126:
 1902              	.LFB4899:
 169:Blink.cpp     ****     if(profile == 0){
 1903              		.loc 15 169 35 is_stmt 1 view -0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907              		@ link register save eliminated.
 170:Blink.cpp     ****         switch (effectCount)
 1908              		.loc 15 170 5 view .LVU445
 170:Blink.cpp     ****         switch (effectCount)
 1909              		.loc 15 170 16 is_stmt 0 view .LVU446
 1910 0000 9B4B     		ldr	r3, .L174
 1911 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170:Blink.cpp     ****         switch (effectCount)
 1912              		.loc 15 170 5 view .LVU447
 1913 0004 4BB9     		cbnz	r3, .L85
 171:Blink.cpp     ****         {
 1914              		.loc 15 171 9 is_stmt 1 view .LVU448
 171:Blink.cpp     ****         {
 1915              		.loc 15 171 17 is_stmt 0 view .LVU449
 1916 0006 9B4B     		ldr	r3, .L174+4
 1917 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1918 000a 072B     		cmp	r3, #7
 1919 000c 09D8     		bhi	.L157
 1920 000e DFE803F0 		tbb	[pc, r3]
 1921              	.L88:
 1922 0012 23       		.byte	(.L94-.L88)/2
 1923 0013 2D       		.byte	(.L93-.L88)/2
 1924 0014 37       		.byte	(.L92-.L88)/2
 1925 0015 43       		.byte	(.L91-.L88)/2
 1926 0016 4D       		.byte	(.L90-.L88)/2
 1927 0017 08       		.byte	(.L157-.L88)/2
 1928 0018 56       		.byte	(.L89-.L88)/2
 1929 0019 5F       		.byte	(.L87-.L88)/2
 1930              		.p2align 1
 1931              	.L85:
 240:Blink.cpp     ****         switch (effectCount)
 1932              		.loc 15 240 12 is_stmt 1 view .LVU450
 1933 001a 012B     		cmp	r3, #1
 1934 001c 61D0     		beq	.L160
 310:Blink.cpp     ****         switch (effectCount)
 1935              		.loc 15 310 12 view .LVU451
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 82


 1936 001e 022B     		cmp	r3, #2
 1937 0020 02D0     		beq	.L161
 1938              	.L157:
 193:Blink.cpp     ****             } else if(num == 1){
 1939              		.loc 15 193 24 is_stmt 0 view .LVU452
 1940 0022 9FED950A 		vldr.32	s0, .L174+8
 382:Blink.cpp     **** //reads the knobs and sets the params for later use
 1941              		.loc 15 382 1 view .LVU453
 1942 0026 7047     		bx	lr
 1943              	.L161:
 311:Blink.cpp     ****         {
 1944              		.loc 15 311 9 is_stmt 1 view .LVU454
 311:Blink.cpp     ****         {
 1945              		.loc 15 311 17 is_stmt 0 view .LVU455
 1946 0028 924B     		ldr	r3, .L174+4
 1947 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1948 002c 072B     		cmp	r3, #7
 1949 002e F8D8     		bhi	.L157
 1950 0030 01A2     		adr	r2, .L127
 1951 0032 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1952 0036 00BF     		.p2align 2
 1953              	.L127:
 1954 0038 D9010000 		.word	.L133+1
 1955 003c 1F020000 		.word	.L132+1
 1956 0040 FD010000 		.word	.L131+1
 1957 0044 0D020000 		.word	.L130+1
 1958 0048 EB010000 		.word	.L129+1
 1959 004c 23000000 		.word	.L157+1
 1960 0050 C5010000 		.word	.L128+1
 1961 0054 B1010000 		.word	.L126+1
 1962              		.p2align 1
 1963              	.L94:
 173:Blink.cpp     ****             if(num == 0) {
 1964              		.loc 15 173 9 is_stmt 1 view .LVU456
 174:Blink.cpp     ****                 return p1dtone;
 1965              		.loc 15 174 13 view .LVU457
 1966 0058 0028     		cmp	r0, #0
 1967 005a 00F09980 		beq	.L162
 176:Blink.cpp     ****                 return p1doutgain;
 1968              		.loc 15 176 20 view .LVU458
 1969 005e 0128     		cmp	r0, #1
 177:Blink.cpp     ****             } else {
 1970              		.loc 15 177 17 view .LVU459
 177:Blink.cpp     ****             } else {
 1971              		.loc 15 177 24 is_stmt 0 view .LVU460
 1972 0060 0CBF     		ite	eq
 1973 0062 864B     		ldreq	r3, .L174+12
 179:Blink.cpp     ****             }
 1974              		.loc 15 179 17 is_stmt 1 view .LVU461
 179:Blink.cpp     ****             }
 1975              		.loc 15 179 24 is_stmt 0 view .LVU462
 1976 0064 864B     		ldrne	r3, .L174+16
 1977 0066 93ED000A 		vldr.32	s0, [r3]
 1978 006a 7047     		bx	lr
 1979              	.L93:
 181:Blink.cpp     ****         case 1://fuzz
 1980              		.loc 15 181 13 is_stmt 1 view .LVU463
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 83


 182:Blink.cpp     ****             if(num == 0) {
 1981              		.loc 15 182 9 view .LVU464
 183:Blink.cpp     ****                 return p1fingain;
 1982              		.loc 15 183 13 view .LVU465
 1983 006c 0028     		cmp	r0, #0
 1984 006e 00F09780 		beq	.L163
 185:Blink.cpp     ****                 return p1fuzz;
 1985              		.loc 15 185 20 view .LVU466
 1986 0072 0128     		cmp	r0, #1
 186:Blink.cpp     ****             } else {
 1987              		.loc 15 186 17 view .LVU467
 186:Blink.cpp     ****             } else {
 1988              		.loc 15 186 24 is_stmt 0 view .LVU468
 1989 0074 0CBF     		ite	eq
 1990 0076 834B     		ldreq	r3, .L174+20
 188:Blink.cpp     ****             }
 1991              		.loc 15 188 17 is_stmt 1 view .LVU469
 188:Blink.cpp     ****             }
 1992              		.loc 15 188 24 is_stmt 0 view .LVU470
 1993 0078 834B     		ldrne	r3, .L174+24
 1994 007a 93ED000A 		vldr.32	s0, [r3]
 1995 007e 7047     		bx	lr
 1996              	.L92:
 190:Blink.cpp     ****         case 2://delay
 1997              		.loc 15 190 13 is_stmt 1 view .LVU471
 191:Blink.cpp     ****             if(num == 0) {
 1998              		.loc 15 191 9 view .LVU472
 192:Blink.cpp     ****                 return 0;
 1999              		.loc 15 192 13 view .LVU473
 2000 0080 0028     		cmp	r0, #0
 2001 0082 CED0     		beq	.L157
 194:Blink.cpp     ****                 return del1.feedback;
 2002              		.loc 15 194 20 view .LVU474
 2003 0084 0128     		cmp	r0, #1
 195:Blink.cpp     ****             } else {
 2004              		.loc 15 195 29 is_stmt 0 view .LVU475
 2005 0086 814B     		ldr	r3, .L174+28
 194:Blink.cpp     ****                 return del1.feedback;
 2006              		.loc 15 194 20 view .LVU476
 2007 0088 76D0     		beq	.L159
 2008              	.L138:
 337:Blink.cpp     ****             }
 2009              		.loc 15 337 17 is_stmt 1 view .LVU477
 337:Blink.cpp     ****             }
 2010              		.loc 15 337 51 is_stmt 0 view .LVU478
 2011 008a DFED817A 		vldr.32	s15, .L174+32
 2012 008e 93ED027A 		vldr.32	s14, [r3, #8]
 2013 0092 87EE270A 		vdiv.f32	s0, s14, s15
 2014 0096 7047     		bx	lr
 2015              	.L91:
 199:Blink.cpp     ****         case 3://chorus
 2016              		.loc 15 199 13 is_stmt 1 view .LVU479
 200:Blink.cpp     ****             if(num == 0) {
 2017              		.loc 15 200 9 view .LVU480
 201:Blink.cpp     ****                 return p1chDelay;
 2018              		.loc 15 201 13 view .LVU481
 2019 0098 0028     		cmp	r0, #0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 84


 2020 009a 00F08580 		beq	.L164
 203:Blink.cpp     ****                 return p1chDepth;
 2021              		.loc 15 203 20 view .LVU482
 2022 009e 0128     		cmp	r0, #1
 204:Blink.cpp     ****             } else {
 2023              		.loc 15 204 17 view .LVU483
 204:Blink.cpp     ****             } else {
 2024              		.loc 15 204 24 is_stmt 0 view .LVU484
 2025 00a0 0CBF     		ite	eq
 2026 00a2 7C4B     		ldreq	r3, .L174+36
 206:Blink.cpp     ****             }
 2027              		.loc 15 206 17 is_stmt 1 view .LVU485
 206:Blink.cpp     ****             }
 2028              		.loc 15 206 24 is_stmt 0 view .LVU486
 2029 00a4 7C4B     		ldrne	r3, .L174+40
 2030 00a6 93ED000A 		vldr.32	s0, [r3]
 2031 00aa 7047     		bx	lr
 2032              	.L90:
 208:Blink.cpp     ****         case 4://flanger
 2033              		.loc 15 208 13 is_stmt 1 view .LVU487
 209:Blink.cpp     ****             if(num == 0) {
 2034              		.loc 15 209 9 view .LVU488
 210:Blink.cpp     ****                 return p1flDelay;
 2035              		.loc 15 210 13 view .LVU489
 2036 00ac 0028     		cmp	r0, #0
 2037 00ae 73D0     		beq	.L165
 212:Blink.cpp     ****                 return p1flDepth;
 2038              		.loc 15 212 20 view .LVU490
 2039 00b0 0128     		cmp	r0, #1
 213:Blink.cpp     ****             } else {
 2040              		.loc 15 213 17 view .LVU491
 213:Blink.cpp     ****             } else {
 2041              		.loc 15 213 24 is_stmt 0 view .LVU492
 2042 00b2 0CBF     		ite	eq
 2043 00b4 794B     		ldreq	r3, .L174+44
 215:Blink.cpp     ****             }
 2044              		.loc 15 215 17 is_stmt 1 view .LVU493
 215:Blink.cpp     ****             }
 2045              		.loc 15 215 24 is_stmt 0 view .LVU494
 2046 00b6 7A4B     		ldrne	r3, .L174+48
 2047 00b8 93ED000A 		vldr.32	s0, [r3]
 2048 00bc 7047     		bx	lr
 2049              	.L89:
 220:Blink.cpp     ****         case 6://tremolo
 2050              		.loc 15 220 13 is_stmt 1 view .LVU495
 221:Blink.cpp     ****             if(num == 0) {
 2051              		.loc 15 221 9 view .LVU496
 222:Blink.cpp     ****                 return 0;
 2052              		.loc 15 222 13 view .LVU497
 2053 00be 0028     		cmp	r0, #0
 2054 00c0 AFD0     		beq	.L157
 224:Blink.cpp     ****                 return p1tremDepth;
 2055              		.loc 15 224 20 view .LVU498
 2056 00c2 0128     		cmp	r0, #1
 225:Blink.cpp     ****             } else {
 2057              		.loc 15 225 17 view .LVU499
 225:Blink.cpp     ****             } else {
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 85


 2058              		.loc 15 225 24 is_stmt 0 view .LVU500
 2059 00c4 0CBF     		ite	eq
 2060 00c6 774B     		ldreq	r3, .L174+52
 227:Blink.cpp     ****             }
 2061              		.loc 15 227 17 is_stmt 1 view .LVU501
 227:Blink.cpp     ****             }
 2062              		.loc 15 227 24 is_stmt 0 view .LVU502
 2063 00c8 774B     		ldrne	r3, .L174+56
 2064 00ca 93ED000A 		vldr.32	s0, [r3]
 2065 00ce 7047     		bx	lr
 2066              	.L87:
 229:Blink.cpp     ****         case 7://phaser
 2067              		.loc 15 229 13 is_stmt 1 view .LVU503
 230:Blink.cpp     ****             if(num == 0) {
 2068              		.loc 15 230 9 view .LVU504
 231:Blink.cpp     ****                 return 0;
 2069              		.loc 15 231 13 view .LVU505
 2070 00d0 0028     		cmp	r0, #0
 2071 00d2 A6D0     		beq	.L157
 233:Blink.cpp     ****                 return p1phFreq;
 2072              		.loc 15 233 20 view .LVU506
 2073 00d4 0128     		cmp	r0, #1
 234:Blink.cpp     ****             } else {
 2074              		.loc 15 234 17 view .LVU507
 234:Blink.cpp     ****             } else {
 2075              		.loc 15 234 24 is_stmt 0 view .LVU508
 2076 00d6 0CBF     		ite	eq
 2077 00d8 744B     		ldreq	r3, .L174+60
 236:Blink.cpp     ****             }
 2078              		.loc 15 236 17 is_stmt 1 view .LVU509
 236:Blink.cpp     ****             }
 2079              		.loc 15 236 24 is_stmt 0 view .LVU510
 2080 00da 754B     		ldrne	r3, .L174+64
 2081 00dc 93ED000A 		vldr.32	s0, [r3]
 2082 00e0 7047     		bx	lr
 2083              	.L160:
 241:Blink.cpp     ****         {
 2084              		.loc 15 241 9 is_stmt 1 view .LVU511
 241:Blink.cpp     ****         {
 2085              		.loc 15 241 17 is_stmt 0 view .LVU512
 2086 00e2 644B     		ldr	r3, .L174+4
 2087 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2088 00e6 072B     		cmp	r3, #7
 2089 00e8 9BD8     		bhi	.L157
 2090 00ea 01A2     		adr	r2, .L108
 2091 00ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2092              		.p2align 2
 2093              	.L108:
 2094 00f0 7F010000 		.word	.L114+1
 2095 00f4 5B010000 		.word	.L113+1
 2096 00f8 6D010000 		.word	.L112+1
 2097 00fc 49010000 		.word	.L111+1
 2098 0100 37010000 		.word	.L110+1
 2099 0104 23000000 		.word	.L157+1
 2100 0108 23010000 		.word	.L109+1
 2101 010c 11010000 		.word	.L107+1
 2102              		.p2align 1
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 86


 2103              	.L107:
 299:Blink.cpp     ****         case 7://phaser
 2104              		.loc 15 299 13 is_stmt 1 view .LVU513
 300:Blink.cpp     ****             if(num == 0) {
 2105              		.loc 15 300 9 view .LVU514
 301:Blink.cpp     ****                 return 0;
 2106              		.loc 15 301 13 view .LVU515
 2107 0110 0028     		cmp	r0, #0
 2108 0112 86D0     		beq	.L157
 303:Blink.cpp     ****                 return p2phFreq;
 2109              		.loc 15 303 20 view .LVU516
 2110 0114 0128     		cmp	r0, #1
 304:Blink.cpp     ****             } else {
 2111              		.loc 15 304 17 view .LVU517
 304:Blink.cpp     ****             } else {
 2112              		.loc 15 304 24 is_stmt 0 view .LVU518
 2113 0116 0CBF     		ite	eq
 2114 0118 664B     		ldreq	r3, .L174+68
 306:Blink.cpp     ****             }
 2115              		.loc 15 306 17 is_stmt 1 view .LVU519
 306:Blink.cpp     ****             }
 2116              		.loc 15 306 24 is_stmt 0 view .LVU520
 2117 011a 674B     		ldrne	r3, .L174+72
 2118 011c 93ED000A 		vldr.32	s0, [r3]
 2119 0120 7047     		bx	lr
 2120              	.L109:
 290:Blink.cpp     ****         case 6://tremolo
 2121              		.loc 15 290 13 is_stmt 1 view .LVU521
 291:Blink.cpp     ****             if(num == 0) {
 2122              		.loc 15 291 9 view .LVU522
 292:Blink.cpp     ****                 return 0;
 2123              		.loc 15 292 13 view .LVU523
 2124 0122 0028     		cmp	r0, #0
 2125 0124 3FF47DAF 		beq	.L157
 294:Blink.cpp     ****                 return p2tremDepth;
 2126              		.loc 15 294 20 view .LVU524
 2127 0128 0128     		cmp	r0, #1
 295:Blink.cpp     ****             } else {
 2128              		.loc 15 295 17 view .LVU525
 295:Blink.cpp     ****             } else {
 2129              		.loc 15 295 24 is_stmt 0 view .LVU526
 2130 012a 0CBF     		ite	eq
 2131 012c 634B     		ldreq	r3, .L174+76
 297:Blink.cpp     ****             }
 2132              		.loc 15 297 17 is_stmt 1 view .LVU527
 297:Blink.cpp     ****             }
 2133              		.loc 15 297 24 is_stmt 0 view .LVU528
 2134 012e 644B     		ldrne	r3, .L174+80
 2135 0130 93ED000A 		vldr.32	s0, [r3]
 2136 0134 7047     		bx	lr
 2137              	.L110:
 278:Blink.cpp     ****         case 4://flanger
 2138              		.loc 15 278 13 is_stmt 1 view .LVU529
 279:Blink.cpp     ****             if(num == 0) {
 2139              		.loc 15 279 9 view .LVU530
 280:Blink.cpp     ****                 return p2flDelay;
 2140              		.loc 15 280 13 view .LVU531
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 87


 2141 0136 0028     		cmp	r0, #0
 2142 0138 7DD0     		beq	.L166
 282:Blink.cpp     ****                 return p2flDepth;
 2143              		.loc 15 282 20 view .LVU532
 2144 013a 0128     		cmp	r0, #1
 283:Blink.cpp     ****             } else {
 2145              		.loc 15 283 17 view .LVU533
 283:Blink.cpp     ****             } else {
 2146              		.loc 15 283 24 is_stmt 0 view .LVU534
 2147 013c 0CBF     		ite	eq
 2148 013e 614B     		ldreq	r3, .L174+84
 285:Blink.cpp     ****             }
 2149              		.loc 15 285 17 is_stmt 1 view .LVU535
 285:Blink.cpp     ****             }
 2150              		.loc 15 285 24 is_stmt 0 view .LVU536
 2151 0140 614B     		ldrne	r3, .L174+88
 2152 0142 93ED000A 		vldr.32	s0, [r3]
 2153 0146 7047     		bx	lr
 2154              	.L111:
 269:Blink.cpp     ****         case 3://chorus
 2155              		.loc 15 269 13 is_stmt 1 view .LVU537
 270:Blink.cpp     ****             if(num == 0) {
 2156              		.loc 15 270 9 view .LVU538
 271:Blink.cpp     ****                 return p2chDelay;
 2157              		.loc 15 271 13 view .LVU539
 2158 0148 0028     		cmp	r0, #0
 2159 014a 70D0     		beq	.L167
 273:Blink.cpp     ****                 return p2chDepth;
 2160              		.loc 15 273 20 view .LVU540
 2161 014c 0128     		cmp	r0, #1
 274:Blink.cpp     ****             } else {
 2162              		.loc 15 274 17 view .LVU541
 274:Blink.cpp     ****             } else {
 2163              		.loc 15 274 24 is_stmt 0 view .LVU542
 2164 014e 0CBF     		ite	eq
 2165 0150 5E4B     		ldreq	r3, .L174+92
 276:Blink.cpp     ****             }
 2166              		.loc 15 276 17 is_stmt 1 view .LVU543
 276:Blink.cpp     ****             }
 2167              		.loc 15 276 24 is_stmt 0 view .LVU544
 2168 0152 5F4B     		ldrne	r3, .L174+96
 2169 0154 93ED000A 		vldr.32	s0, [r3]
 2170 0158 7047     		bx	lr
 2171              	.L113:
 251:Blink.cpp     ****         case 1://fuzz
 2172              		.loc 15 251 13 is_stmt 1 view .LVU545
 252:Blink.cpp     ****             if(num == 0) {
 2173              		.loc 15 252 9 view .LVU546
 253:Blink.cpp     ****                 return p2fingain;
 2174              		.loc 15 253 13 view .LVU547
 2175 015a 0028     		cmp	r0, #0
 2176 015c 6FD0     		beq	.L168
 255:Blink.cpp     ****                 return p2fuzz;
 2177              		.loc 15 255 20 view .LVU548
 2178 015e 0128     		cmp	r0, #1
 256:Blink.cpp     ****             } else {
 2179              		.loc 15 256 17 view .LVU549
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 88


 256:Blink.cpp     ****             } else {
 2180              		.loc 15 256 24 is_stmt 0 view .LVU550
 2181 0160 0CBF     		ite	eq
 2182 0162 5C4B     		ldreq	r3, .L174+100
 258:Blink.cpp     ****             }
 2183              		.loc 15 258 17 is_stmt 1 view .LVU551
 258:Blink.cpp     ****             }
 2184              		.loc 15 258 24 is_stmt 0 view .LVU552
 2185 0164 5C4B     		ldrne	r3, .L174+104
 2186 0166 93ED000A 		vldr.32	s0, [r3]
 2187 016a 7047     		bx	lr
 2188              	.L112:
 260:Blink.cpp     ****         case 2://delay
 2189              		.loc 15 260 13 is_stmt 1 view .LVU553
 261:Blink.cpp     ****             if(num == 0) {
 2190              		.loc 15 261 9 view .LVU554
 262:Blink.cpp     ****                 return 0;
 2191              		.loc 15 262 13 view .LVU555
 2192 016c 0028     		cmp	r0, #0
 2193 016e 3FF458AF 		beq	.L157
 264:Blink.cpp     ****                 return del2.feedback;
 2194              		.loc 15 264 20 view .LVU556
 2195 0172 0128     		cmp	r0, #1
 265:Blink.cpp     ****             } else {
 2196              		.loc 15 265 29 is_stmt 0 view .LVU557
 2197 0174 594B     		ldr	r3, .L174+108
 264:Blink.cpp     ****                 return del2.feedback;
 2198              		.loc 15 264 20 view .LVU558
 2199 0176 88D1     		bne	.L138
 2200              	.L159:
 335:Blink.cpp     ****             } else {
 2201              		.loc 15 335 17 is_stmt 1 view .LVU559
 335:Blink.cpp     ****             } else {
 2202              		.loc 15 335 29 is_stmt 0 view .LVU560
 2203 0178 93ED030A 		vldr.32	s0, [r3, #12]
 2204 017c 7047     		bx	lr
 2205              	.L114:
 243:Blink.cpp     ****             if(num == 0) {
 2206              		.loc 15 243 9 is_stmt 1 view .LVU561
 244:Blink.cpp     ****                 return p2dtone;
 2207              		.loc 15 244 13 view .LVU562
 2208 017e 0028     		cmp	r0, #0
 2209 0180 61D0     		beq	.L169
 246:Blink.cpp     ****                 return p2doutgain;
 2210              		.loc 15 246 20 view .LVU563
 2211 0182 0128     		cmp	r0, #1
 247:Blink.cpp     ****             } else {
 2212              		.loc 15 247 17 view .LVU564
 247:Blink.cpp     ****             } else {
 2213              		.loc 15 247 24 is_stmt 0 view .LVU565
 2214 0184 0CBF     		ite	eq
 2215 0186 564B     		ldreq	r3, .L174+112
 249:Blink.cpp     ****             }
 2216              		.loc 15 249 17 is_stmt 1 view .LVU566
 249:Blink.cpp     ****             }
 2217              		.loc 15 249 24 is_stmt 0 view .LVU567
 2218 0188 564B     		ldrne	r3, .L174+116
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 89


 2219 018a 93ED000A 		vldr.32	s0, [r3]
 2220 018e 7047     		bx	lr
 2221              	.L162:
 175:Blink.cpp     ****             } else if(num == 1){
 2222              		.loc 15 175 17 is_stmt 1 view .LVU568
 175:Blink.cpp     ****             } else if(num == 1){
 2223              		.loc 15 175 24 is_stmt 0 view .LVU569
 2224 0190 554B     		ldr	r3, .L174+120
 2225 0192 93ED000A 		vldr.32	s0, [r3]
 2226 0196 7047     		bx	lr
 2227              	.L165:
 211:Blink.cpp     ****             } else if(num == 1){
 2228              		.loc 15 211 17 is_stmt 1 view .LVU570
 211:Blink.cpp     ****             } else if(num == 1){
 2229              		.loc 15 211 24 is_stmt 0 view .LVU571
 2230 0198 544B     		ldr	r3, .L174+124
 2231 019a 93ED000A 		vldr.32	s0, [r3]
 2232 019e 7047     		bx	lr
 2233              	.L163:
 184:Blink.cpp     ****             } else if(num == 1){
 2234              		.loc 15 184 17 is_stmt 1 view .LVU572
 184:Blink.cpp     ****             } else if(num == 1){
 2235              		.loc 15 184 24 is_stmt 0 view .LVU573
 2236 01a0 534B     		ldr	r3, .L174+128
 2237 01a2 93ED000A 		vldr.32	s0, [r3]
 2238 01a6 7047     		bx	lr
 2239              	.L164:
 202:Blink.cpp     ****             } else if(num == 1){
 2240              		.loc 15 202 17 is_stmt 1 view .LVU574
 202:Blink.cpp     ****             } else if(num == 1){
 2241              		.loc 15 202 24 is_stmt 0 view .LVU575
 2242 01a8 524B     		ldr	r3, .L174+132
 2243 01aa 93ED000A 		vldr.32	s0, [r3]
 2244 01ae 7047     		bx	lr
 2245              	.L126:
 369:Blink.cpp     ****         case 7://phaser
 2246              		.loc 15 369 13 is_stmt 1 view .LVU576
 370:Blink.cpp     ****             if(num == 0) {
 2247              		.loc 15 370 9 view .LVU577
 371:Blink.cpp     ****                 return 0;
 2248              		.loc 15 371 13 view .LVU578
 2249 01b0 0028     		cmp	r0, #0
 2250 01b2 3FF436AF 		beq	.L157
 373:Blink.cpp     ****                 return p3phFreq;
 2251              		.loc 15 373 20 view .LVU579
 2252 01b6 0128     		cmp	r0, #1
 374:Blink.cpp     ****             } else {
 2253              		.loc 15 374 17 view .LVU580
 374:Blink.cpp     ****             } else {
 2254              		.loc 15 374 24 is_stmt 0 view .LVU581
 2255 01b8 0CBF     		ite	eq
 2256 01ba 4F4B     		ldreq	r3, .L174+136
 376:Blink.cpp     ****             }
 2257              		.loc 15 376 17 is_stmt 1 view .LVU582
 376:Blink.cpp     ****             }
 2258              		.loc 15 376 24 is_stmt 0 view .LVU583
 2259 01bc 4F4B     		ldrne	r3, .L174+140
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 90


 2260 01be 93ED000A 		vldr.32	s0, [r3]
 2261 01c2 7047     		bx	lr
 2262              	.L128:
 360:Blink.cpp     ****         case 6://tremolo
 2263              		.loc 15 360 13 is_stmt 1 view .LVU584
 361:Blink.cpp     ****             if(num == 0) {
 2264              		.loc 15 361 9 view .LVU585
 362:Blink.cpp     ****                 return 0;
 2265              		.loc 15 362 13 view .LVU586
 2266 01c4 0028     		cmp	r0, #0
 2267 01c6 3FF42CAF 		beq	.L157
 364:Blink.cpp     ****                 return p3tremDepth;
 2268              		.loc 15 364 20 view .LVU587
 2269 01ca 0128     		cmp	r0, #1
 365:Blink.cpp     ****             } else {
 2270              		.loc 15 365 17 view .LVU588
 365:Blink.cpp     ****             } else {
 2271              		.loc 15 365 24 is_stmt 0 view .LVU589
 2272 01cc 0CBF     		ite	eq
 2273 01ce 4C4B     		ldreq	r3, .L174+144
 367:Blink.cpp     ****             }
 2274              		.loc 15 367 17 is_stmt 1 view .LVU590
 367:Blink.cpp     ****             }
 2275              		.loc 15 367 24 is_stmt 0 view .LVU591
 2276 01d0 4C4B     		ldrne	r3, .L174+148
 2277 01d2 93ED000A 		vldr.32	s0, [r3]
 2278 01d6 7047     		bx	lr
 2279              	.L133:
 313:Blink.cpp     ****             if(num == 0) {
 2280              		.loc 15 313 9 is_stmt 1 view .LVU592
 314:Blink.cpp     ****                 return p3dtone;
 2281              		.loc 15 314 13 view .LVU593
 2282 01d8 0028     		cmp	r0, #0
 2283 01da 38D0     		beq	.L170
 316:Blink.cpp     ****                 return p3doutgain;
 2284              		.loc 15 316 20 view .LVU594
 2285 01dc 0128     		cmp	r0, #1
 317:Blink.cpp     ****             } else {
 2286              		.loc 15 317 17 view .LVU595
 317:Blink.cpp     ****             } else {
 2287              		.loc 15 317 24 is_stmt 0 view .LVU596
 2288 01de 0CBF     		ite	eq
 2289 01e0 494B     		ldreq	r3, .L174+152
 319:Blink.cpp     ****             }
 2290              		.loc 15 319 17 is_stmt 1 view .LVU597
 319:Blink.cpp     ****             }
 2291              		.loc 15 319 24 is_stmt 0 view .LVU598
 2292 01e2 4A4B     		ldrne	r3, .L174+156
 2293 01e4 93ED000A 		vldr.32	s0, [r3]
 2294 01e8 7047     		bx	lr
 2295              	.L129:
 348:Blink.cpp     ****         case 4://flanger
 2296              		.loc 15 348 13 is_stmt 1 view .LVU599
 349:Blink.cpp     ****             if(num == 0) {
 2297              		.loc 15 349 9 view .LVU600
 350:Blink.cpp     ****                 return p3flDelay;
 2298              		.loc 15 350 13 view .LVU601
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 91


 2299 01ea 0028     		cmp	r0, #0
 2300 01ec 37D0     		beq	.L171
 352:Blink.cpp     ****                 return p3flDepth;
 2301              		.loc 15 352 20 view .LVU602
 2302 01ee 0128     		cmp	r0, #1
 353:Blink.cpp     ****             } else {
 2303              		.loc 15 353 17 view .LVU603
 353:Blink.cpp     ****             } else {
 2304              		.loc 15 353 24 is_stmt 0 view .LVU604
 2305 01f0 0CBF     		ite	eq
 2306 01f2 474B     		ldreq	r3, .L174+160
 355:Blink.cpp     ****             }
 2307              		.loc 15 355 17 is_stmt 1 view .LVU605
 355:Blink.cpp     ****             }
 2308              		.loc 15 355 24 is_stmt 0 view .LVU606
 2309 01f4 474B     		ldrne	r3, .L174+164
 2310 01f6 93ED000A 		vldr.32	s0, [r3]
 2311 01fa 7047     		bx	lr
 2312              	.L131:
 330:Blink.cpp     ****         case 2://delay
 2313              		.loc 15 330 13 is_stmt 1 view .LVU607
 331:Blink.cpp     ****             if(num == 0) {
 2314              		.loc 15 331 9 view .LVU608
 332:Blink.cpp     ****                 return 0;
 2315              		.loc 15 332 13 view .LVU609
 2316 01fc 0028     		cmp	r0, #0
 2317 01fe 3FF410AF 		beq	.L157
 334:Blink.cpp     ****                 return del3.feedback;
 2318              		.loc 15 334 20 view .LVU610
 2319 0202 0128     		cmp	r0, #1
 335:Blink.cpp     ****             } else {
 2320              		.loc 15 335 29 is_stmt 0 view .LVU611
 2321 0204 444B     		ldr	r3, .L174+168
 334:Blink.cpp     ****                 return del3.feedback;
 2322              		.loc 15 334 20 view .LVU612
 2323 0206 7FF440AF 		bne	.L138
 2324 020a B5E7     		b	.L159
 2325              	.L130:
 339:Blink.cpp     ****         case 3://chorus
 2326              		.loc 15 339 13 is_stmt 1 view .LVU613
 340:Blink.cpp     ****             if(num == 0) {
 2327              		.loc 15 340 9 view .LVU614
 341:Blink.cpp     ****                 return p3chDelay;
 2328              		.loc 15 341 13 view .LVU615
 2329 020c 0028     		cmp	r0, #0
 2330 020e 2AD0     		beq	.L172
 343:Blink.cpp     ****                 return p3chDepth;
 2331              		.loc 15 343 20 view .LVU616
 2332 0210 0128     		cmp	r0, #1
 344:Blink.cpp     ****             } else {
 2333              		.loc 15 344 17 view .LVU617
 344:Blink.cpp     ****             } else {
 2334              		.loc 15 344 24 is_stmt 0 view .LVU618
 2335 0212 0CBF     		ite	eq
 2336 0214 414B     		ldreq	r3, .L174+172
 346:Blink.cpp     ****             }
 2337              		.loc 15 346 17 is_stmt 1 view .LVU619
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 92


 346:Blink.cpp     ****             }
 2338              		.loc 15 346 24 is_stmt 0 view .LVU620
 2339 0216 424B     		ldrne	r3, .L174+176
 2340 0218 93ED000A 		vldr.32	s0, [r3]
 2341 021c 7047     		bx	lr
 2342              	.L132:
 321:Blink.cpp     ****         case 1://fuzz
 2343              		.loc 15 321 13 is_stmt 1 view .LVU621
 322:Blink.cpp     ****             if(num == 0) {
 2344              		.loc 15 322 9 view .LVU622
 323:Blink.cpp     ****                 return p3fingain;
 2345              		.loc 15 323 13 view .LVU623
 2346 021e D0B1     		cbz	r0, .L173
 325:Blink.cpp     ****                 return p3fuzz;
 2347              		.loc 15 325 20 view .LVU624
 2348 0220 0128     		cmp	r0, #1
 326:Blink.cpp     ****             } else {
 2349              		.loc 15 326 17 view .LVU625
 326:Blink.cpp     ****             } else {
 2350              		.loc 15 326 24 is_stmt 0 view .LVU626
 2351 0222 0CBF     		ite	eq
 2352 0224 3F4B     		ldreq	r3, .L174+180
 328:Blink.cpp     ****             }
 2353              		.loc 15 328 17 is_stmt 1 view .LVU627
 328:Blink.cpp     ****             }
 2354              		.loc 15 328 24 is_stmt 0 view .LVU628
 2355 0226 404B     		ldrne	r3, .L174+184
 2356 0228 93ED000A 		vldr.32	s0, [r3]
 2357 022c 7047     		bx	lr
 2358              	.L167:
 272:Blink.cpp     ****             } else if(num == 1){
 2359              		.loc 15 272 17 is_stmt 1 view .LVU629
 272:Blink.cpp     ****             } else if(num == 1){
 2360              		.loc 15 272 24 is_stmt 0 view .LVU630
 2361 022e 3F4B     		ldr	r3, .L174+188
 2362 0230 93ED000A 		vldr.32	s0, [r3]
 2363 0234 7047     		bx	lr
 2364              	.L166:
 281:Blink.cpp     ****             } else if(num == 1){
 2365              		.loc 15 281 17 is_stmt 1 view .LVU631
 281:Blink.cpp     ****             } else if(num == 1){
 2366              		.loc 15 281 24 is_stmt 0 view .LVU632
 2367 0236 3E4B     		ldr	r3, .L174+192
 2368 0238 93ED000A 		vldr.32	s0, [r3]
 2369 023c 7047     		bx	lr
 2370              	.L168:
 254:Blink.cpp     ****             } else if(num == 1){
 2371              		.loc 15 254 17 is_stmt 1 view .LVU633
 254:Blink.cpp     ****             } else if(num == 1){
 2372              		.loc 15 254 24 is_stmt 0 view .LVU634
 2373 023e 3D4B     		ldr	r3, .L174+196
 2374 0240 93ED000A 		vldr.32	s0, [r3]
 2375 0244 7047     		bx	lr
 2376              	.L169:
 245:Blink.cpp     ****             } else if(num == 1){
 2377              		.loc 15 245 17 is_stmt 1 view .LVU635
 245:Blink.cpp     ****             } else if(num == 1){
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 93


 2378              		.loc 15 245 24 is_stmt 0 view .LVU636
 2379 0246 3C4B     		ldr	r3, .L174+200
 2380 0248 93ED000A 		vldr.32	s0, [r3]
 2381 024c 7047     		bx	lr
 2382              	.L170:
 315:Blink.cpp     ****             } else if(num == 1){
 2383              		.loc 15 315 17 is_stmt 1 view .LVU637
 315:Blink.cpp     ****             } else if(num == 1){
 2384              		.loc 15 315 24 is_stmt 0 view .LVU638
 2385 024e 3B4B     		ldr	r3, .L174+204
 2386 0250 93ED000A 		vldr.32	s0, [r3]
 2387 0254 7047     		bx	lr
 2388              	.L173:
 324:Blink.cpp     ****             } else if(num == 1){
 2389              		.loc 15 324 17 is_stmt 1 view .LVU639
 324:Blink.cpp     ****             } else if(num == 1){
 2390              		.loc 15 324 24 is_stmt 0 view .LVU640
 2391 0256 3A4B     		ldr	r3, .L174+208
 2392 0258 93ED000A 		vldr.32	s0, [r3]
 2393 025c 7047     		bx	lr
 2394              	.L171:
 351:Blink.cpp     ****             } else if(num == 1){
 2395              		.loc 15 351 17 is_stmt 1 view .LVU641
 351:Blink.cpp     ****             } else if(num == 1){
 2396              		.loc 15 351 24 is_stmt 0 view .LVU642
 2397 025e 394B     		ldr	r3, .L174+212
 2398 0260 93ED000A 		vldr.32	s0, [r3]
 2399 0264 7047     		bx	lr
 2400              	.L172:
 342:Blink.cpp     ****             } else if(num == 1){
 2401              		.loc 15 342 17 is_stmt 1 view .LVU643
 342:Blink.cpp     ****             } else if(num == 1){
 2402              		.loc 15 342 24 is_stmt 0 view .LVU644
 2403 0266 384B     		ldr	r3, .L174+216
 2404 0268 93ED000A 		vldr.32	s0, [r3]
 2405 026c 7047     		bx	lr
 2406              	.L175:
 2407 026e 00BF     		.align	2
 2408              	.L174:
 2409 0270 00000000 		.word	.LANCHOR5
 2410 0274 00000000 		.word	.LANCHOR35
 2411 0278 00000000 		.word	0
 2412 027c 00000000 		.word	.LANCHOR7
 2413 0280 00000000 		.word	.LANCHOR8
 2414 0284 00000000 		.word	.LANCHOR16
 2415 0288 00000000 		.word	.LANCHOR15
 2416 028c 00000000 		.word	.LANCHOR24
 2417 0290 0080BB47 		.word	1203470336
 2418 0294 00000000 		.word	.LANCHOR37
 2419 0298 00000000 		.word	.LANCHOR38
 2420 029c 00000000 		.word	.LANCHOR40
 2421 02a0 00000000 		.word	.LANCHOR41
 2422 02a4 00000000 		.word	.LANCHOR42
 2423 02a8 00000000 		.word	.LANCHOR43
 2424 02ac 00000000 		.word	.LANCHOR44
 2425 02b0 00000000 		.word	.LANCHOR45
 2426 02b4 00000000 		.word	.LANCHOR54
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 94


 2427 02b8 00000000 		.word	.LANCHOR55
 2428 02bc 00000000 		.word	.LANCHOR52
 2429 02c0 00000000 		.word	.LANCHOR53
 2430 02c4 00000000 		.word	.LANCHOR50
 2431 02c8 00000000 		.word	.LANCHOR51
 2432 02cc 00000000 		.word	.LANCHOR47
 2433 02d0 00000000 		.word	.LANCHOR48
 2434 02d4 00000000 		.word	.LANCHOR19
 2435 02d8 00000000 		.word	.LANCHOR18
 2436 02dc 00000000 		.word	.LANCHOR25
 2437 02e0 00000000 		.word	.LANCHOR10
 2438 02e4 00000000 		.word	.LANCHOR11
 2439 02e8 00000000 		.word	.LANCHOR6
 2440 02ec 00000000 		.word	.LANCHOR39
 2441 02f0 00000000 		.word	.LANCHOR17
 2442 02f4 00000000 		.word	.LANCHOR36
 2443 02f8 00000000 		.word	.LANCHOR64
 2444 02fc 00000000 		.word	.LANCHOR65
 2445 0300 00000000 		.word	.LANCHOR62
 2446 0304 00000000 		.word	.LANCHOR63
 2447 0308 00000000 		.word	.LANCHOR13
 2448 030c 00000000 		.word	.LANCHOR14
 2449 0310 00000000 		.word	.LANCHOR60
 2450 0314 00000000 		.word	.LANCHOR61
 2451 0318 00000000 		.word	.LANCHOR26
 2452 031c 00000000 		.word	.LANCHOR57
 2453 0320 00000000 		.word	.LANCHOR58
 2454 0324 00000000 		.word	.LANCHOR22
 2455 0328 00000000 		.word	.LANCHOR21
 2456 032c 00000000 		.word	.LANCHOR46
 2457 0330 00000000 		.word	.LANCHOR49
 2458 0334 00000000 		.word	.LANCHOR20
 2459 0338 00000000 		.word	.LANCHOR9
 2460 033c 00000000 		.word	.LANCHOR12
 2461 0340 00000000 		.word	.LANCHOR23
 2462 0344 00000000 		.word	.LANCHOR59
 2463 0348 00000000 		.word	.LANCHOR56
 2464              		.cfi_endproc
 2465              	.LFE4899:
 2467              		.section	.text._Z14setEffectPramsv,"ax",%progbits
 2468              		.align	1
 2469              		.p2align 2,,3
 2470              		.global	_Z14setEffectPramsv
 2471              		.syntax unified
 2472              		.thumb
 2473              		.thumb_func
 2474              		.fpu fpv5-d16
 2476              	_Z14setEffectPramsv:
 2477              	.LFB4900:
 384:Blink.cpp     ****     if(profile == 0) {
 2478              		.loc 15 384 22 is_stmt 1 view -0
 2479              		.cfi_startproc
 2480              		@ args = 0, pretend = 0, frame = 0
 2481              		@ frame_needed = 0, uses_anonymous_args = 0
 385:Blink.cpp     ****         switch (effectCount)
 2482              		.loc 15 385 5 view .LVU646
 385:Blink.cpp     ****         switch (effectCount)
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 95


 2483              		.loc 15 385 16 is_stmt 0 view .LVU647
 2484 0000 9A4B     		ldr	r3, .L211
 384:Blink.cpp     ****     if(profile == 0) {
 2485              		.loc 15 384 22 view .LVU648
 2486 0002 70B5     		push	{r4, r5, r6, lr}
 2487              		.cfi_def_cfa_offset 16
 2488              		.cfi_offset 4, -16
 2489              		.cfi_offset 5, -12
 2490              		.cfi_offset 6, -8
 2491              		.cfi_offset 14, -4
 2492 0004 2DED028B 		vpush.64	{d8}
 2493              		.cfi_def_cfa_offset 24
 2494              		.cfi_offset 80, -24
 2495              		.cfi_offset 81, -20
 385:Blink.cpp     ****         switch (effectCount)
 2496              		.loc 15 385 16 view .LVU649
 2497 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 385:Blink.cpp     ****         switch (effectCount)
 2498              		.loc 15 385 5 view .LVU650
 2499 000a 4BB9     		cbnz	r3, .L177
 386:Blink.cpp     ****         {
 2500              		.loc 15 386 9 is_stmt 1 view .LVU651
 386:Blink.cpp     ****         {
 2501              		.loc 15 386 17 is_stmt 0 view .LVU652
 2502 000c 984B     		ldr	r3, .L211+4
 2503 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2504 0010 072B     		cmp	r3, #7
 2505 0012 0AD8     		bhi	.L176
 2506 0014 DFE803F0 		tbb	[pc, r3]
 2507              	.L180:
 2508 0018 A5       		.byte	(.L187-.L180)/2
 2509 0019 B2       		.byte	(.L186-.L180)/2
 2510 001a 46       		.byte	(.L185-.L180)/2
 2511 001b 54       		.byte	(.L184-.L180)/2
 2512 001c 2A       		.byte	(.L183-.L180)/2
 2513 001d 1A       		.byte	(.L201-.L180)/2
 2514 001e 70       		.byte	(.L181-.L180)/2
 2515 001f 87       		.byte	(.L179-.L180)/2
 2516              		.p2align 1
 2517              	.L177:
 439:Blink.cpp     ****         switch (effectCount)
 2518              		.loc 15 439 12 is_stmt 1 view .LVU653
 2519 0020 012B     		cmp	r3, #1
 2520 0022 00F0B880 		beq	.L209
 491:Blink.cpp     ****         switch (effectCount)
 2521              		.loc 15 491 12 view .LVU654
 2522 0026 022B     		cmp	r3, #2
 2523 0028 02D0     		beq	.L210
 2524              	.L176:
 546:Blink.cpp     **** 
 2525              		.loc 15 546 1 is_stmt 0 view .LVU655
 2526 002a BDEC028B 		vldm	sp!, {d8}
 2527              		.cfi_remember_state
 2528              		.cfi_restore 80
 2529              		.cfi_restore 81
 2530              		.cfi_def_cfa_offset 16
 2531 002e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 96


 2532              	.L210:
 2533              		.cfi_restore_state
 492:Blink.cpp     ****         {
 2534              		.loc 15 492 9 is_stmt 1 view .LVU656
 492:Blink.cpp     ****         {
 2535              		.loc 15 492 17 is_stmt 0 view .LVU657
 2536 0030 8F4B     		ldr	r3, .L211+4
 2537 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2538 0034 072B     		cmp	r3, #7
 2539 0036 F8D8     		bhi	.L176
 2540 0038 DFE813F0 		tbh	[pc, r3, lsl #1]
 2541              	.L199:
 2542 003c 2402     		.2byte	(.L206-.L199)/2
 2543 003e 1702     		.2byte	(.L205-.L199)/2
 2544 0040 1102     		.2byte	(.L204-.L199)/2
 2545 0042 F501     		.2byte	(.L203-.L199)/2
 2546 0044 D901     		.2byte	(.L202-.L199)/2
 2547 0046 0800     		.2byte	(.L201-.L199)/2
 2548 0048 C201     		.2byte	(.L200-.L199)/2
 2549 004a A401     		.2byte	(.L198-.L199)/2
 2550              		.p2align 1
 2551              	.L201:
 524:Blink.cpp     ****             wahflt.SetFreq(1200*wah+400);
 2552              		.loc 15 524 9 is_stmt 1 view .LVU658
 525:Blink.cpp     ****             break;
 2553              		.loc 15 525 13 view .LVU659
 525:Blink.cpp     ****             break;
 2554              		.loc 15 525 32 is_stmt 0 view .LVU660
 2555 004c 894B     		ldr	r3, .L211+8
 525:Blink.cpp     ****             break;
 2556              		.loc 15 525 27 view .LVU661
 2557 004e DFED8A7A 		vldr.32	s15, .L211+12
 2558 0052 9FED8A0A 		vldr.32	s0, .L211+16
 2559 0056 93ED007A 		vldr.32	s14, [r3]
 2560 005a 8948     		ldr	r0, .L211+20
 2561 005c A7EE270A 		vfma.f32	s0, s14, s15
 546:Blink.cpp     **** 
 2562              		.loc 15 546 1 view .LVU662
 2563 0060 BDEC028B 		vldm	sp!, {d8}
 2564              		.cfi_remember_state
 2565              		.cfi_restore 80
 2566              		.cfi_restore 81
 2567              		.cfi_def_cfa_offset 16
 2568 0064 BDE87040 		pop	{r4, r5, r6, lr}
 2569              		.cfi_restore 14
 2570              		.cfi_restore 6
 2571              		.cfi_restore 5
 2572              		.cfi_restore 4
 2573              		.cfi_def_cfa_offset 0
 525:Blink.cpp     ****             break;
 2574              		.loc 15 525 27 view .LVU663
 2575 0068 FFF7FEBF 		b	_ZN7daisysp12LadderFilter7SetFreqEf
 2576              	.LVL127:
 2577              	.L183:
 2578              		.cfi_restore_state
 410:Blink.cpp     ****             fl.SetDelay(knob1);
 2579              		.loc 15 410 9 is_stmt 1 view .LVU664
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 97


 411:Blink.cpp     ****             p1flDelay = knob1;
 2580              		.loc 15 411 13 view .LVU665
 411:Blink.cpp     ****             p1flDelay = knob1;
 2581              		.loc 15 411 24 is_stmt 0 view .LVU666
 2582 006c 854E     		ldr	r6, .L211+24
 2583 006e 8648     		ldr	r0, .L211+28
 413:Blink.cpp     ****             p1flDepth = knob2;
 2584              		.loc 15 413 27 view .LVU667
 2585 0070 864D     		ldr	r5, .L211+32
 411:Blink.cpp     ****             p1flDelay = knob1;
 2586              		.loc 15 411 24 view .LVU668
 2587 0072 96ED000A 		vldr.32	s0, [r6]
 2588 0076 FFF7FEFF 		bl	_ZN7daisysp7Flanger8SetDelayEf
 2589              	.LVL128:
 412:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 2590              		.loc 15 412 13 is_stmt 1 view .LVU669
 412:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 2591              		.loc 15 412 23 is_stmt 0 view .LVU670
 2592 007a 3268     		ldr	r2, [r6]	@ float
 2593 007c 844B     		ldr	r3, .L211+36
 415:Blink.cpp     ****             p1flFreq = knob3;
 2594              		.loc 15 415 26 view .LVU671
 2595 007e 854C     		ldr	r4, .L211+40
 413:Blink.cpp     ****             p1flDepth = knob2;
 2596              		.loc 15 413 27 view .LVU672
 2597 0080 95ED000A 		vldr.32	s0, [r5]
 2598 0084 8048     		ldr	r0, .L211+28
 412:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 2599              		.loc 15 412 23 view .LVU673
 2600 0086 1A60     		str	r2, [r3]	@ float
 413:Blink.cpp     ****             p1flDepth = knob2;
 2601              		.loc 15 413 13 is_stmt 1 view .LVU674
 413:Blink.cpp     ****             p1flDepth = knob2;
 2602              		.loc 15 413 27 is_stmt 0 view .LVU675
 2603 0088 FFF7FEFF 		bl	_ZN7daisysp7Flanger11SetLfoDepthEf
 2604              	.LVL129:
 414:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 2605              		.loc 15 414 13 is_stmt 1 view .LVU676
 414:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 2606              		.loc 15 414 23 is_stmt 0 view .LVU677
 2607 008c 2A68     		ldr	r2, [r5]	@ float
 2608 008e 824B     		ldr	r3, .L211+44
 415:Blink.cpp     ****             p1flFreq = knob3;
 2609              		.loc 15 415 26 view .LVU678
 2610 0090 94ED000A 		vldr.32	s0, [r4]
 2611 0094 7C48     		ldr	r0, .L211+28
 414:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 2612              		.loc 15 414 23 view .LVU679
 2613 0096 1A60     		str	r2, [r3]	@ float
 415:Blink.cpp     ****             p1flFreq = knob3;
 2614              		.loc 15 415 13 is_stmt 1 view .LVU680
 415:Blink.cpp     ****             p1flFreq = knob3;
 2615              		.loc 15 415 26 is_stmt 0 view .LVU681
 2616 0098 FFF7FEFF 		bl	_ZN7daisysp7Flanger10SetLfoFreqEf
 2617              	.LVL130:
 416:Blink.cpp     ****             break;
 2618              		.loc 15 416 13 is_stmt 1 view .LVU682
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 98


 416:Blink.cpp     ****             break;
 2619              		.loc 15 416 22 is_stmt 0 view .LVU683
 2620 009c 7F4B     		ldr	r3, .L211+48
 2621 009e 2268     		ldr	r2, [r4]	@ float
 2622 00a0 1A60     		str	r2, [r3]	@ float
 417:Blink.cpp     ****         case 5://wah
 2623              		.loc 15 417 13 is_stmt 1 view .LVU684
 2624 00a2 C2E7     		b	.L176
 2625              	.L185:
 398:Blink.cpp     ****             del1.feedback = knob2;
 2626              		.loc 15 398 9 view .LVU685
 399:Blink.cpp     ****             del1.delayTarget = 48000.0*2*knob3;
 2627              		.loc 15 399 13 view .LVU686
 400:Blink.cpp     ****             break;
 2628              		.loc 15 400 41 is_stmt 0 view .LVU687
 2629 00a4 7B49     		ldr	r1, .L211+40
 2630 00a6 9FED7E7A 		vldr.32	s14, .L211+52
 399:Blink.cpp     ****             del1.delayTarget = 48000.0*2*knob3;
 2631              		.loc 15 399 27 view .LVU688
 2632 00aa 784A     		ldr	r2, .L211+32
 2633 00ac 7D4B     		ldr	r3, .L211+56
 2634              	.L208:
 453:Blink.cpp     ****             del2.feedback = knob3;
 2635              		.loc 15 453 41 view .LVU689
 2636 00ae D1ED007A 		vldr.32	s15, [r1]
 454:Blink.cpp     ****             break;
 2637              		.loc 15 454 27 view .LVU690
 2638 00b2 1268     		ldr	r2, [r2]	@ float
 453:Blink.cpp     ****             del2.feedback = knob3;
 2639              		.loc 15 453 41 view .LVU691
 2640 00b4 67EE877A 		vmul.f32	s15, s15, s14
 454:Blink.cpp     ****             break;
 2641              		.loc 15 454 27 view .LVU692
 2642 00b8 DA60     		str	r2, [r3, #12]	@ float
 453:Blink.cpp     ****             del2.feedback = knob3;
 2643              		.loc 15 453 30 view .LVU693
 2644 00ba C3ED027A 		vstr.32	s15, [r3, #8]
 454:Blink.cpp     ****             break;
 2645              		.loc 15 454 13 is_stmt 1 view .LVU694
 455:Blink.cpp     ****         case 3://chorus
 2646              		.loc 15 455 13 view .LVU695
 2647 00be B4E7     		b	.L176
 2648              	.L184:
 402:Blink.cpp     ****             ch.SetDelay(knob1);
 2649              		.loc 15 402 9 view .LVU696
 403:Blink.cpp     ****             p1chDelay = knob1;
 2650              		.loc 15 403 13 view .LVU697
 403:Blink.cpp     ****             p1chDelay = knob1;
 2651              		.loc 15 403 24 is_stmt 0 view .LVU698
 2652 00c0 704E     		ldr	r6, .L211+24
 2653 00c2 7948     		ldr	r0, .L211+60
 405:Blink.cpp     ****             p1chDepth = knob2;
 2654              		.loc 15 405 27 view .LVU699
 2655 00c4 714D     		ldr	r5, .L211+32
 403:Blink.cpp     ****             p1chDelay = knob1;
 2656              		.loc 15 403 24 view .LVU700
 2657 00c6 96ED000A 		vldr.32	s0, [r6]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 99


 2658 00ca FFF7FEFF 		bl	_ZN7daisysp6Chorus8SetDelayEf
 2659              	.LVL131:
 404:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 2660              		.loc 15 404 13 is_stmt 1 view .LVU701
 404:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 2661              		.loc 15 404 23 is_stmt 0 view .LVU702
 2662 00ce 3268     		ldr	r2, [r6]	@ float
 2663 00d0 764B     		ldr	r3, .L211+64
 407:Blink.cpp     ****             p1chFreq = knob3;
 2664              		.loc 15 407 26 view .LVU703
 2665 00d2 704C     		ldr	r4, .L211+40
 405:Blink.cpp     ****             p1chDepth = knob2;
 2666              		.loc 15 405 27 view .LVU704
 2667 00d4 95ED000A 		vldr.32	s0, [r5]
 2668 00d8 7348     		ldr	r0, .L211+60
 404:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 2669              		.loc 15 404 23 view .LVU705
 2670 00da 1A60     		str	r2, [r3]	@ float
 405:Blink.cpp     ****             p1chDepth = knob2;
 2671              		.loc 15 405 13 is_stmt 1 view .LVU706
 405:Blink.cpp     ****             p1chDepth = knob2;
 2672              		.loc 15 405 27 is_stmt 0 view .LVU707
 2673 00dc FFF7FEFF 		bl	_ZN7daisysp6Chorus11SetLfoDepthEf
 2674              	.LVL132:
 406:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 2675              		.loc 15 406 13 is_stmt 1 view .LVU708
 406:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 2676              		.loc 15 406 23 is_stmt 0 view .LVU709
 2677 00e0 2A68     		ldr	r2, [r5]	@ float
 2678 00e2 734B     		ldr	r3, .L211+68
 407:Blink.cpp     ****             p1chFreq = knob3;
 2679              		.loc 15 407 26 view .LVU710
 2680 00e4 94ED000A 		vldr.32	s0, [r4]
 2681 00e8 6F48     		ldr	r0, .L211+60
 406:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 2682              		.loc 15 406 23 view .LVU711
 2683 00ea 1A60     		str	r2, [r3]	@ float
 407:Blink.cpp     ****             p1chFreq = knob3;
 2684              		.loc 15 407 13 is_stmt 1 view .LVU712
 407:Blink.cpp     ****             p1chFreq = knob3;
 2685              		.loc 15 407 26 is_stmt 0 view .LVU713
 2686 00ec FFF7FEFF 		bl	_ZN7daisysp6Chorus10SetLfoFreqEf
 2687              	.LVL133:
 408:Blink.cpp     ****             break;
 2688              		.loc 15 408 13 is_stmt 1 view .LVU714
 408:Blink.cpp     ****             break;
 2689              		.loc 15 408 22 is_stmt 0 view .LVU715
 2690 00f0 704B     		ldr	r3, .L211+72
 2691 00f2 2268     		ldr	r2, [r4]	@ float
 2692 00f4 1A60     		str	r2, [r3]	@ float
 409:Blink.cpp     ****         case 4://flanger
 2693              		.loc 15 409 13 is_stmt 1 view .LVU716
 2694 00f6 98E7     		b	.L176
 2695              	.L181:
 421:Blink.cpp     ****             trem.SetDepth(knob2);
 2696              		.loc 15 421 9 view .LVU717
 422:Blink.cpp     ****             p1tremDepth = knob2;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 100


 2697              		.loc 15 422 13 view .LVU718
 422:Blink.cpp     ****             p1tremDepth = knob2;
 2698              		.loc 15 422 26 is_stmt 0 view .LVU719
 2699 00f8 644D     		ldr	r5, .L211+32
 424:Blink.cpp     ****             p1tremFreq = knob3;
 2700              		.loc 15 424 25 view .LVU720
 2701 00fa 664C     		ldr	r4, .L211+40
 422:Blink.cpp     ****             p1tremDepth = knob2;
 2702              		.loc 15 422 26 view .LVU721
 2703 00fc 6E48     		ldr	r0, .L211+76
 2704 00fe 95ED000A 		vldr.32	s0, [r5]
 2705 0102 FFF7FEFF 		bl	_ZN7daisysp7Tremolo8SetDepthEf
 2706              	.LVL134:
 423:Blink.cpp     ****             trem.SetFreq(knob3*200);
 2707              		.loc 15 423 13 is_stmt 1 view .LVU722
 424:Blink.cpp     ****             p1tremFreq = knob3;
 2708              		.loc 15 424 25 is_stmt 0 view .LVU723
 2709 0106 94ED000A 		vldr.32	s0, [r4]
 2710 010a DFED6C7A 		vldr.32	s15, .L211+80
 423:Blink.cpp     ****             trem.SetFreq(knob3*200);
 2711              		.loc 15 423 25 view .LVU724
 2712 010e 2A68     		ldr	r2, [r5]	@ float
 2713 0110 6B4B     		ldr	r3, .L211+84
 424:Blink.cpp     ****             p1tremFreq = knob3;
 2714              		.loc 15 424 25 view .LVU725
 2715 0112 20EE270A 		vmul.f32	s0, s0, s15
 2716 0116 6848     		ldr	r0, .L211+76
 423:Blink.cpp     ****             trem.SetFreq(knob3*200);
 2717              		.loc 15 423 25 view .LVU726
 2718 0118 1A60     		str	r2, [r3]	@ float
 424:Blink.cpp     ****             p1tremFreq = knob3;
 2719              		.loc 15 424 13 is_stmt 1 view .LVU727
 424:Blink.cpp     ****             p1tremFreq = knob3;
 2720              		.loc 15 424 25 is_stmt 0 view .LVU728
 2721 011a FFF7FEFF 		bl	_ZN7daisysp7Tremolo7SetFreqEf
 2722              	.LVL135:
 425:Blink.cpp     ****             break;
 2723              		.loc 15 425 13 is_stmt 1 view .LVU729
 425:Blink.cpp     ****             break;
 2724              		.loc 15 425 24 is_stmt 0 view .LVU730
 2725 011e 694B     		ldr	r3, .L211+88
 2726 0120 2268     		ldr	r2, [r4]	@ float
 2727 0122 1A60     		str	r2, [r3]	@ float
 426:Blink.cpp     ****         case 7://phaser
 2728              		.loc 15 426 13 is_stmt 1 view .LVU731
 2729 0124 81E7     		b	.L176
 2730              	.L179:
 427:Blink.cpp     ****             ph.SetFreq(knob2*10000);
 2731              		.loc 15 427 9 view .LVU732
 428:Blink.cpp     ****             p1phFreq = knob2;
 2732              		.loc 15 428 13 view .LVU733
 428:Blink.cpp     ****             p1phFreq = knob2;
 2733              		.loc 15 428 23 is_stmt 0 view .LVU734
 2734 0126 594D     		ldr	r5, .L211+32
 2735 0128 9FED678A 		vldr.32	s16, .L211+92
 2736 012c 95ED000A 		vldr.32	s0, [r5]
 2737 0130 6648     		ldr	r0, .L211+96
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 101


 2738 0132 20EE080A 		vmul.f32	s0, s0, s16
 431:Blink.cpp     ****             p1phdepth = knob3;
 2739              		.loc 15 431 27 view .LVU735
 2740 0136 574C     		ldr	r4, .L211+40
 428:Blink.cpp     ****             p1phFreq = knob2;
 2741              		.loc 15 428 23 view .LVU736
 2742 0138 FFF7FEFF 		bl	_ZN7daisysp6Phaser7SetFreqEf
 2743              	.LVL136:
 429:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 2744              		.loc 15 429 13 is_stmt 1 view .LVU737
 429:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 2745              		.loc 15 429 22 is_stmt 0 view .LVU738
 2746 013c D5ED007A 		vldr.32	s15, [r5]
 2747 0140 634B     		ldr	r3, .L211+100
 430:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 2748              		.loc 15 430 26 view .LVU739
 2749 0142 27EE880A 		vmul.f32	s0, s15, s16
 2750 0146 6148     		ldr	r0, .L211+96
 429:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 2751              		.loc 15 429 22 view .LVU740
 2752 0148 C3ED007A 		vstr.32	s15, [r3]
 430:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 2753              		.loc 15 430 13 is_stmt 1 view .LVU741
 430:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 2754              		.loc 15 430 26 is_stmt 0 view .LVU742
 2755 014c FFF7FEFF 		bl	_ZN7daisysp6Phaser10SetLfoFreqEf
 2756              	.LVL137:
 431:Blink.cpp     ****             p1phdepth = knob3;
 2757              		.loc 15 431 13 is_stmt 1 view .LVU743
 431:Blink.cpp     ****             p1phdepth = knob3;
 2758              		.loc 15 431 27 is_stmt 0 view .LVU744
 2759 0150 94ED000A 		vldr.32	s0, [r4]
 2760 0154 5D48     		ldr	r0, .L211+96
 2761 0156 FFF7FEFF 		bl	_ZN7daisysp6Phaser11SetLfoDepthEf
 2762              	.LVL138:
 432:Blink.cpp     **** 
 2763              		.loc 15 432 13 is_stmt 1 view .LVU745
 432:Blink.cpp     **** 
 2764              		.loc 15 432 23 is_stmt 0 view .LVU746
 2765 015a 5E4B     		ldr	r3, .L211+104
 2766 015c 2268     		ldr	r2, [r4]	@ float
 2767 015e 1A60     		str	r2, [r3]	@ float
 434:Blink.cpp     ****         
 2768              		.loc 15 434 13 is_stmt 1 view .LVU747
 2769 0160 63E7     		b	.L176
 2770              	.L187:
 388:Blink.cpp     ****             p1dtone = knob1;
 2771              		.loc 15 388 9 view .LVU748
 389:Blink.cpp     ****             p1doutgain = knob2;
 2772              		.loc 15 389 13 view .LVU749
 389:Blink.cpp     ****             p1doutgain = knob2;
 2773              		.loc 15 389 21 is_stmt 0 view .LVU750
 2774 0162 4849     		ldr	r1, .L211+24
 2775 0164 5C4B     		ldr	r3, .L211+108
 2776 0166 0C68     		ldr	r4, [r1]	@ float
 390:Blink.cpp     ****             p1dingain = knob3;
 2777              		.loc 15 390 24 view .LVU751
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 102


 2778 0168 4848     		ldr	r0, .L211+32
 391:Blink.cpp     ****             break;
 2779              		.loc 15 391 23 view .LVU752
 2780 016a 4A4A     		ldr	r2, .L211+40
 389:Blink.cpp     ****             p1doutgain = knob2;
 2781              		.loc 15 389 21 view .LVU753
 2782 016c 1C60     		str	r4, [r3]	@ float
 390:Blink.cpp     ****             p1dingain = knob3;
 2783              		.loc 15 390 13 is_stmt 1 view .LVU754
 390:Blink.cpp     ****             p1dingain = knob3;
 2784              		.loc 15 390 24 is_stmt 0 view .LVU755
 2785 016e 0068     		ldr	r0, [r0]	@ float
 391:Blink.cpp     ****             break;
 2786              		.loc 15 391 23 view .LVU756
 2787 0170 1268     		ldr	r2, [r2]	@ float
 390:Blink.cpp     ****             p1dingain = knob3;
 2788              		.loc 15 390 24 view .LVU757
 2789 0172 5A49     		ldr	r1, .L211+112
 391:Blink.cpp     ****             break;
 2790              		.loc 15 391 23 view .LVU758
 2791 0174 5A4B     		ldr	r3, .L211+116
 390:Blink.cpp     ****             p1dingain = knob3;
 2792              		.loc 15 390 24 view .LVU759
 2793 0176 0860     		str	r0, [r1]	@ float
 391:Blink.cpp     ****             break;
 2794              		.loc 15 391 13 is_stmt 1 view .LVU760
 391:Blink.cpp     ****             break;
 2795              		.loc 15 391 23 is_stmt 0 view .LVU761
 2796 0178 1A60     		str	r2, [r3]	@ float
 392:Blink.cpp     ****         case 1://fuzz
 2797              		.loc 15 392 13 is_stmt 1 view .LVU762
 2798 017a 56E7     		b	.L176
 2799              	.L186:
 393:Blink.cpp     ****             p1fingain = knob1;
 2800              		.loc 15 393 9 view .LVU763
 394:Blink.cpp     ****             p1fuzz = knob2;
 2801              		.loc 15 394 13 view .LVU764
 394:Blink.cpp     ****             p1fuzz = knob2;
 2802              		.loc 15 394 23 is_stmt 0 view .LVU765
 2803 017c 4149     		ldr	r1, .L211+24
 2804 017e 594B     		ldr	r3, .L211+120
 2805 0180 0C68     		ldr	r4, [r1]	@ float
 395:Blink.cpp     ****             p1ftone = knob3;
 2806              		.loc 15 395 20 view .LVU766
 2807 0182 4248     		ldr	r0, .L211+32
 396:Blink.cpp     ****             break;
 2808              		.loc 15 396 21 view .LVU767
 2809 0184 434A     		ldr	r2, .L211+40
 394:Blink.cpp     ****             p1fuzz = knob2;
 2810              		.loc 15 394 23 view .LVU768
 2811 0186 1C60     		str	r4, [r3]	@ float
 395:Blink.cpp     ****             p1ftone = knob3;
 2812              		.loc 15 395 13 is_stmt 1 view .LVU769
 395:Blink.cpp     ****             p1ftone = knob3;
 2813              		.loc 15 395 20 is_stmt 0 view .LVU770
 2814 0188 0068     		ldr	r0, [r0]	@ float
 396:Blink.cpp     ****             break;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 103


 2815              		.loc 15 396 21 view .LVU771
 2816 018a 1268     		ldr	r2, [r2]	@ float
 395:Blink.cpp     ****             p1ftone = knob3;
 2817              		.loc 15 395 20 view .LVU772
 2818 018c 5649     		ldr	r1, .L211+124
 396:Blink.cpp     ****             break;
 2819              		.loc 15 396 21 view .LVU773
 2820 018e 574B     		ldr	r3, .L211+128
 395:Blink.cpp     ****             p1ftone = knob3;
 2821              		.loc 15 395 20 view .LVU774
 2822 0190 0860     		str	r0, [r1]	@ float
 396:Blink.cpp     ****             break;
 2823              		.loc 15 396 13 is_stmt 1 view .LVU775
 396:Blink.cpp     ****             break;
 2824              		.loc 15 396 21 is_stmt 0 view .LVU776
 2825 0192 1A60     		str	r2, [r3]	@ float
 397:Blink.cpp     ****         case 2://delay
 2826              		.loc 15 397 13 is_stmt 1 view .LVU777
 2827 0194 49E7     		b	.L176
 2828              	.L209:
 440:Blink.cpp     ****         {
 2829              		.loc 15 440 9 view .LVU778
 440:Blink.cpp     ****         {
 2830              		.loc 15 440 17 is_stmt 0 view .LVU779
 2831 0196 364B     		ldr	r3, .L211+4
 2832 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2833 019a 072B     		cmp	r3, #7
 2834 019c 3FF645AF 		bhi	.L176
 2835 01a0 01A2     		adr	r2, .L190
 2836 01a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2837 01a6 00BF     		.p2align 2
 2838              	.L190:
 2839 01a8 6B030000 		.word	.L197+1
 2840 01ac 51030000 		.word	.L196+1
 2841 01b0 45030000 		.word	.L195+1
 2842 01b4 0D030000 		.word	.L194+1
 2843 01b8 33020000 		.word	.L193+1
 2844 01bc 4D000000 		.word	.L201+1
 2845 01c0 05020000 		.word	.L191+1
 2846 01c4 C9010000 		.word	.L189+1
 2847              		.p2align 1
 2848              	.L189:
 481:Blink.cpp     ****             ph.SetFreq(knob2*10000);
 2849              		.loc 15 481 9 is_stmt 1 view .LVU780
 482:Blink.cpp     ****             p2phFreq = knob2;
 2850              		.loc 15 482 13 view .LVU781
 482:Blink.cpp     ****             p2phFreq = knob2;
 2851              		.loc 15 482 23 is_stmt 0 view .LVU782
 2852 01c8 304D     		ldr	r5, .L211+32
 2853 01ca 9FED3F8A 		vldr.32	s16, .L211+92
 2854 01ce 95ED000A 		vldr.32	s0, [r5]
 2855 01d2 3E48     		ldr	r0, .L211+96
 2856 01d4 20EE080A 		vmul.f32	s0, s0, s16
 485:Blink.cpp     ****             p2phdepth = knob3;
 2857              		.loc 15 485 27 view .LVU783
 2858 01d8 2E4C     		ldr	r4, .L211+40
 482:Blink.cpp     ****             p2phFreq = knob2;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 104


 2859              		.loc 15 482 23 view .LVU784
 2860 01da FFF7FEFF 		bl	_ZN7daisysp6Phaser7SetFreqEf
 2861              	.LVL139:
 483:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 2862              		.loc 15 483 13 is_stmt 1 view .LVU785
 483:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 2863              		.loc 15 483 22 is_stmt 0 view .LVU786
 2864 01de D5ED007A 		vldr.32	s15, [r5]
 2865 01e2 434B     		ldr	r3, .L211+132
 484:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 2866              		.loc 15 484 26 view .LVU787
 2867 01e4 27EE880A 		vmul.f32	s0, s15, s16
 2868 01e8 3848     		ldr	r0, .L211+96
 483:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 2869              		.loc 15 483 22 view .LVU788
 2870 01ea C3ED007A 		vstr.32	s15, [r3]
 484:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 2871              		.loc 15 484 13 is_stmt 1 view .LVU789
 484:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 2872              		.loc 15 484 26 is_stmt 0 view .LVU790
 2873 01ee FFF7FEFF 		bl	_ZN7daisysp6Phaser10SetLfoFreqEf
 2874              	.LVL140:
 485:Blink.cpp     ****             p2phdepth = knob3;
 2875              		.loc 15 485 13 is_stmt 1 view .LVU791
 485:Blink.cpp     ****             p2phdepth = knob3;
 2876              		.loc 15 485 27 is_stmt 0 view .LVU792
 2877 01f2 94ED000A 		vldr.32	s0, [r4]
 2878 01f6 3548     		ldr	r0, .L211+96
 2879 01f8 FFF7FEFF 		bl	_ZN7daisysp6Phaser11SetLfoDepthEf
 2880              	.LVL141:
 486:Blink.cpp     ****             break;
 2881              		.loc 15 486 13 is_stmt 1 view .LVU793
 486:Blink.cpp     ****             break;
 2882              		.loc 15 486 23 is_stmt 0 view .LVU794
 2883 01fc 3D4B     		ldr	r3, .L211+136
 2884 01fe 2268     		ldr	r2, [r4]	@ float
 2885 0200 1A60     		str	r2, [r3]	@ float
 487:Blink.cpp     ****         default:
 2886              		.loc 15 487 13 is_stmt 1 view .LVU795
 2887 0202 12E7     		b	.L176
 2888              	.L191:
 475:Blink.cpp     ****             trem.SetDepth(knob2);
 2889              		.loc 15 475 9 view .LVU796
 476:Blink.cpp     ****             p2tremDepth = knob2;
 2890              		.loc 15 476 13 view .LVU797
 476:Blink.cpp     ****             p2tremDepth = knob2;
 2891              		.loc 15 476 26 is_stmt 0 view .LVU798
 2892 0204 214D     		ldr	r5, .L211+32
 478:Blink.cpp     ****             p2tremFreq = knob3;
 2893              		.loc 15 478 25 view .LVU799
 2894 0206 234C     		ldr	r4, .L211+40
 476:Blink.cpp     ****             p2tremDepth = knob2;
 2895              		.loc 15 476 26 view .LVU800
 2896 0208 2B48     		ldr	r0, .L211+76
 2897 020a 95ED000A 		vldr.32	s0, [r5]
 2898 020e FFF7FEFF 		bl	_ZN7daisysp7Tremolo8SetDepthEf
 2899              	.LVL142:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 105


 477:Blink.cpp     ****             trem.SetFreq(knob3*200);
 2900              		.loc 15 477 13 is_stmt 1 view .LVU801
 478:Blink.cpp     ****             p2tremFreq = knob3;
 2901              		.loc 15 478 25 is_stmt 0 view .LVU802
 2902 0212 94ED000A 		vldr.32	s0, [r4]
 2903 0216 DFED297A 		vldr.32	s15, .L211+80
 477:Blink.cpp     ****             trem.SetFreq(knob3*200);
 2904              		.loc 15 477 25 view .LVU803
 2905 021a 2A68     		ldr	r2, [r5]	@ float
 2906 021c 364B     		ldr	r3, .L211+140
 478:Blink.cpp     ****             p2tremFreq = knob3;
 2907              		.loc 15 478 25 view .LVU804
 2908 021e 20EE270A 		vmul.f32	s0, s0, s15
 2909 0222 2548     		ldr	r0, .L211+76
 477:Blink.cpp     ****             trem.SetFreq(knob3*200);
 2910              		.loc 15 477 25 view .LVU805
 2911 0224 1A60     		str	r2, [r3]	@ float
 478:Blink.cpp     ****             p2tremFreq = knob3;
 2912              		.loc 15 478 13 is_stmt 1 view .LVU806
 478:Blink.cpp     ****             p2tremFreq = knob3;
 2913              		.loc 15 478 25 is_stmt 0 view .LVU807
 2914 0226 FFF7FEFF 		bl	_ZN7daisysp7Tremolo7SetFreqEf
 2915              	.LVL143:
 479:Blink.cpp     ****             break;
 2916              		.loc 15 479 13 is_stmt 1 view .LVU808
 479:Blink.cpp     ****             break;
 2917              		.loc 15 479 24 is_stmt 0 view .LVU809
 2918 022a 344B     		ldr	r3, .L211+144
 2919 022c 2268     		ldr	r2, [r4]	@ float
 2920 022e 1A60     		str	r2, [r3]	@ float
 480:Blink.cpp     ****         case 7://phaser
 2921              		.loc 15 480 13 is_stmt 1 view .LVU810
 2922 0230 FBE6     		b	.L176
 2923              	.L193:
 464:Blink.cpp     ****             fl.SetDelay(knob1);
 2924              		.loc 15 464 9 view .LVU811
 465:Blink.cpp     ****             p2flDelay = knob1;
 2925              		.loc 15 465 13 view .LVU812
 465:Blink.cpp     ****             p2flDelay = knob1;
 2926              		.loc 15 465 24 is_stmt 0 view .LVU813
 2927 0232 144E     		ldr	r6, .L211+24
 2928 0234 1448     		ldr	r0, .L211+28
 467:Blink.cpp     ****             p2flDepth = knob2;
 2929              		.loc 15 467 27 view .LVU814
 2930 0236 154D     		ldr	r5, .L211+32
 465:Blink.cpp     ****             p2flDelay = knob1;
 2931              		.loc 15 465 24 view .LVU815
 2932 0238 96ED000A 		vldr.32	s0, [r6]
 2933 023c FFF7FEFF 		bl	_ZN7daisysp7Flanger8SetDelayEf
 2934              	.LVL144:
 466:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 2935              		.loc 15 466 13 is_stmt 1 view .LVU816
 466:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 2936              		.loc 15 466 23 is_stmt 0 view .LVU817
 2937 0240 3268     		ldr	r2, [r6]	@ float
 2938 0242 2F4B     		ldr	r3, .L211+148
 469:Blink.cpp     ****             p2flFreq = knob3;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 106


 2939              		.loc 15 469 26 view .LVU818
 2940 0244 134C     		ldr	r4, .L211+40
 467:Blink.cpp     ****             p2flDepth = knob2;
 2941              		.loc 15 467 27 view .LVU819
 2942 0246 95ED000A 		vldr.32	s0, [r5]
 2943 024a 0F48     		ldr	r0, .L211+28
 466:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 2944              		.loc 15 466 23 view .LVU820
 2945 024c 1A60     		str	r2, [r3]	@ float
 467:Blink.cpp     ****             p2flDepth = knob2;
 2946              		.loc 15 467 13 is_stmt 1 view .LVU821
 467:Blink.cpp     ****             p2flDepth = knob2;
 2947              		.loc 15 467 27 is_stmt 0 view .LVU822
 2948 024e FFF7FEFF 		bl	_ZN7daisysp7Flanger11SetLfoDepthEf
 2949              	.LVL145:
 468:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 2950              		.loc 15 468 13 is_stmt 1 view .LVU823
 468:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 2951              		.loc 15 468 23 is_stmt 0 view .LVU824
 2952 0252 2A68     		ldr	r2, [r5]	@ float
 2953 0254 2B4B     		ldr	r3, .L211+152
 469:Blink.cpp     ****             p2flFreq = knob3;
 2954              		.loc 15 469 26 view .LVU825
 2955 0256 94ED000A 		vldr.32	s0, [r4]
 2956 025a 0B48     		ldr	r0, .L211+28
 468:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 2957              		.loc 15 468 23 view .LVU826
 2958 025c 1A60     		str	r2, [r3]	@ float
 469:Blink.cpp     ****             p2flFreq = knob3;
 2959              		.loc 15 469 13 is_stmt 1 view .LVU827
 469:Blink.cpp     ****             p2flFreq = knob3;
 2960              		.loc 15 469 26 is_stmt 0 view .LVU828
 2961 025e FFF7FEFF 		bl	_ZN7daisysp7Flanger10SetLfoFreqEf
 2962              	.LVL146:
 470:Blink.cpp     ****             break;
 2963              		.loc 15 470 13 is_stmt 1 view .LVU829
 470:Blink.cpp     ****             break;
 2964              		.loc 15 470 22 is_stmt 0 view .LVU830
 2965 0262 294B     		ldr	r3, .L211+156
 2966 0264 2268     		ldr	r2, [r4]	@ float
 2967 0266 1A60     		str	r2, [r3]	@ float
 471:Blink.cpp     ****         case 5://wah
 2968              		.loc 15 471 13 is_stmt 1 view .LVU831
 2969 0268 DFE6     		b	.L176
 2970              	.L212:
 2971 026a 00BF     		.align	2
 2972              	.L211:
 2973 026c 00000000 		.word	.LANCHOR5
 2974 0270 00000000 		.word	.LANCHOR35
 2975 0274 00000000 		.word	.LANCHOR3
 2976 0278 00009644 		.word	1150681088
 2977 027c 0000C843 		.word	1137180672
 2978 0280 00000000 		.word	.LANCHOR4
 2979 0284 00000000 		.word	.LANCHOR66
 2980 0288 00000000 		.word	.LANCHOR27
 2981 028c 00000000 		.word	.LANCHOR67
 2982 0290 00000000 		.word	.LANCHOR39
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 107


 2983 0294 00000000 		.word	.LANCHOR68
 2984 0298 00000000 		.word	.LANCHOR40
 2985 029c 00000000 		.word	.LANCHOR41
 2986 02a0 0080BB47 		.word	1203470336
 2987 02a4 00000000 		.word	.LANCHOR24
 2988 02a8 00000000 		.word	ch
 2989 02ac 00000000 		.word	.LANCHOR36
 2990 02b0 00000000 		.word	.LANCHOR37
 2991 02b4 00000000 		.word	.LANCHOR38
 2992 02b8 00000000 		.word	.LANCHOR28
 2993 02bc 00004843 		.word	1128792064
 2994 02c0 00000000 		.word	.LANCHOR42
 2995 02c4 00000000 		.word	.LANCHOR43
 2996 02c8 00401C46 		.word	1176256512
 2997 02cc 00000000 		.word	ph
 2998 02d0 00000000 		.word	.LANCHOR44
 2999 02d4 00000000 		.word	.LANCHOR45
 3000 02d8 00000000 		.word	.LANCHOR6
 3001 02dc 00000000 		.word	.LANCHOR7
 3002 02e0 00000000 		.word	.LANCHOR8
 3003 02e4 00000000 		.word	.LANCHOR17
 3004 02e8 00000000 		.word	.LANCHOR16
 3005 02ec 00000000 		.word	.LANCHOR15
 3006 02f0 00000000 		.word	.LANCHOR54
 3007 02f4 00000000 		.word	.LANCHOR55
 3008 02f8 00000000 		.word	.LANCHOR52
 3009 02fc 00000000 		.word	.LANCHOR53
 3010 0300 00000000 		.word	.LANCHOR49
 3011 0304 00000000 		.word	.LANCHOR50
 3012 0308 00000000 		.word	.LANCHOR51
 3013              	.L194:
 456:Blink.cpp     ****             ch.SetDelay(knob1);
 3014              		.loc 15 456 9 view .LVU832
 457:Blink.cpp     ****             p2chDelay = knob1;
 3015              		.loc 15 457 13 view .LVU833
 457:Blink.cpp     ****             p2chDelay = knob1;
 3016              		.loc 15 457 24 is_stmt 0 view .LVU834
 3017 030c 644E     		ldr	r6, .L213
 3018 030e 6548     		ldr	r0, .L213+4
 459:Blink.cpp     ****             p2chDepth = knob2;
 3019              		.loc 15 459 27 view .LVU835
 3020 0310 654D     		ldr	r5, .L213+8
 457:Blink.cpp     ****             p2chDelay = knob1;
 3021              		.loc 15 457 24 view .LVU836
 3022 0312 96ED000A 		vldr.32	s0, [r6]
 3023 0316 FFF7FEFF 		bl	_ZN7daisysp6Chorus8SetDelayEf
 3024              	.LVL147:
 458:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 3025              		.loc 15 458 13 is_stmt 1 view .LVU837
 458:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 3026              		.loc 15 458 23 is_stmt 0 view .LVU838
 3027 031a 3268     		ldr	r2, [r6]	@ float
 3028 031c 634B     		ldr	r3, .L213+12
 461:Blink.cpp     ****             p2chFreq = knob3;
 3029              		.loc 15 461 26 view .LVU839
 3030 031e 644C     		ldr	r4, .L213+16
 459:Blink.cpp     ****             p2chDepth = knob2;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 108


 3031              		.loc 15 459 27 view .LVU840
 3032 0320 95ED000A 		vldr.32	s0, [r5]
 3033 0324 5F48     		ldr	r0, .L213+4
 458:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 3034              		.loc 15 458 23 view .LVU841
 3035 0326 1A60     		str	r2, [r3]	@ float
 459:Blink.cpp     ****             p2chDepth = knob2;
 3036              		.loc 15 459 13 is_stmt 1 view .LVU842
 459:Blink.cpp     ****             p2chDepth = knob2;
 3037              		.loc 15 459 27 is_stmt 0 view .LVU843
 3038 0328 FFF7FEFF 		bl	_ZN7daisysp6Chorus11SetLfoDepthEf
 3039              	.LVL148:
 460:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 3040              		.loc 15 460 13 is_stmt 1 view .LVU844
 460:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 3041              		.loc 15 460 23 is_stmt 0 view .LVU845
 3042 032c 2A68     		ldr	r2, [r5]	@ float
 3043 032e 614B     		ldr	r3, .L213+20
 461:Blink.cpp     ****             p2chFreq = knob3;
 3044              		.loc 15 461 26 view .LVU846
 3045 0330 94ED000A 		vldr.32	s0, [r4]
 3046 0334 5B48     		ldr	r0, .L213+4
 460:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 3047              		.loc 15 460 23 view .LVU847
 3048 0336 1A60     		str	r2, [r3]	@ float
 461:Blink.cpp     ****             p2chFreq = knob3;
 3049              		.loc 15 461 13 is_stmt 1 view .LVU848
 461:Blink.cpp     ****             p2chFreq = knob3;
 3050              		.loc 15 461 26 is_stmt 0 view .LVU849
 3051 0338 FFF7FEFF 		bl	_ZN7daisysp6Chorus10SetLfoFreqEf
 3052              	.LVL149:
 462:Blink.cpp     ****             break;
 3053              		.loc 15 462 13 is_stmt 1 view .LVU850
 462:Blink.cpp     ****             break;
 3054              		.loc 15 462 22 is_stmt 0 view .LVU851
 3055 033c 5E4B     		ldr	r3, .L213+24
 3056 033e 2268     		ldr	r2, [r4]	@ float
 3057 0340 1A60     		str	r2, [r3]	@ float
 463:Blink.cpp     ****         case 4://flanger
 3058              		.loc 15 463 13 is_stmt 1 view .LVU852
 3059 0342 72E6     		b	.L176
 3060              	.L195:
 452:Blink.cpp     ****             del2.delayTarget = 48000.0*2*knob2;
 3061              		.loc 15 452 9 view .LVU853
 453:Blink.cpp     ****             del2.feedback = knob3;
 3062              		.loc 15 453 13 view .LVU854
 453:Blink.cpp     ****             del2.feedback = knob3;
 3063              		.loc 15 453 41 is_stmt 0 view .LVU855
 3064 0344 5849     		ldr	r1, .L213+8
 3065 0346 9FED5D7A 		vldr.32	s14, .L213+28
 454:Blink.cpp     ****             break;
 3066              		.loc 15 454 27 view .LVU856
 3067 034a 594A     		ldr	r2, .L213+16
 453:Blink.cpp     ****             del2.feedback = knob3;
 3068              		.loc 15 453 30 view .LVU857
 3069 034c 5C4B     		ldr	r3, .L213+32
 3070 034e AEE6     		b	.L208
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 109


 3071              	.L196:
 447:Blink.cpp     ****             p2ftone = knob1;
 3072              		.loc 15 447 9 is_stmt 1 view .LVU858
 448:Blink.cpp     ****             p2fuzz = knob2;
 3073              		.loc 15 448 13 view .LVU859
 448:Blink.cpp     ****             p2fuzz = knob2;
 3074              		.loc 15 448 21 is_stmt 0 view .LVU860
 3075 0350 5349     		ldr	r1, .L213
 3076 0352 5C4B     		ldr	r3, .L213+36
 3077 0354 0C68     		ldr	r4, [r1]	@ float
 449:Blink.cpp     ****             p2fingain = knob3;
 3078              		.loc 15 449 20 view .LVU861
 3079 0356 5448     		ldr	r0, .L213+8
 450:Blink.cpp     ****             break;
 3080              		.loc 15 450 23 view .LVU862
 3081 0358 554A     		ldr	r2, .L213+16
 448:Blink.cpp     ****             p2fuzz = knob2;
 3082              		.loc 15 448 21 view .LVU863
 3083 035a 1C60     		str	r4, [r3]	@ float
 449:Blink.cpp     ****             p2fingain = knob3;
 3084              		.loc 15 449 13 is_stmt 1 view .LVU864
 449:Blink.cpp     ****             p2fingain = knob3;
 3085              		.loc 15 449 20 is_stmt 0 view .LVU865
 3086 035c 0068     		ldr	r0, [r0]	@ float
 450:Blink.cpp     ****             break;
 3087              		.loc 15 450 23 view .LVU866
 3088 035e 1268     		ldr	r2, [r2]	@ float
 449:Blink.cpp     ****             p2fingain = knob3;
 3089              		.loc 15 449 20 view .LVU867
 3090 0360 5949     		ldr	r1, .L213+40
 450:Blink.cpp     ****             break;
 3091              		.loc 15 450 23 view .LVU868
 3092 0362 5A4B     		ldr	r3, .L213+44
 449:Blink.cpp     ****             p2fingain = knob3;
 3093              		.loc 15 449 20 view .LVU869
 3094 0364 0860     		str	r0, [r1]	@ float
 450:Blink.cpp     ****             break;
 3095              		.loc 15 450 13 is_stmt 1 view .LVU870
 450:Blink.cpp     ****             break;
 3096              		.loc 15 450 23 is_stmt 0 view .LVU871
 3097 0366 1A60     		str	r2, [r3]	@ float
 451:Blink.cpp     ****         case 2://delay
 3098              		.loc 15 451 13 is_stmt 1 view .LVU872
 3099 0368 5FE6     		b	.L176
 3100              	.L197:
 442:Blink.cpp     ****             p2dtone = knob1;
 3101              		.loc 15 442 9 view .LVU873
 443:Blink.cpp     ****             p2doutgain = knob2;
 3102              		.loc 15 443 13 view .LVU874
 443:Blink.cpp     ****             p2doutgain = knob2;
 3103              		.loc 15 443 21 is_stmt 0 view .LVU875
 3104 036a 4D49     		ldr	r1, .L213
 3105 036c 584B     		ldr	r3, .L213+48
 3106 036e 0C68     		ldr	r4, [r1]	@ float
 444:Blink.cpp     ****             p2dingain = knob3;
 3107              		.loc 15 444 24 view .LVU876
 3108 0370 4D48     		ldr	r0, .L213+8
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 110


 445:Blink.cpp     ****             break;
 3109              		.loc 15 445 23 view .LVU877
 3110 0372 4F4A     		ldr	r2, .L213+16
 443:Blink.cpp     ****             p2doutgain = knob2;
 3111              		.loc 15 443 21 view .LVU878
 3112 0374 1C60     		str	r4, [r3]	@ float
 444:Blink.cpp     ****             p2dingain = knob3;
 3113              		.loc 15 444 13 is_stmt 1 view .LVU879
 444:Blink.cpp     ****             p2dingain = knob3;
 3114              		.loc 15 444 24 is_stmt 0 view .LVU880
 3115 0376 0068     		ldr	r0, [r0]	@ float
 445:Blink.cpp     ****             break;
 3116              		.loc 15 445 23 view .LVU881
 3117 0378 1268     		ldr	r2, [r2]	@ float
 444:Blink.cpp     ****             p2dingain = knob3;
 3118              		.loc 15 444 24 view .LVU882
 3119 037a 5649     		ldr	r1, .L213+52
 445:Blink.cpp     ****             break;
 3120              		.loc 15 445 23 view .LVU883
 3121 037c 564B     		ldr	r3, .L213+56
 444:Blink.cpp     ****             p2dingain = knob3;
 3122              		.loc 15 444 24 view .LVU884
 3123 037e 0860     		str	r0, [r1]	@ float
 445:Blink.cpp     ****             break;
 3124              		.loc 15 445 13 is_stmt 1 view .LVU885
 445:Blink.cpp     ****             break;
 3125              		.loc 15 445 23 is_stmt 0 view .LVU886
 3126 0380 1A60     		str	r2, [r3]	@ float
 446:Blink.cpp     ****         case 1://fuzz
 3127              		.loc 15 446 13 is_stmt 1 view .LVU887
 3128 0382 52E6     		b	.L176
 3129              	.L198:
 533:Blink.cpp     ****             ph.SetFreq(knob2*10000);
 3130              		.loc 15 533 9 view .LVU888
 534:Blink.cpp     ****             p3phFreq = knob2;
 3131              		.loc 15 534 13 view .LVU889
 534:Blink.cpp     ****             p3phFreq = knob2;
 3132              		.loc 15 534 23 is_stmt 0 view .LVU890
 3133 0384 484D     		ldr	r5, .L213+8
 3134 0386 9FED558A 		vldr.32	s16, .L213+60
 3135 038a 95ED000A 		vldr.32	s0, [r5]
 3136 038e 5448     		ldr	r0, .L213+64
 3137 0390 20EE080A 		vmul.f32	s0, s0, s16
 537:Blink.cpp     ****             p3phdepth = knob3;
 3138              		.loc 15 537 27 view .LVU891
 3139 0394 464C     		ldr	r4, .L213+16
 534:Blink.cpp     ****             p3phFreq = knob2;
 3140              		.loc 15 534 23 view .LVU892
 3141 0396 FFF7FEFF 		bl	_ZN7daisysp6Phaser7SetFreqEf
 3142              	.LVL150:
 535:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 3143              		.loc 15 535 13 is_stmt 1 view .LVU893
 535:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 3144              		.loc 15 535 22 is_stmt 0 view .LVU894
 3145 039a D5ED007A 		vldr.32	s15, [r5]
 3146 039e 514B     		ldr	r3, .L213+68
 536:Blink.cpp     ****             ph.SetLfoDepth(knob3);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 111


 3147              		.loc 15 536 26 view .LVU895
 3148 03a0 27EE880A 		vmul.f32	s0, s15, s16
 3149 03a4 4E48     		ldr	r0, .L213+64
 535:Blink.cpp     ****             ph.SetLfoFreq(knob2*10000);
 3150              		.loc 15 535 22 view .LVU896
 3151 03a6 C3ED007A 		vstr.32	s15, [r3]
 536:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 3152              		.loc 15 536 13 is_stmt 1 view .LVU897
 536:Blink.cpp     ****             ph.SetLfoDepth(knob3);
 3153              		.loc 15 536 26 is_stmt 0 view .LVU898
 3154 03aa FFF7FEFF 		bl	_ZN7daisysp6Phaser10SetLfoFreqEf
 3155              	.LVL151:
 537:Blink.cpp     ****             p3phdepth = knob3;
 3156              		.loc 15 537 13 is_stmt 1 view .LVU899
 537:Blink.cpp     ****             p3phdepth = knob3;
 3157              		.loc 15 537 27 is_stmt 0 view .LVU900
 3158 03ae 94ED000A 		vldr.32	s0, [r4]
 3159 03b2 4B48     		ldr	r0, .L213+64
 3160 03b4 FFF7FEFF 		bl	_ZN7daisysp6Phaser11SetLfoDepthEf
 3161              	.LVL152:
 538:Blink.cpp     **** 
 3162              		.loc 15 538 13 is_stmt 1 view .LVU901
 538:Blink.cpp     **** 
 3163              		.loc 15 538 23 is_stmt 0 view .LVU902
 3164 03b8 4B4B     		ldr	r3, .L213+72
 3165 03ba 2268     		ldr	r2, [r4]	@ float
 3166 03bc 1A60     		str	r2, [r3]	@ float
 540:Blink.cpp     ****         
 3167              		.loc 15 540 13 is_stmt 1 view .LVU903
 546:Blink.cpp     **** 
 3168              		.loc 15 546 1 is_stmt 0 view .LVU904
 3169 03be 34E6     		b	.L176
 3170              	.L200:
 527:Blink.cpp     ****             trem.SetDepth(knob2);
 3171              		.loc 15 527 9 is_stmt 1 view .LVU905
 528:Blink.cpp     ****             p3tremDepth = knob2;
 3172              		.loc 15 528 13 view .LVU906
 528:Blink.cpp     ****             p3tremDepth = knob2;
 3173              		.loc 15 528 26 is_stmt 0 view .LVU907
 3174 03c0 394D     		ldr	r5, .L213+8
 530:Blink.cpp     ****             p3tremFreq = knob3;
 3175              		.loc 15 530 25 view .LVU908
 3176 03c2 3B4C     		ldr	r4, .L213+16
 528:Blink.cpp     ****             p3tremDepth = knob2;
 3177              		.loc 15 528 26 view .LVU909
 3178 03c4 4948     		ldr	r0, .L213+76
 3179 03c6 95ED000A 		vldr.32	s0, [r5]
 3180 03ca FFF7FEFF 		bl	_ZN7daisysp7Tremolo8SetDepthEf
 3181              	.LVL153:
 529:Blink.cpp     ****             trem.SetFreq(knob3*200);
 3182              		.loc 15 529 13 is_stmt 1 view .LVU910
 530:Blink.cpp     ****             p3tremFreq = knob3;
 3183              		.loc 15 530 25 is_stmt 0 view .LVU911
 3184 03ce 94ED000A 		vldr.32	s0, [r4]
 3185 03d2 DFED477A 		vldr.32	s15, .L213+80
 529:Blink.cpp     ****             trem.SetFreq(knob3*200);
 3186              		.loc 15 529 25 view .LVU912
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 112


 3187 03d6 2A68     		ldr	r2, [r5]	@ float
 3188 03d8 464B     		ldr	r3, .L213+84
 530:Blink.cpp     ****             p3tremFreq = knob3;
 3189              		.loc 15 530 25 view .LVU913
 3190 03da 20EE270A 		vmul.f32	s0, s0, s15
 3191 03de 4348     		ldr	r0, .L213+76
 529:Blink.cpp     ****             trem.SetFreq(knob3*200);
 3192              		.loc 15 529 25 view .LVU914
 3193 03e0 1A60     		str	r2, [r3]	@ float
 530:Blink.cpp     ****             p3tremFreq = knob3;
 3194              		.loc 15 530 13 is_stmt 1 view .LVU915
 530:Blink.cpp     ****             p3tremFreq = knob3;
 3195              		.loc 15 530 25 is_stmt 0 view .LVU916
 3196 03e2 FFF7FEFF 		bl	_ZN7daisysp7Tremolo7SetFreqEf
 3197              	.LVL154:
 531:Blink.cpp     ****             break;
 3198              		.loc 15 531 13 is_stmt 1 view .LVU917
 531:Blink.cpp     ****             break;
 3199              		.loc 15 531 24 is_stmt 0 view .LVU918
 3200 03e6 444B     		ldr	r3, .L213+88
 3201 03e8 2268     		ldr	r2, [r4]	@ float
 3202 03ea 1A60     		str	r2, [r3]	@ float
 532:Blink.cpp     ****         case 7://phaser
 3203              		.loc 15 532 13 is_stmt 1 view .LVU919
 3204 03ec 1DE6     		b	.L176
 3205              	.L202:
 516:Blink.cpp     ****             fl.SetDelay(knob1);
 3206              		.loc 15 516 9 view .LVU920
 517:Blink.cpp     ****             p3flDelay = knob1;
 3207              		.loc 15 517 13 view .LVU921
 517:Blink.cpp     ****             p3flDelay = knob1;
 3208              		.loc 15 517 24 is_stmt 0 view .LVU922
 3209 03ee 2C4E     		ldr	r6, .L213
 3210 03f0 4248     		ldr	r0, .L213+92
 519:Blink.cpp     ****             p3flDepth = knob2;
 3211              		.loc 15 519 27 view .LVU923
 3212 03f2 2D4D     		ldr	r5, .L213+8
 517:Blink.cpp     ****             p3flDelay = knob1;
 3213              		.loc 15 517 24 view .LVU924
 3214 03f4 96ED000A 		vldr.32	s0, [r6]
 3215 03f8 FFF7FEFF 		bl	_ZN7daisysp7Flanger8SetDelayEf
 3216              	.LVL155:
 518:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 3217              		.loc 15 518 13 is_stmt 1 view .LVU925
 518:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 3218              		.loc 15 518 23 is_stmt 0 view .LVU926
 3219 03fc 3268     		ldr	r2, [r6]	@ float
 3220 03fe 404B     		ldr	r3, .L213+96
 521:Blink.cpp     ****             p3flFreq = knob3;
 3221              		.loc 15 521 26 view .LVU927
 3222 0400 2B4C     		ldr	r4, .L213+16
 519:Blink.cpp     ****             p3flDepth = knob2;
 3223              		.loc 15 519 27 view .LVU928
 3224 0402 95ED000A 		vldr.32	s0, [r5]
 3225 0406 3D48     		ldr	r0, .L213+92
 518:Blink.cpp     ****             fl.SetLfoDepth(knob2);
 3226              		.loc 15 518 23 view .LVU929
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 113


 3227 0408 1A60     		str	r2, [r3]	@ float
 519:Blink.cpp     ****             p3flDepth = knob2;
 3228              		.loc 15 519 13 is_stmt 1 view .LVU930
 519:Blink.cpp     ****             p3flDepth = knob2;
 3229              		.loc 15 519 27 is_stmt 0 view .LVU931
 3230 040a FFF7FEFF 		bl	_ZN7daisysp7Flanger11SetLfoDepthEf
 3231              	.LVL156:
 520:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 3232              		.loc 15 520 13 is_stmt 1 view .LVU932
 520:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 3233              		.loc 15 520 23 is_stmt 0 view .LVU933
 3234 040e 2A68     		ldr	r2, [r5]	@ float
 3235 0410 3C4B     		ldr	r3, .L213+100
 521:Blink.cpp     ****             p3flFreq = knob3;
 3236              		.loc 15 521 26 view .LVU934
 3237 0412 94ED000A 		vldr.32	s0, [r4]
 3238 0416 3948     		ldr	r0, .L213+92
 520:Blink.cpp     ****             fl.SetLfoFreq(knob3);
 3239              		.loc 15 520 23 view .LVU935
 3240 0418 1A60     		str	r2, [r3]	@ float
 521:Blink.cpp     ****             p3flFreq = knob3;
 3241              		.loc 15 521 13 is_stmt 1 view .LVU936
 521:Blink.cpp     ****             p3flFreq = knob3;
 3242              		.loc 15 521 26 is_stmt 0 view .LVU937
 3243 041a FFF7FEFF 		bl	_ZN7daisysp7Flanger10SetLfoFreqEf
 3244              	.LVL157:
 522:Blink.cpp     ****             break;
 3245              		.loc 15 522 13 is_stmt 1 view .LVU938
 522:Blink.cpp     ****             break;
 3246              		.loc 15 522 22 is_stmt 0 view .LVU939
 3247 041e 3A4B     		ldr	r3, .L213+104
 3248 0420 2268     		ldr	r2, [r4]	@ float
 3249 0422 1A60     		str	r2, [r3]	@ float
 523:Blink.cpp     ****         case 5://wah
 3250              		.loc 15 523 13 is_stmt 1 view .LVU940
 3251 0424 01E6     		b	.L176
 3252              	.L203:
 508:Blink.cpp     ****             ch.SetDelay(knob1);
 3253              		.loc 15 508 9 view .LVU941
 509:Blink.cpp     ****             p3chDelay = knob1;
 3254              		.loc 15 509 13 view .LVU942
 509:Blink.cpp     ****             p3chDelay = knob1;
 3255              		.loc 15 509 24 is_stmt 0 view .LVU943
 3256 0426 1E4E     		ldr	r6, .L213
 3257 0428 1E48     		ldr	r0, .L213+4
 511:Blink.cpp     ****             p3chDepth = knob2;
 3258              		.loc 15 511 27 view .LVU944
 3259 042a 1F4D     		ldr	r5, .L213+8
 509:Blink.cpp     ****             p3chDelay = knob1;
 3260              		.loc 15 509 24 view .LVU945
 3261 042c 96ED000A 		vldr.32	s0, [r6]
 3262 0430 FFF7FEFF 		bl	_ZN7daisysp6Chorus8SetDelayEf
 3263              	.LVL158:
 510:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 3264              		.loc 15 510 13 is_stmt 1 view .LVU946
 510:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 3265              		.loc 15 510 23 is_stmt 0 view .LVU947
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 114


 3266 0434 3268     		ldr	r2, [r6]	@ float
 3267 0436 354B     		ldr	r3, .L213+108
 513:Blink.cpp     ****             p3chFreq = knob3;
 3268              		.loc 15 513 26 view .LVU948
 3269 0438 1D4C     		ldr	r4, .L213+16
 511:Blink.cpp     ****             p3chDepth = knob2;
 3270              		.loc 15 511 27 view .LVU949
 3271 043a 95ED000A 		vldr.32	s0, [r5]
 3272 043e 1948     		ldr	r0, .L213+4
 510:Blink.cpp     ****             ch.SetLfoDepth(knob2);
 3273              		.loc 15 510 23 view .LVU950
 3274 0440 1A60     		str	r2, [r3]	@ float
 511:Blink.cpp     ****             p3chDepth = knob2;
 3275              		.loc 15 511 13 is_stmt 1 view .LVU951
 511:Blink.cpp     ****             p3chDepth = knob2;
 3276              		.loc 15 511 27 is_stmt 0 view .LVU952
 3277 0442 FFF7FEFF 		bl	_ZN7daisysp6Chorus11SetLfoDepthEf
 3278              	.LVL159:
 512:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 3279              		.loc 15 512 13 is_stmt 1 view .LVU953
 512:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 3280              		.loc 15 512 23 is_stmt 0 view .LVU954
 3281 0446 2A68     		ldr	r2, [r5]	@ float
 3282 0448 314B     		ldr	r3, .L213+112
 513:Blink.cpp     ****             p3chFreq = knob3;
 3283              		.loc 15 513 26 view .LVU955
 3284 044a 94ED000A 		vldr.32	s0, [r4]
 3285 044e 1548     		ldr	r0, .L213+4
 512:Blink.cpp     ****             ch.SetLfoFreq(knob3);
 3286              		.loc 15 512 23 view .LVU956
 3287 0450 1A60     		str	r2, [r3]	@ float
 513:Blink.cpp     ****             p3chFreq = knob3;
 3288              		.loc 15 513 13 is_stmt 1 view .LVU957
 513:Blink.cpp     ****             p3chFreq = knob3;
 3289              		.loc 15 513 26 is_stmt 0 view .LVU958
 3290 0452 FFF7FEFF 		bl	_ZN7daisysp6Chorus10SetLfoFreqEf
 3291              	.LVL160:
 514:Blink.cpp     ****             break;
 3292              		.loc 15 514 13 is_stmt 1 view .LVU959
 514:Blink.cpp     ****             break;
 3293              		.loc 15 514 22 is_stmt 0 view .LVU960
 3294 0456 2F4B     		ldr	r3, .L213+116
 3295 0458 2268     		ldr	r2, [r4]	@ float
 3296 045a 1A60     		str	r2, [r3]	@ float
 515:Blink.cpp     ****         case 4://flanger
 3297              		.loc 15 515 13 is_stmt 1 view .LVU961
 3298 045c E5E5     		b	.L176
 3299              	.L204:
 504:Blink.cpp     ****             del3.delayTarget = 48000.0*2*knob2;
 3300              		.loc 15 504 9 view .LVU962
 505:Blink.cpp     ****             del3.feedback = knob3;
 3301              		.loc 15 505 13 view .LVU963
 505:Blink.cpp     ****             del3.feedback = knob3;
 3302              		.loc 15 505 41 is_stmt 0 view .LVU964
 3303 045e 1249     		ldr	r1, .L213+8
 3304 0460 9FED167A 		vldr.32	s14, .L213+28
 506:Blink.cpp     ****             break;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 115


 3305              		.loc 15 506 27 view .LVU965
 3306 0464 124A     		ldr	r2, .L213+16
 505:Blink.cpp     ****             del3.feedback = knob3;
 3307              		.loc 15 505 30 view .LVU966
 3308 0466 2C4B     		ldr	r3, .L213+120
 3309 0468 21E6     		b	.L208
 3310              	.L205:
 499:Blink.cpp     ****             p3ftone = knob1;
 3311              		.loc 15 499 9 is_stmt 1 view .LVU967
 500:Blink.cpp     ****             p3fuzz = knob2;
 3312              		.loc 15 500 13 view .LVU968
 500:Blink.cpp     ****             p3fuzz = knob2;
 3313              		.loc 15 500 21 is_stmt 0 view .LVU969
 3314 046a 0D49     		ldr	r1, .L213
 3315 046c 2B4B     		ldr	r3, .L213+124
 3316 046e 0C68     		ldr	r4, [r1]	@ float
 501:Blink.cpp     ****             p3fingain = knob3;
 3317              		.loc 15 501 20 view .LVU970
 3318 0470 0D48     		ldr	r0, .L213+8
 502:Blink.cpp     ****             break;
 3319              		.loc 15 502 23 view .LVU971
 3320 0472 0F4A     		ldr	r2, .L213+16
 500:Blink.cpp     ****             p3fuzz = knob2;
 3321              		.loc 15 500 21 view .LVU972
 3322 0474 1C60     		str	r4, [r3]	@ float
 501:Blink.cpp     ****             p3fingain = knob3;
 3323              		.loc 15 501 13 is_stmt 1 view .LVU973
 501:Blink.cpp     ****             p3fingain = knob3;
 3324              		.loc 15 501 20 is_stmt 0 view .LVU974
 3325 0476 0068     		ldr	r0, [r0]	@ float
 502:Blink.cpp     ****             break;
 3326              		.loc 15 502 23 view .LVU975
 3327 0478 1268     		ldr	r2, [r2]	@ float
 501:Blink.cpp     ****             p3fingain = knob3;
 3328              		.loc 15 501 20 view .LVU976
 3329 047a 2949     		ldr	r1, .L213+128
 502:Blink.cpp     ****             break;
 3330              		.loc 15 502 23 view .LVU977
 3331 047c 294B     		ldr	r3, .L213+132
 501:Blink.cpp     ****             p3fingain = knob3;
 3332              		.loc 15 501 20 view .LVU978
 3333 047e 0860     		str	r0, [r1]	@ float
 502:Blink.cpp     ****             break;
 3334              		.loc 15 502 13 is_stmt 1 view .LVU979
 502:Blink.cpp     ****             break;
 3335              		.loc 15 502 23 is_stmt 0 view .LVU980
 3336 0480 1A60     		str	r2, [r3]	@ float
 503:Blink.cpp     ****         case 2://delay
 3337              		.loc 15 503 13 is_stmt 1 view .LVU981
 3338 0482 D2E5     		b	.L176
 3339              	.L206:
 494:Blink.cpp     ****             p3dtone = knob1;
 3340              		.loc 15 494 9 view .LVU982
 495:Blink.cpp     ****             p3doutgain = knob2;
 3341              		.loc 15 495 13 view .LVU983
 495:Blink.cpp     ****             p3doutgain = knob2;
 3342              		.loc 15 495 21 is_stmt 0 view .LVU984
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 116


 3343 0484 0649     		ldr	r1, .L213
 3344 0486 284B     		ldr	r3, .L213+136
 3345 0488 0C68     		ldr	r4, [r1]	@ float
 496:Blink.cpp     ****             p3dingain = knob3;
 3346              		.loc 15 496 24 view .LVU985
 3347 048a 0748     		ldr	r0, .L213+8
 497:Blink.cpp     ****             break;
 3348              		.loc 15 497 23 view .LVU986
 3349 048c 084A     		ldr	r2, .L213+16
 495:Blink.cpp     ****             p3doutgain = knob2;
 3350              		.loc 15 495 21 view .LVU987
 3351 048e 1C60     		str	r4, [r3]	@ float
 496:Blink.cpp     ****             p3dingain = knob3;
 3352              		.loc 15 496 13 is_stmt 1 view .LVU988
 496:Blink.cpp     ****             p3dingain = knob3;
 3353              		.loc 15 496 24 is_stmt 0 view .LVU989
 3354 0490 0068     		ldr	r0, [r0]	@ float
 497:Blink.cpp     ****             break;
 3355              		.loc 15 497 23 view .LVU990
 3356 0492 1268     		ldr	r2, [r2]	@ float
 496:Blink.cpp     ****             p3dingain = knob3;
 3357              		.loc 15 496 24 view .LVU991
 3358 0494 2549     		ldr	r1, .L213+140
 497:Blink.cpp     ****             break;
 3359              		.loc 15 497 23 view .LVU992
 3360 0496 264B     		ldr	r3, .L213+144
 496:Blink.cpp     ****             p3dingain = knob3;
 3361              		.loc 15 496 24 view .LVU993
 3362 0498 0860     		str	r0, [r1]	@ float
 497:Blink.cpp     ****             break;
 3363              		.loc 15 497 13 is_stmt 1 view .LVU994
 497:Blink.cpp     ****             break;
 3364              		.loc 15 497 23 is_stmt 0 view .LVU995
 3365 049a 1A60     		str	r2, [r3]	@ float
 498:Blink.cpp     ****         case 1://fuzz
 3366              		.loc 15 498 13 is_stmt 1 view .LVU996
 3367 049c C5E5     		b	.L176
 3368              	.L214:
 3369 049e 00BF     		.align	2
 3370              	.L213:
 3371 04a0 00000000 		.word	.LANCHOR66
 3372 04a4 00000000 		.word	ch
 3373 04a8 00000000 		.word	.LANCHOR67
 3374 04ac 00000000 		.word	.LANCHOR46
 3375 04b0 00000000 		.word	.LANCHOR68
 3376 04b4 00000000 		.word	.LANCHOR47
 3377 04b8 00000000 		.word	.LANCHOR48
 3378 04bc 0080BB47 		.word	1203470336
 3379 04c0 00000000 		.word	.LANCHOR25
 3380 04c4 00000000 		.word	.LANCHOR18
 3381 04c8 00000000 		.word	.LANCHOR19
 3382 04cc 00000000 		.word	.LANCHOR20
 3383 04d0 00000000 		.word	.LANCHOR9
 3384 04d4 00000000 		.word	.LANCHOR10
 3385 04d8 00000000 		.word	.LANCHOR11
 3386 04dc 00401C46 		.word	1176256512
 3387 04e0 00000000 		.word	ph
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 117


 3388 04e4 00000000 		.word	.LANCHOR64
 3389 04e8 00000000 		.word	.LANCHOR65
 3390 04ec 00000000 		.word	.LANCHOR28
 3391 04f0 00004843 		.word	1128792064
 3392 04f4 00000000 		.word	.LANCHOR62
 3393 04f8 00000000 		.word	.LANCHOR63
 3394 04fc 00000000 		.word	.LANCHOR27
 3395 0500 00000000 		.word	.LANCHOR59
 3396 0504 00000000 		.word	.LANCHOR60
 3397 0508 00000000 		.word	.LANCHOR61
 3398 050c 00000000 		.word	.LANCHOR56
 3399 0510 00000000 		.word	.LANCHOR57
 3400 0514 00000000 		.word	.LANCHOR58
 3401 0518 00000000 		.word	.LANCHOR26
 3402 051c 00000000 		.word	.LANCHOR21
 3403 0520 00000000 		.word	.LANCHOR22
 3404 0524 00000000 		.word	.LANCHOR23
 3405 0528 00000000 		.word	.LANCHOR12
 3406 052c 00000000 		.word	.LANCHOR13
 3407 0530 00000000 		.word	.LANCHOR14
 3408              		.cfi_endproc
 3409              	.LFE4900:
 3411              		.section	.text._Z8containsh,"ax",%progbits
 3412              		.align	1
 3413              		.p2align 2,,3
 3414              		.global	_Z8containsh
 3415              		.syntax unified
 3416              		.thumb
 3417              		.thumb_func
 3418              		.fpu fpv5-d16
 3420              	_Z8containsh:
 3421              	.LVL161:
 3422              	.LFB4901:
 549:Blink.cpp     ****     bool x = false;
 3423              		.loc 15 549 28 view -0
 3424              		.cfi_startproc
 3425              		@ args = 0, pretend = 0, frame = 0
 3426              		@ frame_needed = 0, uses_anonymous_args = 0
 3427              		@ link register save eliminated.
 550:Blink.cpp     ****     switch (prof){
 3428              		.loc 15 550 5 view .LVU998
 551:Blink.cpp     ****     case 0:
 3429              		.loc 15 551 5 view .LVU999
 3430              	.LBB570:
 3431 0000 0128     		cmp	r0, #1
 3432              	.LBE570:
 549:Blink.cpp     ****     bool x = false;
 3433              		.loc 15 549 28 is_stmt 0 view .LVU1000
 3434 0002 10B4     		push	{r4}
 3435              		.cfi_def_cfa_offset 4
 3436              		.cfi_offset 4, -4
 3437              	.LBB576:
 551:Blink.cpp     ****     case 0:
 3438              		.loc 15 551 5 view .LVU1001
 3439 0004 06D0     		beq	.L216
 3440 0006 0228     		cmp	r0, #2
 3441 0008 30D0     		beq	.L217
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 118


 3442 000a D0B1     		cbz	r0, .L231
 3443 000c 0020     		movs	r0, #0
 3444              	.LVL162:
 3445              	.L218:
 551:Blink.cpp     ****     case 0:
 3446              		.loc 15 551 5 view .LVU1002
 3447              	.LBE576:
 576:Blink.cpp     **** }
 3448              		.loc 15 576 5 is_stmt 1 view .LVU1003
 577:Blink.cpp     **** //gets the pot data
 3449              		.loc 15 577 1 is_stmt 0 view .LVU1004
 3450 000e 5DF8044B 		ldr	r4, [sp], #4
 3451              		.cfi_remember_state
 3452              		.cfi_restore 4
 3453              		.cfi_def_cfa_offset 0
 3454 0012 7047     		bx	lr
 3455              	.LVL163:
 3456              	.L216:
 3457              		.cfi_restore_state
 3458              	.LBB577:
 3459              	.LBB571:
 560:Blink.cpp     ****             if(profile2[i] == effectCount){
 3460              		.loc 15 560 30 is_stmt 1 view .LVU1005
 3461 0014 224B     		ldr	r3, .L232
 3462 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3463              	.LVL164:
 560:Blink.cpp     ****             if(profile2[i] == effectCount){
 3464              		.loc 15 560 30 is_stmt 0 view .LVU1006
 3465 0018 0028     		cmp	r0, #0
 3466 001a F8D0     		beq	.L218
 3467 001c 214B     		ldr	r3, .L232+4
 3468 001e 411E     		subs	r1, r0, #1
 561:Blink.cpp     ****                 x = true;
 3469              		.loc 15 561 28 view .LVU1007
 3470 0020 214C     		ldr	r4, .L232+8
 3471              	.LBE571:
 3472              	.LBE577:
 550:Blink.cpp     ****     switch (prof){
 3473              		.loc 15 550 10 view .LVU1008
 3474 0022 0020     		movs	r0, #0
 3475 0024 5A1C     		adds	r2, r3, #1
 3476              	.LBB578:
 3477              	.LBB572:
 561:Blink.cpp     ****                 x = true;
 3478              		.loc 15 561 28 view .LVU1009
 3479 0026 94F800C0 		ldrb	ip, [r4]	@ zero_extendqisi2
 3480 002a 52FA81F1 		uxtab	r1, r2, r1
 3481              	.LVL165:
 3482              	.L222:
 561:Blink.cpp     ****                 x = true;
 3483              		.loc 15 561 13 is_stmt 1 view .LVU1010
 561:Blink.cpp     ****                 x = true;
 3484              		.loc 15 561 26 is_stmt 0 view .LVU1011
 3485 002e 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 3486              	.LVL166:
 562:Blink.cpp     ****             }
 3487              		.loc 15 562 19 view .LVU1012
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 119


 3488 0032 6245     		cmp	r2, ip
 3489 0034 08BF     		it	eq
 3490 0036 0120     		moveq	r0, #1
 3491              	.LVL167:
 560:Blink.cpp     ****             if(profile2[i] == effectCount){
 3492              		.loc 15 560 9 is_stmt 1 view .LVU1013
 560:Blink.cpp     ****             if(profile2[i] == effectCount){
 3493              		.loc 15 560 30 view .LVU1014
 3494 0038 8B42     		cmp	r3, r1
 3495 003a F8D1     		bne	.L222
 560:Blink.cpp     ****             if(profile2[i] == effectCount){
 3496              		.loc 15 560 30 is_stmt 0 view .LVU1015
 3497              	.LBE572:
 3498              	.LBE578:
 576:Blink.cpp     **** }
 3499              		.loc 15 576 5 is_stmt 1 view .LVU1016
 577:Blink.cpp     **** //gets the pot data
 3500              		.loc 15 577 1 is_stmt 0 view .LVU1017
 3501 003c 5DF8044B 		ldr	r4, [sp], #4
 3502              		.cfi_remember_state
 3503              		.cfi_restore 4
 3504              		.cfi_def_cfa_offset 0
 3505 0040 7047     		bx	lr
 3506              	.LVL168:
 3507              	.L231:
 3508              		.cfi_restore_state
 3509              	.LBB579:
 3510              	.LBB573:
 553:Blink.cpp     ****             if(profile1[i] == effectCount){
 3511              		.loc 15 553 30 is_stmt 1 view .LVU1018
 3512 0042 1A4B     		ldr	r3, .L232+12
 3513 0044 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3514 0046 41B3     		cbz	r1, .L226
 3515 0048 194B     		ldr	r3, .L232+16
 3516 004a 0139     		subs	r1, r1, #1
 554:Blink.cpp     ****                 x = true;
 3517              		.loc 15 554 28 is_stmt 0 view .LVU1019
 3518 004c 164C     		ldr	r4, .L232+8
 3519 004e 5A1C     		adds	r2, r3, #1
 3520 0050 94F800C0 		ldrb	ip, [r4]	@ zero_extendqisi2
 3521 0054 52FA81F1 		uxtab	r1, r2, r1
 3522              	.LVL169:
 3523              	.L220:
 554:Blink.cpp     ****                 x = true;
 3524              		.loc 15 554 13 is_stmt 1 view .LVU1020
 554:Blink.cpp     ****                 x = true;
 3525              		.loc 15 554 26 is_stmt 0 view .LVU1021
 3526 0058 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 3527              	.LVL170:
 555:Blink.cpp     ****             }
 3528              		.loc 15 555 19 view .LVU1022
 3529 005c 6245     		cmp	r2, ip
 3530 005e 08BF     		it	eq
 3531 0060 0120     		moveq	r0, #1
 3532              	.LVL171:
 553:Blink.cpp     ****             if(profile1[i] == effectCount){
 3533              		.loc 15 553 9 is_stmt 1 view .LVU1023
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 120


 553:Blink.cpp     ****             if(profile1[i] == effectCount){
 3534              		.loc 15 553 30 view .LVU1024
 3535 0062 8B42     		cmp	r3, r1
 3536 0064 F8D1     		bne	.L220
 553:Blink.cpp     ****             if(profile1[i] == effectCount){
 3537              		.loc 15 553 30 is_stmt 0 view .LVU1025
 3538              	.LBE573:
 3539              	.LBE579:
 576:Blink.cpp     **** }
 3540              		.loc 15 576 5 is_stmt 1 view .LVU1026
 577:Blink.cpp     **** //gets the pot data
 3541              		.loc 15 577 1 is_stmt 0 view .LVU1027
 3542 0066 5DF8044B 		ldr	r4, [sp], #4
 3543              		.cfi_remember_state
 3544              		.cfi_restore 4
 3545              		.cfi_def_cfa_offset 0
 3546 006a 7047     		bx	lr
 3547              	.LVL172:
 3548              	.L217:
 3549              		.cfi_restore_state
 3550              	.LBB580:
 3551              	.LBB574:
 567:Blink.cpp     ****             if(profile3[i] == effectCount){
 3552              		.loc 15 567 30 is_stmt 1 view .LVU1028
 3553 006c 114B     		ldr	r3, .L232+20
 3554 006e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3555              	.LVL173:
 567:Blink.cpp     ****             if(profile3[i] == effectCount){
 3556              		.loc 15 567 30 is_stmt 0 view .LVU1029
 3557 0070 0028     		cmp	r0, #0
 3558 0072 CCD0     		beq	.L218
 3559 0074 104B     		ldr	r3, .L232+24
 3560 0076 411E     		subs	r1, r0, #1
 568:Blink.cpp     ****                 x = true;
 3561              		.loc 15 568 28 view .LVU1030
 3562 0078 0B4C     		ldr	r4, .L232+8
 3563              	.LBE574:
 3564              	.LBE580:
 550:Blink.cpp     ****     switch (prof){
 3565              		.loc 15 550 10 view .LVU1031
 3566 007a 0020     		movs	r0, #0
 3567 007c 5A1C     		adds	r2, r3, #1
 3568              	.LBB581:
 3569              	.LBB575:
 568:Blink.cpp     ****                 x = true;
 3570              		.loc 15 568 28 view .LVU1032
 3571 007e 94F800C0 		ldrb	ip, [r4]	@ zero_extendqisi2
 3572 0082 52FA81F1 		uxtab	r1, r2, r1
 3573              	.LVL174:
 3574              	.L224:
 568:Blink.cpp     ****                 x = true;
 3575              		.loc 15 568 13 is_stmt 1 view .LVU1033
 568:Blink.cpp     ****                 x = true;
 3576              		.loc 15 568 26 is_stmt 0 view .LVU1034
 3577 0086 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 3578              	.LVL175:
 569:Blink.cpp     ****             }
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 121


 3579              		.loc 15 569 19 view .LVU1035
 3580 008a 6245     		cmp	r2, ip
 3581 008c 08BF     		it	eq
 3582 008e 0120     		moveq	r0, #1
 3583              	.LVL176:
 567:Blink.cpp     ****             if(profile3[i] == effectCount){
 3584              		.loc 15 567 9 is_stmt 1 view .LVU1036
 567:Blink.cpp     ****             if(profile3[i] == effectCount){
 3585              		.loc 15 567 30 view .LVU1037
 3586 0090 8B42     		cmp	r3, r1
 3587 0092 F8D1     		bne	.L224
 567:Blink.cpp     ****             if(profile3[i] == effectCount){
 3588              		.loc 15 567 30 is_stmt 0 view .LVU1038
 3589              	.LBE575:
 3590              	.LBE581:
 576:Blink.cpp     **** }
 3591              		.loc 15 576 5 is_stmt 1 view .LVU1039
 577:Blink.cpp     **** //gets the pot data
 3592              		.loc 15 577 1 is_stmt 0 view .LVU1040
 3593 0094 5DF8044B 		ldr	r4, [sp], #4
 3594              		.cfi_remember_state
 3595              		.cfi_restore 4
 3596              		.cfi_def_cfa_offset 0
 3597 0098 7047     		bx	lr
 3598              	.LVL177:
 3599              	.L226:
 3600              		.cfi_restore_state
 550:Blink.cpp     ****     switch (prof){
 3601              		.loc 15 550 10 view .LVU1041
 3602 009a 0846     		mov	r0, r1
 3603              	.LVL178:
 550:Blink.cpp     ****     switch (prof){
 3604              		.loc 15 550 10 view .LVU1042
 3605 009c B7E7     		b	.L218
 3606              	.L233:
 3607 009e 00BF     		.align	2
 3608              	.L232:
 3609 00a0 00000000 		.word	.LANCHOR31
 3610 00a4 00000000 		.word	.LANCHOR32
 3611 00a8 00000000 		.word	.LANCHOR35
 3612 00ac 00000000 		.word	.LANCHOR29
 3613 00b0 00000000 		.word	.LANCHOR30
 3614 00b4 00000000 		.word	.LANCHOR33
 3615 00b8 00000000 		.word	.LANCHOR34
 3616              		.cfi_endproc
 3617              	.LFE4901:
 3619              		.section	.text._Z8ReadPotsv,"ax",%progbits
 3620              		.align	1
 3621              		.p2align 2,,3
 3622              		.global	_Z8ReadPotsv
 3623              		.syntax unified
 3624              		.thumb
 3625              		.thumb_func
 3626              		.fpu fpv5-d16
 3628              	_Z8ReadPotsv:
 3629              	.LFB4902:
 579:Blink.cpp     ****     knob1 = abs(1-hw.adc.GetFloat(0));
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 122


 3630              		.loc 15 579 16 is_stmt 1 view -0
 3631              		.cfi_startproc
 3632              		@ args = 0, pretend = 0, frame = 0
 3633              		@ frame_needed = 0, uses_anonymous_args = 0
 580:Blink.cpp     ****     knob2 = abs(1-hw.adc.GetFloat(1));
 3634              		.loc 15 580 5 view .LVU1044
 579:Blink.cpp     ****     knob1 = abs(1-hw.adc.GetFloat(0));
 3635              		.loc 15 579 16 is_stmt 0 view .LVU1045
 3636 0000 08B5     		push	{r3, lr}
 3637              		.cfi_def_cfa_offset 8
 3638              		.cfi_offset 3, -8
 3639              		.cfi_offset 14, -4
 3640 0002 2DED028B 		vpush.64	{d8}
 3641              		.cfi_def_cfa_offset 16
 3642              		.cfi_offset 80, -16
 3643              		.cfi_offset 81, -12
 580:Blink.cpp     ****     knob2 = abs(1-hw.adc.GetFloat(1));
 3644              		.loc 15 580 16 view .LVU1046
 3645 0006 B7EE008A 		vmov.f32	s16, #1.0e+0
 580:Blink.cpp     ****     knob2 = abs(1-hw.adc.GetFloat(1));
 3646              		.loc 15 580 34 view .LVU1047
 3647 000a 1748     		ldr	r0, .L236
 3648 000c 0021     		movs	r1, #0
 3649 000e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3650              	.LVL179:
 3651              	.LBB582:
 3652              	.LBI582:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 3653              		.loc 17 75 3 is_stmt 1 view .LVU1048
 3654              	.LBB583:
 3655              		.loc 17 76 5 view .LVU1049
 3656              		.loc 17 76 5 is_stmt 0 view .LVU1050
 3657              	.LBE583:
 3658              	.LBE582:
 580:Blink.cpp     ****     knob2 = abs(1-hw.adc.GetFloat(1));
 3659              		.loc 15 580 11 view .LVU1051
 3660 0012 164B     		ldr	r3, .L236+4
 580:Blink.cpp     ****     knob2 = abs(1-hw.adc.GetFloat(1));
 3661              		.loc 15 580 16 view .LVU1052
 3662 0014 38EE400A 		vsub.f32	s0, s16, s0
 581:Blink.cpp     ****     knob3 = abs(1-hw.adc.GetFloat(2));
 3663              		.loc 15 581 34 view .LVU1053
 3664 0018 0121     		movs	r1, #1
 3665 001a 1348     		ldr	r0, .L236
 3666              	.LBB585:
 3667              	.LBB584:
 3668              		.loc 17 76 31 view .LVU1054
 3669 001c B0EEC00A 		vabs.f32	s0, s0
 3670              	.LBE584:
 3671              	.LBE585:
 580:Blink.cpp     ****     knob2 = abs(1-hw.adc.GetFloat(1));
 3672              		.loc 15 580 11 view .LVU1055
 3673 0020 83ED000A 		vstr.32	s0, [r3]
 581:Blink.cpp     ****     knob3 = abs(1-hw.adc.GetFloat(2));
 3674              		.loc 15 581 5 is_stmt 1 view .LVU1056
 581:Blink.cpp     ****     knob3 = abs(1-hw.adc.GetFloat(2));
 3675              		.loc 15 581 34 is_stmt 0 view .LVU1057
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 123


 3676 0024 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3677              	.LVL180:
 3678              	.LBB586:
 3679              	.LBI586:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 3680              		.loc 17 75 3 is_stmt 1 view .LVU1058
 3681              	.LBB587:
 3682              		.loc 17 76 5 view .LVU1059
 3683              		.loc 17 76 5 is_stmt 0 view .LVU1060
 3684              	.LBE587:
 3685              	.LBE586:
 581:Blink.cpp     ****     knob3 = abs(1-hw.adc.GetFloat(2));
 3686              		.loc 15 581 16 view .LVU1061
 3687 0028 38EE400A 		vsub.f32	s0, s16, s0
 581:Blink.cpp     ****     knob3 = abs(1-hw.adc.GetFloat(2));
 3688              		.loc 15 581 11 view .LVU1062
 3689 002c 104B     		ldr	r3, .L236+8
 582:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 3690              		.loc 15 582 34 view .LVU1063
 3691 002e 0221     		movs	r1, #2
 3692 0030 0D48     		ldr	r0, .L236
 3693              	.LBB589:
 3694              	.LBB588:
 3695              		.loc 17 76 31 view .LVU1064
 3696 0032 B0EEC00A 		vabs.f32	s0, s0
 3697              	.LBE588:
 3698              	.LBE589:
 581:Blink.cpp     ****     knob3 = abs(1-hw.adc.GetFloat(2));
 3699              		.loc 15 581 11 view .LVU1065
 3700 0036 83ED000A 		vstr.32	s0, [r3]
 582:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 3701              		.loc 15 582 5 is_stmt 1 view .LVU1066
 582:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 3702              		.loc 15 582 34 is_stmt 0 view .LVU1067
 3703 003a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3704              	.LVL181:
 3705              	.LBB590:
 3706              	.LBI590:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 3707              		.loc 17 75 3 is_stmt 1 view .LVU1068
 3708              	.LBB591:
 3709              		.loc 17 76 5 view .LVU1069
 3710              		.loc 17 76 5 is_stmt 0 view .LVU1070
 3711              	.LBE591:
 3712              	.LBE590:
 582:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 3713              		.loc 15 582 16 view .LVU1071
 3714 003e 38EE400A 		vsub.f32	s0, s16, s0
 582:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 3715              		.loc 15 582 11 view .LVU1072
 3716 0042 0C4B     		ldr	r3, .L236+12
 583:Blink.cpp     **** }
 3717              		.loc 15 583 32 view .LVU1073
 3718 0044 0321     		movs	r1, #3
 3719 0046 0848     		ldr	r0, .L236
 3720              	.LBB593:
 3721              	.LBB592:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 124


 3722              		.loc 17 76 31 view .LVU1074
 3723 0048 B0EEC00A 		vabs.f32	s0, s0
 3724              	.LBE592:
 3725              	.LBE593:
 582:Blink.cpp     ****     wah = abs(1-hw.adc.GetFloat(3));
 3726              		.loc 15 582 11 view .LVU1075
 3727 004c 83ED000A 		vstr.32	s0, [r3]
 583:Blink.cpp     **** }
 3728              		.loc 15 583 5 is_stmt 1 view .LVU1076
 583:Blink.cpp     **** }
 3729              		.loc 15 583 32 is_stmt 0 view .LVU1077
 3730 0050 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3731              	.LVL182:
 3732              	.LBB594:
 3733              	.LBI594:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 3734              		.loc 17 75 3 is_stmt 1 view .LVU1078
 3735              	.LBB595:
 3736              		.loc 17 76 5 view .LVU1079
 3737              		.loc 17 76 5 is_stmt 0 view .LVU1080
 3738              	.LBE595:
 3739              	.LBE594:
 583:Blink.cpp     **** }
 3740              		.loc 15 583 14 view .LVU1081
 3741 0054 38EE400A 		vsub.f32	s0, s16, s0
 583:Blink.cpp     **** }
 3742              		.loc 15 583 9 view .LVU1082
 3743 0058 074B     		ldr	r3, .L236+16
 584:Blink.cpp     **** //removes an effect and shifts the effects up
 3744              		.loc 15 584 1 view .LVU1083
 3745 005a BDEC028B 		vldm	sp!, {d8}
 3746              		.cfi_restore 80
 3747              		.cfi_restore 81
 3748              		.cfi_def_cfa_offset 8
 3749              	.LBB597:
 3750              	.LBB596:
 3751              		.loc 17 76 31 view .LVU1084
 3752 005e B0EEC00A 		vabs.f32	s0, s0
 3753              	.LBE596:
 3754              	.LBE597:
 583:Blink.cpp     **** }
 3755              		.loc 15 583 9 view .LVU1085
 3756 0062 83ED000A 		vstr.32	s0, [r3]
 584:Blink.cpp     **** //removes an effect and shifts the effects up
 3757              		.loc 15 584 1 view .LVU1086
 3758 0066 08BD     		pop	{r3, pc}
 3759              	.L237:
 3760              		.align	2
 3761              	.L236:
 3762 0068 18000000 		.word	.LANCHOR2+24
 3763 006c 00000000 		.word	.LANCHOR66
 3764 0070 00000000 		.word	.LANCHOR67
 3765 0074 00000000 		.word	.LANCHOR68
 3766 0078 00000000 		.word	.LANCHOR3
 3767              		.cfi_endproc
 3768              	.LFE4902:
 3770              		.section	.text._Z12removeEffectv,"ax",%progbits
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 125


 3771              		.align	1
 3772              		.p2align 2,,3
 3773              		.global	_Z12removeEffectv
 3774              		.syntax unified
 3775              		.thumb
 3776              		.thumb_func
 3777              		.fpu fpv5-d16
 3779              	_Z12removeEffectv:
 3780              	.LFB4903:
 586:Blink.cpp     ****     int indexToRemove = -1;
 3781              		.loc 15 586 21 is_stmt 1 view -0
 3782              		.cfi_startproc
 3783              		@ args = 0, pretend = 0, frame = 0
 3784              		@ frame_needed = 0, uses_anonymous_args = 0
 587:Blink.cpp     ****     if(profile == 0){
 3785              		.loc 15 587 5 view .LVU1088
 3786              	.LVL183:
 588:Blink.cpp     ****         for (int i = 0; i < p1Size; i++) {
 3787              		.loc 15 588 5 view .LVU1089
 3788              	.LBB598:
 588:Blink.cpp     ****         for (int i = 0; i < p1Size; i++) {
 3789              		.loc 15 588 16 is_stmt 0 view .LVU1090
 3790 0000 484B     		ldr	r3, .L277
 3791              	.LBE598:
 586:Blink.cpp     ****     int indexToRemove = -1;
 3792              		.loc 15 586 21 view .LVU1091
 3793 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 3794              		.cfi_def_cfa_offset 20
 3795              		.cfi_offset 4, -20
 3796              		.cfi_offset 5, -16
 3797              		.cfi_offset 6, -12
 3798              		.cfi_offset 7, -8
 3799              		.cfi_offset 14, -4
 3800              	.LBB613:
 588:Blink.cpp     ****         for (int i = 0; i < p1Size; i++) {
 3801              		.loc 15 588 16 view .LVU1092
 3802 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588:Blink.cpp     ****         for (int i = 0; i < p1Size; i++) {
 3803              		.loc 15 588 5 view .LVU1093
 3804 0006 7BBB     		cbnz	r3, .L239
 3805              	.LVL184:
 3806              	.LBB599:
 589:Blink.cpp     ****             if (profile1[i] == effectCount) {
 3807              		.loc 15 589 27 is_stmt 1 view .LVU1094
 589:Blink.cpp     ****             if (profile1[i] == effectCount) {
 3808              		.loc 15 589 29 is_stmt 0 view .LVU1095
 3809 0008 474C     		ldr	r4, .L277+4
 3810 000a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 589:Blink.cpp     ****             if (profile1[i] == effectCount) {
 3811              		.loc 15 589 27 view .LVU1096
 3812 000c 58B3     		cbz	r0, .L238
 590:Blink.cpp     ****                 indexToRemove = i;
 3813              		.loc 15 590 29 view .LVU1097
 3814 000e 474A     		ldr	r2, .L277+8
 3815 0010 4749     		ldr	r1, .L277+12
 3816 0012 92F800E0 		ldrb	lr, [r2]	@ zero_extendqisi2
 3817 0016 0A46     		mov	r2, r1
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 126


 3818 0018 02E0     		b	.L242
 3819              	.LVL185:
 3820              	.L273:
 589:Blink.cpp     ****             if (profile1[i] == effectCount) {
 3821              		.loc 15 589 9 discriminator 2 view .LVU1098
 3822 001a 0133     		adds	r3, r3, #1
 3823              	.LVL186:
 589:Blink.cpp     ****             if (profile1[i] == effectCount) {
 3824              		.loc 15 589 27 is_stmt 1 discriminator 2 view .LVU1099
 3825 001c 8342     		cmp	r3, r0
 3826 001e 22DA     		bge	.L238
 3827              	.LVL187:
 3828              	.L242:
 590:Blink.cpp     ****                 indexToRemove = i;
 3829              		.loc 15 590 13 view .LVU1100
 589:Blink.cpp     ****             if (profile1[i] == effectCount) {
 3830              		.loc 15 589 9 view .LVU1101
 590:Blink.cpp     ****                 indexToRemove = i;
 3831              		.loc 15 590 27 is_stmt 0 view .LVU1102
 3832 0020 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 590:Blink.cpp     ****                 indexToRemove = i;
 3833              		.loc 15 590 13 view .LVU1103
 3834 0024 F445     		cmp	ip, lr
 3835 0026 F8D1     		bne	.L273
 3836              	.LVL188:
 590:Blink.cpp     ****                 indexToRemove = i;
 3837              		.loc 15 590 13 view .LVU1104
 3838              	.LBE599:
 3839              	.LBB600:
 3840              	.LBB601:
 3841              	.LBB602:
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3842              		.loc 15 598 43 is_stmt 1 view .LVU1105
 3843 0028 8342     		cmp	r3, r0
 3844 002a 1ADA     		bge	.L246
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3845              		.loc 15 598 43 is_stmt 0 view .LVU1106
 3846 002c 5A1C     		adds	r2, r3, #1
 3847 002e 0B44     		add	r3, r3, r1
 3848              	.LVL189:
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3849              		.loc 15 598 43 view .LVU1107
 3850 0030 07E0     		b	.L247
 3851              	.LVL190:
 3852              	.L244:
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3853              		.loc 15 598 43 view .LVU1108
 3854 0032 6045     		cmp	r0, ip
 603:Blink.cpp     ****                 }
 3855              		.loc 15 603 33 view .LVU1109
 3856 0034 83F800E0 		strb	lr, [r3]
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3857              		.loc 15 598 13 is_stmt 1 view .LVU1110
 3858              	.LVL191:
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3859              		.loc 15 598 43 view .LVU1111
 3860 0038 02F10102 		add	r2, r2, #1
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 127


 3861 003c 03F10103 		add	r3, r3, #1
 3862 0040 0FDD     		ble	.L246
 3863              	.LVL192:
 3864              	.L247:
 599:Blink.cpp     ****                     profile1[i] = profile1[i + 1];
 3865              		.loc 15 599 17 view .LVU1112
 600:Blink.cpp     ****                     profile1[i+1] = 9;
 3866              		.loc 15 600 21 view .LVU1113
 603:Blink.cpp     ****                 }
 3867              		.loc 15 603 21 view .LVU1114
 599:Blink.cpp     ****                     profile1[i] = profile1[i + 1];
 3868              		.loc 15 599 17 is_stmt 0 view .LVU1115
 3869 0042 511E     		subs	r1, r2, #1
 3870              	.LVL193:
 600:Blink.cpp     ****                     profile1[i+1] = 9;
 3871              		.loc 15 600 46 view .LVU1116
 3872 0044 9446     		mov	ip, r2
 603:Blink.cpp     ****                 }
 3873              		.loc 15 603 33 view .LVU1117
 3874 0046 4FF0090E 		mov	lr, #9
 599:Blink.cpp     ****                     profile1[i] = profile1[i + 1];
 3875              		.loc 15 599 17 view .LVU1118
 3876 004a 0129     		cmp	r1, #1
 3877 004c F1DC     		bgt	.L244
 600:Blink.cpp     ****                     profile1[i+1] = 9;
 3878              		.loc 15 600 33 view .LVU1119
 3879 004e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 3880              	.LVL194:
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3881              		.loc 15 598 43 view .LVU1120
 3882 0050 6045     		cmp	r0, ip
 601:Blink.cpp     ****                 } else {
 3883              		.loc 15 601 35 view .LVU1121
 3884 0052 83F801E0 		strb	lr, [r3, #1]
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3885              		.loc 15 598 43 view .LVU1122
 3886 0056 02F10102 		add	r2, r2, #1
 3887              	.LVL195:
 600:Blink.cpp     ****                     profile1[i+1] = 9;
 3888              		.loc 15 600 33 view .LVU1123
 3889 005a 1970     		strb	r1, [r3]
 601:Blink.cpp     ****                 } else {
 3890              		.loc 15 601 21 is_stmt 1 view .LVU1124
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3891              		.loc 15 598 13 view .LVU1125
 3892              	.LVL196:
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3893              		.loc 15 598 43 view .LVU1126
 3894 005c 03F10103 		add	r3, r3, #1
 3895 0060 EFDC     		bgt	.L247
 3896              	.LVL197:
 3897              	.L246:
 598:Blink.cpp     ****                 if((i + 1 < 3)){
 3898              		.loc 15 598 43 is_stmt 0 view .LVU1127
 3899              	.LBE602:
 608:Blink.cpp     ****         }
 3900              		.loc 15 608 13 is_stmt 1 view .LVU1128
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 128


 3901 0062 0138     		subs	r0, r0, #1
 3902 0064 2070     		strb	r0, [r4]
 3903              	.L238:
 608:Blink.cpp     ****         }
 3904              		.loc 15 608 13 is_stmt 0 view .LVU1129
 3905              	.LBE601:
 3906              	.LBE600:
 3907              	.LBE613:
 655:Blink.cpp     **** //handles encoder turns after initial press to save new params, cancel, turn effects on or off
 3908              		.loc 15 655 1 view .LVU1130
 3909 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 3910              	.LVL198:
 3911              	.L239:
 610:Blink.cpp     ****         for (int i = 0; i < p2Size; ++i) {
 3912              		.loc 15 610 12 is_stmt 1 view .LVU1131
 3913              	.LBB614:
 3914              	.LBB603:
 3915 0068 012B     		cmp	r3, #1
 3916 006a 2DD0     		beq	.L274
 3917              	.LVL199:
 3918              	.LBB604:
 633:Blink.cpp     ****         if (profile3[i] == effectCount) {
 3919              		.loc 15 633 27 view .LVU1132
 633:Blink.cpp     ****         if (profile3[i] == effectCount) {
 3920              		.loc 15 633 29 is_stmt 0 view .LVU1133
 3921 006c 314E     		ldr	r6, .L277+16
 3922 006e 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 633:Blink.cpp     ****         if (profile3[i] == effectCount) {
 3923              		.loc 15 633 27 view .LVU1134
 3924 0070 0028     		cmp	r0, #0
 3925 0072 F8D0     		beq	.L238
 634:Blink.cpp     ****             indexToRemove = i;
 3926              		.loc 15 634 25 view .LVU1135
 3927 0074 2D4B     		ldr	r3, .L277+8
 3928 0076 3049     		ldr	r1, .L277+20
 3929 0078 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 633:Blink.cpp     ****         if (profile3[i] == effectCount) {
 3930              		.loc 15 633 18 view .LVU1136
 3931 007a 0023     		movs	r3, #0
 3932 007c 0A46     		mov	r2, r1
 3933 007e 02E0     		b	.L257
 3934              	.LVL200:
 3935              	.L275:
 633:Blink.cpp     ****         if (profile3[i] == effectCount) {
 3936              		.loc 15 633 9 discriminator 2 view .LVU1137
 3937 0080 0133     		adds	r3, r3, #1
 3938              	.LVL201:
 633:Blink.cpp     ****         if (profile3[i] == effectCount) {
 3939              		.loc 15 633 27 is_stmt 1 discriminator 2 view .LVU1138
 3940 0082 8342     		cmp	r3, r0
 3941 0084 EFDA     		bge	.L238
 3942              	.LVL202:
 3943              	.L257:
 634:Blink.cpp     ****             indexToRemove = i;
 3944              		.loc 15 634 9 view .LVU1139
 633:Blink.cpp     ****         if (profile3[i] == effectCount) {
 3945              		.loc 15 633 9 view .LVU1140
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 129


 634:Blink.cpp     ****             indexToRemove = i;
 3946              		.loc 15 634 23 is_stmt 0 view .LVU1141
 3947 0086 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 634:Blink.cpp     ****             indexToRemove = i;
 3948              		.loc 15 634 9 view .LVU1142
 3949 008a A445     		cmp	ip, r4
 3950 008c F8D1     		bne	.L275
 3951              	.LVL203:
 634:Blink.cpp     ****             indexToRemove = i;
 3952              		.loc 15 634 9 view .LVU1143
 3953              	.LBE604:
 3954              	.LBB605:
 3955              	.LBB606:
 3956              	.LBB607:
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 3957              		.loc 15 642 43 is_stmt 1 view .LVU1144
 3958 008e 8342     		cmp	r3, r0
 3959 0090 17DA     		bge	.L261
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 3960              		.loc 15 642 43 is_stmt 0 view .LVU1145
 3961 0092 5A1C     		adds	r2, r3, #1
 3962 0094 0B44     		add	r3, r3, r1
 3963              	.LVL204:
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 3964              		.loc 15 642 43 view .LVU1146
 3965 0096 06E0     		b	.L262
 3966              	.LVL205:
 3967              	.L259:
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 3968              		.loc 15 642 43 view .LVU1147
 3969 0098 8445     		cmp	ip, r0
 647:Blink.cpp     ****                 }
 3970              		.loc 15 647 33 view .LVU1148
 3971 009a 1C70     		strb	r4, [r3]
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 3972              		.loc 15 642 13 is_stmt 1 view .LVU1149
 3973              	.LVL206:
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 3974              		.loc 15 642 43 view .LVU1150
 3975 009c 02F10102 		add	r2, r2, #1
 3976 00a0 03F10103 		add	r3, r3, #1
 3977 00a4 0DDA     		bge	.L261
 3978              	.LVL207:
 3979              	.L262:
 643:Blink.cpp     ****                     profile3[i] = profile3[i + 1];
 3980              		.loc 15 643 17 view .LVU1151
 644:Blink.cpp     ****                     profile3[i+1] = 9;
 3981              		.loc 15 644 21 view .LVU1152
 647:Blink.cpp     ****                 }
 3982              		.loc 15 647 21 view .LVU1153
 643:Blink.cpp     ****                     profile3[i] = profile3[i + 1];
 3983              		.loc 15 643 17 is_stmt 0 view .LVU1154
 3984 00a6 511E     		subs	r1, r2, #1
 3985              	.LVL208:
 644:Blink.cpp     ****                     profile3[i+1] = 9;
 3986              		.loc 15 644 46 view .LVU1155
 3987 00a8 9446     		mov	ip, r2
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 130


 647:Blink.cpp     ****                 }
 3988              		.loc 15 647 33 view .LVU1156
 3989 00aa 0924     		movs	r4, #9
 643:Blink.cpp     ****                     profile3[i] = profile3[i + 1];
 3990              		.loc 15 643 17 view .LVU1157
 3991 00ac 0129     		cmp	r1, #1
 3992 00ae F3DC     		bgt	.L259
 644:Blink.cpp     ****                     profile3[i+1] = 9;
 3993              		.loc 15 644 33 view .LVU1158
 3994 00b0 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 3995              	.LVL209:
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 3996              		.loc 15 642 43 view .LVU1159
 3997 00b2 8445     		cmp	ip, r0
 645:Blink.cpp     ****                 } else {
 3998              		.loc 15 645 35 view .LVU1160
 3999 00b4 5C70     		strb	r4, [r3, #1]
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 4000              		.loc 15 642 43 view .LVU1161
 4001 00b6 02F10102 		add	r2, r2, #1
 4002              	.LVL210:
 644:Blink.cpp     ****                     profile3[i+1] = 9;
 4003              		.loc 15 644 33 view .LVU1162
 4004 00ba 1970     		strb	r1, [r3]
 645:Blink.cpp     ****                 } else {
 4005              		.loc 15 645 21 is_stmt 1 view .LVU1163
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 4006              		.loc 15 642 13 view .LVU1164
 4007              	.LVL211:
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 4008              		.loc 15 642 43 view .LVU1165
 4009 00bc 03F10103 		add	r3, r3, #1
 4010 00c0 F1DB     		blt	.L262
 4011              	.LVL212:
 4012              	.L261:
 642:Blink.cpp     ****                 if((i + 1 < 3)){
 4013              		.loc 15 642 43 is_stmt 0 view .LVU1166
 4014              	.LBE607:
 652:Blink.cpp     ****         }
 4015              		.loc 15 652 13 is_stmt 1 view .LVU1167
 4016 00c2 0138     		subs	r0, r0, #1
 4017 00c4 3070     		strb	r0, [r6]
 4018              	.LBE606:
 4019              	.LBE605:
 4020              	.LBE603:
 4021              	.LBE614:
 655:Blink.cpp     **** //handles encoder turns after initial press to save new params, cancel, turn effects on or off
 4022              		.loc 15 655 1 is_stmt 0 view .LVU1168
 4023 00c6 F0BD     		pop	{r4, r5, r6, r7, pc}
 4024              	.LVL213:
 4025              	.L274:
 4026              	.LBB615:
 4027              	.LBB612:
 4028              	.LBB608:
 611:Blink.cpp     ****         if (profile2[i] == effectCount) {
 4029              		.loc 15 611 27 is_stmt 1 view .LVU1169
 611:Blink.cpp     ****         if (profile2[i] == effectCount) {
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 131


 4030              		.loc 15 611 29 is_stmt 0 view .LVU1170
 4031 00c8 1C4F     		ldr	r7, .L277+24
 4032 00ca 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 611:Blink.cpp     ****         if (profile2[i] == effectCount) {
 4033              		.loc 15 611 27 view .LVU1171
 4034 00cc 0028     		cmp	r0, #0
 4035 00ce CAD0     		beq	.L238
 612:Blink.cpp     ****             indexToRemove = i;
 4036              		.loc 15 612 25 view .LVU1172
 4037 00d0 164B     		ldr	r3, .L277+8
 4038 00d2 1B49     		ldr	r1, .L277+28
 4039 00d4 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 611:Blink.cpp     ****         if (profile2[i] == effectCount) {
 4040              		.loc 15 611 18 view .LVU1173
 4041 00d6 0023     		movs	r3, #0
 4042 00d8 0A46     		mov	r2, r1
 4043 00da 02E0     		b	.L250
 4044              	.LVL214:
 4045              	.L276:
 611:Blink.cpp     ****         if (profile2[i] == effectCount) {
 4046              		.loc 15 611 9 discriminator 2 view .LVU1174
 4047 00dc 0133     		adds	r3, r3, #1
 4048              	.LVL215:
 611:Blink.cpp     ****         if (profile2[i] == effectCount) {
 4049              		.loc 15 611 27 is_stmt 1 discriminator 2 view .LVU1175
 4050 00de 8342     		cmp	r3, r0
 4051 00e0 C1DA     		bge	.L238
 4052              	.LVL216:
 4053              	.L250:
 612:Blink.cpp     ****             indexToRemove = i;
 4054              		.loc 15 612 9 view .LVU1176
 611:Blink.cpp     ****         if (profile2[i] == effectCount) {
 4055              		.loc 15 611 9 view .LVU1177
 612:Blink.cpp     ****             indexToRemove = i;
 4056              		.loc 15 612 23 is_stmt 0 view .LVU1178
 4057 00e2 12F8014B 		ldrb	r4, [r2], #1	@ zero_extendqisi2
 612:Blink.cpp     ****             indexToRemove = i;
 4058              		.loc 15 612 9 view .LVU1179
 4059 00e6 AC42     		cmp	r4, r5
 4060 00e8 F8D1     		bne	.L276
 4061              	.LVL217:
 612:Blink.cpp     ****             indexToRemove = i;
 4062              		.loc 15 612 9 view .LVU1180
 4063              	.LBE608:
 4064              	.LBB609:
 4065              	.LBB610:
 4066              	.LBB611:
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4067              		.loc 15 620 43 is_stmt 1 view .LVU1181
 4068 00ea 8342     		cmp	r3, r0
 4069 00ec 17DA     		bge	.L254
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4070              		.loc 15 620 43 is_stmt 0 view .LVU1182
 4071 00ee 5A1C     		adds	r2, r3, #1
 4072 00f0 0B44     		add	r3, r3, r1
 4073              	.LVL218:
 620:Blink.cpp     ****                 if((i + 1 < 3)){
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 132


 4074              		.loc 15 620 43 view .LVU1183
 4075 00f2 06E0     		b	.L255
 4076              	.LVL219:
 4077              	.L252:
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4078              		.loc 15 620 43 view .LVU1184
 4079 00f4 8442     		cmp	r4, r0
 625:Blink.cpp     ****                 }
 4080              		.loc 15 625 33 view .LVU1185
 4081 00f6 1D70     		strb	r5, [r3]
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4082              		.loc 15 620 13 is_stmt 1 view .LVU1186
 4083              	.LVL220:
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4084              		.loc 15 620 43 view .LVU1187
 4085 00f8 02F10102 		add	r2, r2, #1
 4086 00fc 03F10103 		add	r3, r3, #1
 4087 0100 0DDA     		bge	.L254
 4088              	.LVL221:
 4089              	.L255:
 621:Blink.cpp     ****                     profile2[i] = profile2[i + 1];
 4090              		.loc 15 621 17 view .LVU1188
 622:Blink.cpp     ****                     profile2[i+1] = 9;
 4091              		.loc 15 622 21 view .LVU1189
 625:Blink.cpp     ****                 }
 4092              		.loc 15 625 21 view .LVU1190
 621:Blink.cpp     ****                     profile2[i] = profile2[i + 1];
 4093              		.loc 15 621 17 is_stmt 0 view .LVU1191
 4094 0102 511E     		subs	r1, r2, #1
 4095              	.LVL222:
 622:Blink.cpp     ****                     profile2[i+1] = 9;
 4096              		.loc 15 622 46 view .LVU1192
 4097 0104 1446     		mov	r4, r2
 625:Blink.cpp     ****                 }
 4098              		.loc 15 625 33 view .LVU1193
 4099 0106 0925     		movs	r5, #9
 621:Blink.cpp     ****                     profile2[i] = profile2[i + 1];
 4100              		.loc 15 621 17 view .LVU1194
 4101 0108 0129     		cmp	r1, #1
 4102 010a F3DC     		bgt	.L252
 622:Blink.cpp     ****                     profile2[i+1] = 9;
 4103              		.loc 15 622 33 view .LVU1195
 4104 010c 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 4105              	.LVL223:
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4106              		.loc 15 620 43 view .LVU1196
 4107 010e 8442     		cmp	r4, r0
 623:Blink.cpp     ****                 } else {
 4108              		.loc 15 623 35 view .LVU1197
 4109 0110 5D70     		strb	r5, [r3, #1]
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4110              		.loc 15 620 43 view .LVU1198
 4111 0112 02F10102 		add	r2, r2, #1
 4112              	.LVL224:
 622:Blink.cpp     ****                     profile2[i+1] = 9;
 4113              		.loc 15 622 33 view .LVU1199
 4114 0116 1970     		strb	r1, [r3]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 133


 623:Blink.cpp     ****                 } else {
 4115              		.loc 15 623 21 is_stmt 1 view .LVU1200
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4116              		.loc 15 620 13 view .LVU1201
 4117              	.LVL225:
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4118              		.loc 15 620 43 view .LVU1202
 4119 0118 03F10103 		add	r3, r3, #1
 4120 011c F1DB     		blt	.L255
 4121              	.LVL226:
 4122              	.L254:
 620:Blink.cpp     ****                 if((i + 1 < 3)){
 4123              		.loc 15 620 43 is_stmt 0 view .LVU1203
 4124              	.LBE611:
 630:Blink.cpp     ****         }
 4125              		.loc 15 630 13 is_stmt 1 view .LVU1204
 4126 011e 0138     		subs	r0, r0, #1
 4127 0120 3870     		strb	r0, [r7]
 4128              	.LBE610:
 4129              	.LBE609:
 4130              	.LBE612:
 4131              	.LBE615:
 655:Blink.cpp     **** //handles encoder turns after initial press to save new params, cancel, turn effects on or off
 4132              		.loc 15 655 1 is_stmt 0 view .LVU1205
 4133 0122 F0BD     		pop	{r4, r5, r6, r7, pc}
 4134              	.L278:
 4135              		.align	2
 4136              	.L277:
 4137 0124 00000000 		.word	.LANCHOR5
 4138 0128 00000000 		.word	.LANCHOR29
 4139 012c 00000000 		.word	.LANCHOR35
 4140 0130 00000000 		.word	.LANCHOR30
 4141 0134 00000000 		.word	.LANCHOR33
 4142 0138 00000000 		.word	.LANCHOR34
 4143 013c 00000000 		.word	.LANCHOR31
 4144 0140 00000000 		.word	.LANCHOR32
 4145              		.cfi_endproc
 4146              	.LFE4903:
 4148              		.section	.text._Z13InitializeADCv,"ax",%progbits
 4149              		.align	1
 4150              		.p2align 2,,3
 4151              		.global	_Z13InitializeADCv
 4152              		.syntax unified
 4153              		.thumb
 4154              		.thumb_func
 4155              		.fpu fpv5-d16
 4157              	_Z13InitializeADCv:
 4158              	.LFB4908:
 898:Blink.cpp     **** 
 899:Blink.cpp     **** 
 900:Blink.cpp     **** //inits the adc channels as well as the pin numbers
 901:Blink.cpp     **** void InitializeADC()
 902:Blink.cpp     **** {
 4159              		.loc 15 902 1 is_stmt 1 view -0
 4160              		.cfi_startproc
 4161              		@ args = 0, pretend = 0, frame = 88
 4162              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 134


 903:Blink.cpp     **** 	AdcChannelConfig adc_config[4];
 4163              		.loc 15 903 2 view .LVU1207
 904:Blink.cpp     ****     adc_config[0].InitSingle(hw.GetPin(17));//knob 3
 4164              		.loc 15 904 5 view .LVU1208
 902:Blink.cpp     **** 	AdcChannelConfig adc_config[4];
 4165              		.loc 15 902 1 is_stmt 0 view .LVU1209
 4166 0000 10B5     		push	{r4, lr}
 4167              		.cfi_def_cfa_offset 8
 4168              		.cfi_offset 4, -8
 4169              		.cfi_offset 14, -4
 4170              		.loc 15 904 29 view .LVU1210
 4171 0002 1120     		movs	r0, #17
 902:Blink.cpp     **** 	AdcChannelConfig adc_config[4];
 4172              		.loc 15 902 1 view .LVU1211
 4173 0004 96B0     		sub	sp, sp, #88
 4174              		.cfi_def_cfa_offset 96
 4175              		.loc 15 904 29 view .LVU1212
 4176 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 4177              	.LVL227:
 4178 000a 0346     		mov	r3, r0	@ movhi
 4179 000c 0222     		movs	r2, #2
 4180 000e 04A8     		add	r0, sp, #16
 4181 0010 ADF80030 		strh	r3, [sp]	@ movhi
 4182 0014 0099     		ldr	r1, [sp]
 4183 0016 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 4184              	.LVL228:
 905:Blink.cpp     ****     adc_config[1].InitSingle(hw.GetPin(16));//knob 2
 4185              		.loc 15 905 5 is_stmt 1 view .LVU1213
 4186              		.loc 15 905 29 is_stmt 0 view .LVU1214
 4187 001a 1020     		movs	r0, #16
 4188 001c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 4189              	.LVL229:
 4190 0020 ADF80400 		strh	r0, [sp, #4]	@ movhi
 4191 0024 0199     		ldr	r1, [sp, #4]
 4192 0026 0222     		movs	r2, #2
 4193 0028 0DF12200 		add	r0, sp, #34
 906:Blink.cpp     ****     adc_config[2].InitSingle(hw.GetPin(15));//knob 1
 907:Blink.cpp     ****     adc_config[3].InitSingle(hw.GetPin(18));//wah
 908:Blink.cpp     **** 	hw.adc.Init(adc_config, 4);
 4194              		.loc 15 908 13 view .LVU1215
 4195 002c 114C     		ldr	r4, .L281
 905:Blink.cpp     ****     adc_config[1].InitSingle(hw.GetPin(16));//knob 2
 4196              		.loc 15 905 29 view .LVU1216
 4197 002e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 4198              	.LVL230:
 906:Blink.cpp     ****     adc_config[2].InitSingle(hw.GetPin(15));//knob 1
 4199              		.loc 15 906 5 is_stmt 1 view .LVU1217
 906:Blink.cpp     ****     adc_config[2].InitSingle(hw.GetPin(15));//knob 1
 4200              		.loc 15 906 29 is_stmt 0 view .LVU1218
 4201 0032 0F20     		movs	r0, #15
 4202 0034 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 4203              	.LVL231:
 4204 0038 ADF80800 		strh	r0, [sp, #8]	@ movhi
 4205 003c 0299     		ldr	r1, [sp, #8]
 4206 003e 0222     		movs	r2, #2
 4207 0040 0DA8     		add	r0, sp, #52
 4208 0042 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 135


 4209              	.LVL232:
 907:Blink.cpp     **** 	hw.adc.Init(adc_config, 4);
 4210              		.loc 15 907 5 is_stmt 1 view .LVU1219
 907:Blink.cpp     **** 	hw.adc.Init(adc_config, 4);
 4211              		.loc 15 907 29 is_stmt 0 view .LVU1220
 4212 0046 1220     		movs	r0, #18
 4213 0048 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 4214              	.LVL233:
 4215 004c ADF80C00 		strh	r0, [sp, #12]	@ movhi
 4216 0050 0399     		ldr	r1, [sp, #12]
 4217 0052 0DF14600 		add	r0, sp, #70
 4218 0056 0222     		movs	r2, #2
 4219 0058 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 4220              	.LVL234:
 4221              		.loc 15 908 2 is_stmt 1 view .LVU1221
 4222              		.loc 15 908 13 is_stmt 0 view .LVU1222
 4223 005c 0423     		movs	r3, #4
 4224 005e 04A9     		add	r1, sp, #16
 4225 0060 2046     		mov	r0, r4
 4226 0062 1A46     		mov	r2, r3
 4227 0064 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 4228              	.LVL235:
 909:Blink.cpp     **** 	hw.adc.Start();
 4229              		.loc 15 909 2 is_stmt 1 view .LVU1223
 4230              		.loc 15 909 14 is_stmt 0 view .LVU1224
 4231 0068 2046     		mov	r0, r4
 4232 006a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 4233              	.LVL236:
 910:Blink.cpp     **** }
 4234              		.loc 15 910 1 view .LVU1225
 4235 006e 16B0     		add	sp, sp, #88
 4236              		.cfi_def_cfa_offset 8
 4237              		@ sp needed
 4238 0070 10BD     		pop	{r4, pc}
 4239              	.L282:
 4240 0072 00BF     		.align	2
 4241              	.L281:
 4242 0074 18000000 		.word	.LANCHOR2+24
 4243              		.cfi_endproc
 4244              	.LFE4908:
 4246              		.section	.text._Z7uartInth,"ax",%progbits
 4247              		.align	1
 4248              		.p2align 2,,3
 4249              		.global	_Z7uartInth
 4250              		.syntax unified
 4251              		.thumb
 4252              		.thumb_func
 4253              		.fpu fpv5-d16
 4255              	_Z7uartInth:
 4256              	.LVL237:
 4257              	.LFB4909:
 911:Blink.cpp     **** //sends one byte over uart
 912:Blink.cpp     **** void uartInt(uint8_t var) {
 4258              		.loc 15 912 27 is_stmt 1 view -0
 4259              		.cfi_startproc
 4260              		@ args = 0, pretend = 0, frame = 8
 4261              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 136


 913:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4262              		.loc 15 913 5 view .LVU1227
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4263              		.loc 15 912 27 is_stmt 0 view .LVU1228
 4264 0000 00B5     		push	{lr}
 4265              		.cfi_def_cfa_offset 4
 4266              		.cfi_offset 14, -4
 4267 0002 83B0     		sub	sp, sp, #12
 4268              		.cfi_def_cfa_offset 16
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4269              		.loc 15 912 27 view .LVU1229
 4270 0004 8446     		mov	ip, r0
 4271              		.loc 15 913 26 view .LVU1230
 4272 0006 4FF47A73 		mov	r3, #1000
 4273 000a 0122     		movs	r2, #1
 4274 000c 0DF10701 		add	r1, sp, #7
 4275 0010 0348     		ldr	r0, .L285
 4276              	.LVL238:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4277              		.loc 15 912 27 view .LVU1231
 4278 0012 8DF807C0 		strb	ip, [sp, #7]
 4279              		.loc 15 913 26 view .LVU1232
 4280 0016 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4281              	.LVL239:
 914:Blink.cpp     **** }
 4282              		.loc 15 914 1 view .LVU1233
 4283 001a 03B0     		add	sp, sp, #12
 4284              		.cfi_def_cfa_offset 4
 4285              		@ sp needed
 4286 001c 5DF804FB 		ldr	pc, [sp], #4
 4287              	.L286:
 4288              		.align	2
 4289              	.L285:
 4290 0020 00000000 		.word	.LANCHOR69
 4291              		.cfi_endproc
 4292              	.LFE4909:
 4294              		.section	.text._Z12transmitDatav,"ax",%progbits
 4295              		.align	1
 4296              		.p2align 2,,3
 4297              		.global	_Z12transmitDatav
 4298              		.syntax unified
 4299              		.thumb
 4300              		.thumb_func
 4301              		.fpu fpv5-d16
 4303              	_Z12transmitDatav:
 4304              	.LFB4910:
 915:Blink.cpp     **** //sends knob and prfile data
 916:Blink.cpp     **** void transmitData(){
 4305              		.loc 15 916 20 is_stmt 1 view -0
 4306              		.cfi_startproc
 4307              		@ args = 0, pretend = 0, frame = 8
 4308              		@ frame_needed = 0, uses_anonymous_args = 0
 917:Blink.cpp     ****     uartInt(start);//start for sync
 4309              		.loc 15 917 5 view .LVU1235
 4310              		.loc 15 917 12 is_stmt 0 view .LVU1236
 4311 0000 424A     		ldr	r2, .L289
 4312              	.LBB616:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 137


 4313              	.LBB617:
 913:Blink.cpp     **** }
 4314              		.loc 15 913 26 view .LVU1237
 4315 0002 4FF47A73 		mov	r3, #1000
 4316              	.LBE617:
 4317              	.LBE616:
 916:Blink.cpp     ****     uartInt(start);//start for sync
 4318              		.loc 15 916 20 view .LVU1238
 4319 0006 30B5     		push	{r4, r5, lr}
 4320              		.cfi_def_cfa_offset 12
 4321              		.cfi_offset 4, -12
 4322              		.cfi_offset 5, -8
 4323              		.cfi_offset 14, -4
 4324              	.LBB622:
 4325              	.LBB618:
 913:Blink.cpp     **** }
 4326              		.loc 15 913 26 view .LVU1239
 4327 0008 414C     		ldr	r4, .L289+4
 4328              	.LBE618:
 4329              	.LBE622:
 918:Blink.cpp     ****     uartInt(effectCount);//which screen
 919:Blink.cpp     ****     uartInt((uint8_t)(knob1*100)+1);
 920:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 921:Blink.cpp     ****     uartInt((uint8_t)(knob3*100)+1);
 922:Blink.cpp     ****     uartInt(profile);//profile number
 923:Blink.cpp     ****     uartInt(configuring);//effect config... are you setting the knob values... 0 or 1
 924:Blink.cpp     ****     uartInt(errorFlag);//error if tried to select more than 3 effects
 4330              		.loc 15 924 12 view .LVU1240
 4331 000a 424D     		ldr	r5, .L289+8
 4332              	.LBB623:
 4333              	.LBB619:
 913:Blink.cpp     **** }
 4334              		.loc 15 913 26 view .LVU1241
 4335 000c 2046     		mov	r0, r4
 4336              	.LBE619:
 4337              	.LBE623:
 916:Blink.cpp     ****     uartInt(start);//start for sync
 4338              		.loc 15 916 20 view .LVU1242
 4339 000e 2DED028B 		vpush.64	{d8}
 4340              		.cfi_def_cfa_offset 20
 4341              		.cfi_offset 80, -20
 4342              		.cfi_offset 81, -16
 4343 0012 83B0     		sub	sp, sp, #12
 4344              		.cfi_def_cfa_offset 32
 4345 0014 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4346              	.LBB624:
 4347              	.LBB620:
 913:Blink.cpp     **** }
 4348              		.loc 15 913 26 view .LVU1243
 4349 0016 0122     		movs	r2, #1
 4350              	.LBE620:
 4351              	.LBE624:
 919:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 4352              		.loc 15 919 28 view .LVU1244
 4353 0018 9FED3F8A 		vldr.32	s16, .L289+12
 4354 001c 8DF80710 		strb	r1, [sp, #7]
 4355              	.LVL240:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 138


 4356              	.LBB625:
 4357              	.LBI616:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4358              		.loc 15 912 6 is_stmt 1 view .LVU1245
 4359              	.LBB621:
 913:Blink.cpp     **** }
 4360              		.loc 15 913 5 view .LVU1246
 913:Blink.cpp     **** }
 4361              		.loc 15 913 26 is_stmt 0 view .LVU1247
 4362 0020 0DF10701 		add	r1, sp, #7
 4363              	.LVL241:
 913:Blink.cpp     **** }
 4364              		.loc 15 913 26 view .LVU1248
 4365 0024 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4366              	.LVL242:
 913:Blink.cpp     **** }
 4367              		.loc 15 913 26 view .LVU1249
 4368              	.LBE621:
 4369              	.LBE625:
 918:Blink.cpp     ****     uartInt((uint8_t)(knob1*100)+1);
 4370              		.loc 15 918 5 is_stmt 1 view .LVU1250
 918:Blink.cpp     ****     uartInt((uint8_t)(knob1*100)+1);
 4371              		.loc 15 918 12 is_stmt 0 view .LVU1251
 4372 0028 3C49     		ldr	r1, .L289+16
 4373              	.LBB626:
 4374              	.LBB627:
 913:Blink.cpp     **** }
 4375              		.loc 15 913 26 view .LVU1252
 4376 002a 4FF47A73 		mov	r3, #1000
 4377 002e 0122     		movs	r2, #1
 4378 0030 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4379 0032 2046     		mov	r0, r4
 4380 0034 8DF80710 		strb	r1, [sp, #7]
 4381              	.LVL243:
 913:Blink.cpp     **** }
 4382              		.loc 15 913 26 view .LVU1253
 4383              	.LBE627:
 4384              	.LBI626:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4385              		.loc 15 912 6 is_stmt 1 view .LVU1254
 4386              	.LBB628:
 913:Blink.cpp     **** }
 4387              		.loc 15 913 5 view .LVU1255
 913:Blink.cpp     **** }
 4388              		.loc 15 913 26 is_stmt 0 view .LVU1256
 4389 0038 0DF10701 		add	r1, sp, #7
 4390              	.LVL244:
 913:Blink.cpp     **** }
 4391              		.loc 15 913 26 view .LVU1257
 4392 003c FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4393              	.LVL245:
 913:Blink.cpp     **** }
 4394              		.loc 15 913 26 view .LVU1258
 4395              	.LBE628:
 4396              	.LBE626:
 919:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 4397              		.loc 15 919 5 is_stmt 1 view .LVU1259
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 139


 919:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 4398              		.loc 15 919 28 is_stmt 0 view .LVU1260
 4399 0040 3749     		ldr	r1, .L289+20
 4400              	.LBB629:
 4401              	.LBB630:
 913:Blink.cpp     **** }
 4402              		.loc 15 913 26 view .LVU1261
 4403 0042 0122     		movs	r2, #1
 4404 0044 4FF47A73 		mov	r3, #1000
 4405              	.LBE630:
 4406              	.LBE629:
 919:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 4407              		.loc 15 919 28 view .LVU1262
 4408 0048 D1ED007A 		vldr.32	s15, [r1]
 4409              	.LBB633:
 4410              	.LBB631:
 913:Blink.cpp     **** }
 4411              		.loc 15 913 26 view .LVU1263
 4412 004c 2046     		mov	r0, r4
 4413              	.LBE631:
 4414              	.LBE633:
 919:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 4415              		.loc 15 919 28 view .LVU1264
 4416 004e 67EE887A 		vmul.f32	s15, s15, s16
 919:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 4417              		.loc 15 919 13 view .LVU1265
 4418 0052 FCEEE77A 		vcvt.u32.f32	s15, s15
 4419 0056 17EE901A 		vmov	r1, s15	@ int
 919:Blink.cpp     ****     uartInt((uint8_t)(knob2*100)+1);
 4420              		.loc 15 919 12 view .LVU1266
 4421 005a 1144     		add	r1, r1, r2
 4422 005c 8DF80710 		strb	r1, [sp, #7]
 4423              	.LVL246:
 4424              	.LBB634:
 4425              	.LBI629:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4426              		.loc 15 912 6 is_stmt 1 view .LVU1267
 4427              	.LBB632:
 913:Blink.cpp     **** }
 4428              		.loc 15 913 5 view .LVU1268
 913:Blink.cpp     **** }
 4429              		.loc 15 913 26 is_stmt 0 view .LVU1269
 4430 0060 0DF10701 		add	r1, sp, #7
 4431              	.LVL247:
 913:Blink.cpp     **** }
 4432              		.loc 15 913 26 view .LVU1270
 4433 0064 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4434              	.LVL248:
 913:Blink.cpp     **** }
 4435              		.loc 15 913 26 view .LVU1271
 4436              	.LBE632:
 4437              	.LBE634:
 920:Blink.cpp     ****     uartInt((uint8_t)(knob3*100)+1);
 4438              		.loc 15 920 5 is_stmt 1 view .LVU1272
 920:Blink.cpp     ****     uartInt((uint8_t)(knob3*100)+1);
 4439              		.loc 15 920 28 is_stmt 0 view .LVU1273
 4440 0068 2E49     		ldr	r1, .L289+24
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 140


 4441              	.LBB635:
 4442              	.LBB636:
 913:Blink.cpp     **** }
 4443              		.loc 15 913 26 view .LVU1274
 4444 006a 0122     		movs	r2, #1
 4445 006c 4FF47A73 		mov	r3, #1000
 4446              	.LBE636:
 4447              	.LBE635:
 920:Blink.cpp     ****     uartInt((uint8_t)(knob3*100)+1);
 4448              		.loc 15 920 28 view .LVU1275
 4449 0070 D1ED007A 		vldr.32	s15, [r1]
 4450              	.LBB639:
 4451              	.LBB637:
 913:Blink.cpp     **** }
 4452              		.loc 15 913 26 view .LVU1276
 4453 0074 2046     		mov	r0, r4
 4454              	.LBE637:
 4455              	.LBE639:
 920:Blink.cpp     ****     uartInt((uint8_t)(knob3*100)+1);
 4456              		.loc 15 920 28 view .LVU1277
 4457 0076 67EE887A 		vmul.f32	s15, s15, s16
 920:Blink.cpp     ****     uartInt((uint8_t)(knob3*100)+1);
 4458              		.loc 15 920 13 view .LVU1278
 4459 007a FCEEE77A 		vcvt.u32.f32	s15, s15
 4460 007e 17EE901A 		vmov	r1, s15	@ int
 920:Blink.cpp     ****     uartInt((uint8_t)(knob3*100)+1);
 4461              		.loc 15 920 12 view .LVU1279
 4462 0082 1144     		add	r1, r1, r2
 4463 0084 8DF80710 		strb	r1, [sp, #7]
 4464              	.LVL249:
 4465              	.LBB640:
 4466              	.LBI635:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4467              		.loc 15 912 6 is_stmt 1 view .LVU1280
 4468              	.LBB638:
 913:Blink.cpp     **** }
 4469              		.loc 15 913 5 view .LVU1281
 913:Blink.cpp     **** }
 4470              		.loc 15 913 26 is_stmt 0 view .LVU1282
 4471 0088 0DF10701 		add	r1, sp, #7
 4472              	.LVL250:
 913:Blink.cpp     **** }
 4473              		.loc 15 913 26 view .LVU1283
 4474 008c FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4475              	.LVL251:
 913:Blink.cpp     **** }
 4476              		.loc 15 913 26 view .LVU1284
 4477              	.LBE638:
 4478              	.LBE640:
 921:Blink.cpp     ****     uartInt(profile);//profile number
 4479              		.loc 15 921 5 is_stmt 1 view .LVU1285
 921:Blink.cpp     ****     uartInt(profile);//profile number
 4480              		.loc 15 921 28 is_stmt 0 view .LVU1286
 4481 0090 2549     		ldr	r1, .L289+28
 4482              	.LBB641:
 4483              	.LBB642:
 913:Blink.cpp     **** }
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 141


 4484              		.loc 15 913 26 view .LVU1287
 4485 0092 0122     		movs	r2, #1
 4486 0094 4FF47A73 		mov	r3, #1000
 4487              	.LBE642:
 4488              	.LBE641:
 921:Blink.cpp     ****     uartInt(profile);//profile number
 4489              		.loc 15 921 28 view .LVU1288
 4490 0098 D1ED007A 		vldr.32	s15, [r1]
 4491              	.LBB645:
 4492              	.LBB643:
 913:Blink.cpp     **** }
 4493              		.loc 15 913 26 view .LVU1289
 4494 009c 2046     		mov	r0, r4
 4495              	.LBE643:
 4496              	.LBE645:
 921:Blink.cpp     ****     uartInt(profile);//profile number
 4497              		.loc 15 921 28 view .LVU1290
 4498 009e 67EE887A 		vmul.f32	s15, s15, s16
 921:Blink.cpp     ****     uartInt(profile);//profile number
 4499              		.loc 15 921 13 view .LVU1291
 4500 00a2 FCEEE77A 		vcvt.u32.f32	s15, s15
 4501 00a6 17EE901A 		vmov	r1, s15	@ int
 921:Blink.cpp     ****     uartInt(profile);//profile number
 4502              		.loc 15 921 12 view .LVU1292
 4503 00aa 1144     		add	r1, r1, r2
 4504 00ac 8DF80710 		strb	r1, [sp, #7]
 4505              	.LVL252:
 4506              	.LBB646:
 4507              	.LBI641:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4508              		.loc 15 912 6 is_stmt 1 view .LVU1293
 4509              	.LBB644:
 913:Blink.cpp     **** }
 4510              		.loc 15 913 5 view .LVU1294
 913:Blink.cpp     **** }
 4511              		.loc 15 913 26 is_stmt 0 view .LVU1295
 4512 00b0 0DF10701 		add	r1, sp, #7
 4513              	.LVL253:
 913:Blink.cpp     **** }
 4514              		.loc 15 913 26 view .LVU1296
 4515 00b4 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4516              	.LVL254:
 913:Blink.cpp     **** }
 4517              		.loc 15 913 26 view .LVU1297
 4518              	.LBE644:
 4519              	.LBE646:
 922:Blink.cpp     ****     uartInt(configuring);//effect config... are you setting the knob values... 0 or 1
 4520              		.loc 15 922 5 is_stmt 1 view .LVU1298
 922:Blink.cpp     ****     uartInt(configuring);//effect config... are you setting the knob values... 0 or 1
 4521              		.loc 15 922 12 is_stmt 0 view .LVU1299
 4522 00b8 1C49     		ldr	r1, .L289+32
 4523              	.LBB647:
 4524              	.LBB648:
 913:Blink.cpp     **** }
 4525              		.loc 15 913 26 view .LVU1300
 4526 00ba 4FF47A73 		mov	r3, #1000
 4527 00be 0122     		movs	r2, #1
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 142


 4528 00c0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4529 00c2 2046     		mov	r0, r4
 4530 00c4 8DF80710 		strb	r1, [sp, #7]
 4531              	.LVL255:
 913:Blink.cpp     **** }
 4532              		.loc 15 913 26 view .LVU1301
 4533              	.LBE648:
 4534              	.LBI647:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4535              		.loc 15 912 6 is_stmt 1 view .LVU1302
 4536              	.LBB649:
 913:Blink.cpp     **** }
 4537              		.loc 15 913 5 view .LVU1303
 913:Blink.cpp     **** }
 4538              		.loc 15 913 26 is_stmt 0 view .LVU1304
 4539 00c8 0DF10701 		add	r1, sp, #7
 4540              	.LVL256:
 913:Blink.cpp     **** }
 4541              		.loc 15 913 26 view .LVU1305
 4542 00cc FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4543              	.LVL257:
 913:Blink.cpp     **** }
 4544              		.loc 15 913 26 view .LVU1306
 4545              	.LBE649:
 4546              	.LBE647:
 923:Blink.cpp     ****     uartInt(errorFlag);//error if tried to select more than 3 effects
 4547              		.loc 15 923 5 is_stmt 1 view .LVU1307
 923:Blink.cpp     ****     uartInt(errorFlag);//error if tried to select more than 3 effects
 4548              		.loc 15 923 12 is_stmt 0 view .LVU1308
 4549 00d0 1749     		ldr	r1, .L289+36
 4550              	.LBB650:
 4551              	.LBB651:
 913:Blink.cpp     **** }
 4552              		.loc 15 913 26 view .LVU1309
 4553 00d2 4FF47A73 		mov	r3, #1000
 4554 00d6 0122     		movs	r2, #1
 4555 00d8 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4556 00da 2046     		mov	r0, r4
 4557 00dc 8DF80710 		strb	r1, [sp, #7]
 4558              	.LVL258:
 913:Blink.cpp     **** }
 4559              		.loc 15 913 26 view .LVU1310
 4560              	.LBE651:
 4561              	.LBI650:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4562              		.loc 15 912 6 is_stmt 1 view .LVU1311
 4563              	.LBB652:
 913:Blink.cpp     **** }
 4564              		.loc 15 913 5 view .LVU1312
 913:Blink.cpp     **** }
 4565              		.loc 15 913 26 is_stmt 0 view .LVU1313
 4566 00e0 0DF10701 		add	r1, sp, #7
 4567              	.LVL259:
 913:Blink.cpp     **** }
 4568              		.loc 15 913 26 view .LVU1314
 4569 00e4 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4570              	.LVL260:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 143


 913:Blink.cpp     **** }
 4571              		.loc 15 913 26 view .LVU1315
 4572              	.LBE652:
 4573              	.LBE650:
 4574              		.loc 15 924 5 is_stmt 1 view .LVU1316
 4575 00e8 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4576              	.LBB653:
 4577              	.LBB654:
 913:Blink.cpp     **** }
 4578              		.loc 15 913 26 is_stmt 0 view .LVU1317
 4579 00ea 4FF47A73 		mov	r3, #1000
 4580 00ee 0DF10701 		add	r1, sp, #7
 4581 00f2 8DF80720 		strb	r2, [sp, #7]
 4582              	.LVL261:
 913:Blink.cpp     **** }
 4583              		.loc 15 913 26 view .LVU1318
 4584              	.LBE654:
 4585              	.LBI653:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4586              		.loc 15 912 6 is_stmt 1 view .LVU1319
 4587              	.LBB655:
 913:Blink.cpp     **** }
 4588              		.loc 15 913 5 view .LVU1320
 913:Blink.cpp     **** }
 4589              		.loc 15 913 26 is_stmt 0 view .LVU1321
 4590 00f6 2046     		mov	r0, r4
 4591 00f8 0122     		movs	r2, #1
 4592              	.LVL262:
 913:Blink.cpp     **** }
 4593              		.loc 15 913 26 view .LVU1322
 4594 00fa FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4595              	.LVL263:
 913:Blink.cpp     **** }
 4596              		.loc 15 913 26 view .LVU1323
 4597              	.LBE655:
 4598              	.LBE653:
 925:Blink.cpp     ****     
 926:Blink.cpp     ****     errorFlag = 0;
 4599              		.loc 15 926 5 is_stmt 1 view .LVU1324
 4600              		.loc 15 926 15 is_stmt 0 view .LVU1325
 4601 00fe 0023     		movs	r3, #0
 4602 0100 2B70     		strb	r3, [r5]
 927:Blink.cpp     **** }
 4603              		.loc 15 927 1 view .LVU1326
 4604 0102 03B0     		add	sp, sp, #12
 4605              		.cfi_def_cfa_offset 20
 4606              		@ sp needed
 4607 0104 BDEC028B 		vldm	sp!, {d8}
 4608              		.cfi_restore 80
 4609              		.cfi_restore 81
 4610              		.cfi_def_cfa_offset 12
 4611 0108 30BD     		pop	{r4, r5, pc}
 4612              	.L290:
 4613 010a 00BF     		.align	2
 4614              	.L289:
 4615 010c 00000000 		.word	.LANCHOR70
 4616 0110 00000000 		.word	.LANCHOR69
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 144


 4617 0114 00000000 		.word	.LANCHOR72
 4618 0118 0000C842 		.word	1120403456
 4619 011c 00000000 		.word	.LANCHOR35
 4620 0120 00000000 		.word	.LANCHOR66
 4621 0124 00000000 		.word	.LANCHOR67
 4622 0128 00000000 		.word	.LANCHOR68
 4623 012c 00000000 		.word	.LANCHOR5
 4624 0130 00000000 		.word	.LANCHOR71
 4625              		.cfi_endproc
 4626              	.LFE4910:
 4628              		.section	.text._Z13transmitData2v,"ax",%progbits
 4629              		.align	1
 4630              		.p2align 2,,3
 4631              		.global	_Z13transmitData2v
 4632              		.syntax unified
 4633              		.thumb
 4634              		.thumb_func
 4635              		.fpu fpv5-d16
 4637              	_Z13transmitData2v:
 4638              	.LFB4911:
 928:Blink.cpp     **** //sends effect and parameter data
 929:Blink.cpp     **** void transmitData2(){
 4639              		.loc 15 929 21 is_stmt 1 view -0
 4640              		.cfi_startproc
 4641              		@ args = 0, pretend = 0, frame = 8
 4642              		@ frame_needed = 0, uses_anonymous_args = 0
 930:Blink.cpp     ****     uartInt(start2);
 4643              		.loc 15 930 5 view .LVU1328
 4644              		.loc 15 930 12 is_stmt 0 view .LVU1329
 4645 0000 6649     		ldr	r1, .L301
 4646              	.LBB656:
 4647              	.LBB657:
 913:Blink.cpp     **** }
 4648              		.loc 15 913 26 view .LVU1330
 4649 0002 4FF47A73 		mov	r3, #1000
 4650 0006 0122     		movs	r2, #1
 4651              	.LBE657:
 4652              	.LBE656:
 929:Blink.cpp     ****     uartInt(start2);
 4653              		.loc 15 929 21 view .LVU1331
 4654 0008 70B5     		push	{r4, r5, r6, lr}
 4655              		.cfi_def_cfa_offset 16
 4656              		.cfi_offset 4, -16
 4657              		.cfi_offset 5, -12
 4658              		.cfi_offset 6, -8
 4659              		.cfi_offset 14, -4
 4660 000a 2DED028B 		vpush.64	{d8}
 4661              		.cfi_def_cfa_offset 24
 4662              		.cfi_offset 80, -24
 4663              		.cfi_offset 81, -20
 4664 000e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 4665 0010 82B0     		sub	sp, sp, #8
 4666              		.cfi_def_cfa_offset 32
 931:Blink.cpp     ****     switch (profile)
 4667              		.loc 15 931 13 view .LVU1332
 4668 0012 634D     		ldr	r5, .L301+4
 4669 0014 8DF80700 		strb	r0, [sp, #7]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 145


 4670              	.LVL264:
 4671              	.LBB659:
 4672              	.LBI656:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4673              		.loc 15 912 6 is_stmt 1 view .LVU1333
 4674              	.LBB658:
 913:Blink.cpp     **** }
 4675              		.loc 15 913 5 view .LVU1334
 913:Blink.cpp     **** }
 4676              		.loc 15 913 26 is_stmt 0 view .LVU1335
 4677 0018 0DF10701 		add	r1, sp, #7
 4678 001c 6148     		ldr	r0, .L301+8
 4679              	.LVL265:
 913:Blink.cpp     **** }
 4680              		.loc 15 913 26 view .LVU1336
 4681 001e FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4682              	.LVL266:
 913:Blink.cpp     **** }
 4683              		.loc 15 913 26 view .LVU1337
 4684              	.LBE658:
 4685              	.LBE659:
 4686              		.loc 15 931 5 is_stmt 1 view .LVU1338
 4687              		.loc 15 931 13 is_stmt 0 view .LVU1339
 4688 0022 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 4689              		.loc 15 931 5 view .LVU1340
 4690 0024 012C     		cmp	r4, #1
 4691 0026 76D0     		beq	.L292
 4692 0028 022C     		cmp	r4, #2
 4693 002a 00F0B480 		beq	.L293
 4694 002e 002C     		cmp	r4, #0
 4695 0030 00F09580 		beq	.L300
 4696              	.L294:
 932:Blink.cpp     ****     {
 933:Blink.cpp     ****     case 0:
 934:Blink.cpp     ****         uartInt(profile1[0]);
 935:Blink.cpp     ****         uartInt(profile1[1]);
 936:Blink.cpp     ****         uartInt(profile1[2]);
 937:Blink.cpp     ****         break;
 938:Blink.cpp     ****     case 1:
 939:Blink.cpp     ****         uartInt(profile2[0]);
 940:Blink.cpp     ****         uartInt(profile2[1]);
 941:Blink.cpp     ****         uartInt(profile2[2]);
 942:Blink.cpp     ****         break;
 943:Blink.cpp     ****     case 2:
 944:Blink.cpp     ****         uartInt(profile3[0]);
 945:Blink.cpp     ****         uartInt(profile3[1]);
 946:Blink.cpp     ****         uartInt(profile3[2]);
 947:Blink.cpp     ****         break;
 948:Blink.cpp     ****     }
 949:Blink.cpp     **** 
 950:Blink.cpp     ****     if(contains(profile)){
 4697              		.loc 15 950 5 is_stmt 1 view .LVU1341
 4698              		.loc 15 950 16 is_stmt 0 view .LVU1342
 4699 0034 2046     		mov	r0, r4
 4700 0036 FFF7FEFF 		bl	_Z8containsh
 4701              	.LVL267:
 4702              		.loc 15 950 5 view .LVU1343
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 146


 4703 003a 0028     		cmp	r0, #0
 4704 003c 4BD0     		beq	.L295
 951:Blink.cpp     ****             uartInt((uint8_t)(getEffectParams(0)*100)+1);//current param value
 4705              		.loc 15 951 13 is_stmt 1 view .LVU1344
 4706              		.loc 15 951 49 is_stmt 0 view .LVU1345
 4707 003e 9FED5A8A 		vldr.32	s16, .L301+12
 4708              		.loc 15 951 46 view .LVU1346
 4709 0042 0020     		movs	r0, #0
 4710 0044 FFF7FEFF 		bl	_Z15getEffectParamsh
 4711              	.LVL268:
 4712              	.LBB660:
 4713              	.LBB661:
 913:Blink.cpp     **** }
 4714              		.loc 15 913 26 view .LVU1347
 4715 0048 0122     		movs	r2, #1
 4716              	.LBE661:
 4717              	.LBE660:
 4718              		.loc 15 951 49 view .LVU1348
 4719 004a 20EE080A 		vmul.f32	s0, s0, s16
 4720              	.LBB664:
 4721              	.LBB662:
 913:Blink.cpp     **** }
 4722              		.loc 15 913 26 view .LVU1349
 4723 004e 4FF47A73 		mov	r3, #1000
 4724 0052 0DF10701 		add	r1, sp, #7
 4725 0056 5348     		ldr	r0, .L301+8
 4726              	.LBE662:
 4727              	.LBE664:
 4728              		.loc 15 951 21 view .LVU1350
 4729 0058 BCEEC00A 		vcvt.u32.f32	s0, s0
 4730              		.loc 15 951 20 view .LVU1351
 4731 005c 10EE104A 		vmov	r4, s0	@ int
 4732 0060 1444     		add	r4, r4, r2
 4733 0062 8DF80740 		strb	r4, [sp, #7]
 4734              	.LVL269:
 4735              	.LBB665:
 4736              	.LBI660:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4737              		.loc 15 912 6 is_stmt 1 view .LVU1352
 4738              	.LBB663:
 913:Blink.cpp     **** }
 4739              		.loc 15 913 5 view .LVU1353
 913:Blink.cpp     **** }
 4740              		.loc 15 913 26 is_stmt 0 view .LVU1354
 4741 0066 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4742              	.LVL270:
 913:Blink.cpp     **** }
 4743              		.loc 15 913 26 view .LVU1355
 4744              	.LBE663:
 4745              	.LBE665:
 952:Blink.cpp     ****             uartInt((uint8_t)(getEffectParams(1)*100)+1);//current param value
 4746              		.loc 15 952 13 is_stmt 1 view .LVU1356
 4747              		.loc 15 952 46 is_stmt 0 view .LVU1357
 4748 006a 0120     		movs	r0, #1
 4749              	.LBB666:
 4750              	.LBB667:
 913:Blink.cpp     **** }
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 147


 4751              		.loc 15 913 26 view .LVU1358
 4752 006c 0DF10701 		add	r1, sp, #7
 4753              	.LBE667:
 4754              	.LBE666:
 4755              		.loc 15 952 46 view .LVU1359
 4756 0070 FFF7FEFF 		bl	_Z15getEffectParamsh
 4757              	.LVL271:
 4758              		.loc 15 952 49 view .LVU1360
 4759 0074 20EE080A 		vmul.f32	s0, s0, s16
 4760              	.LBB670:
 4761              	.LBB668:
 913:Blink.cpp     **** }
 4762              		.loc 15 913 26 view .LVU1361
 4763 0078 0246     		mov	r2, r0
 4764 007a 4FF47A73 		mov	r3, #1000
 4765              	.LBE668:
 4766              	.LBE670:
 4767              		.loc 15 952 21 view .LVU1362
 4768 007e BCEEC00A 		vcvt.u32.f32	s0, s0
 4769              		.loc 15 952 20 view .LVU1363
 4770 0082 10EE100A 		vmov	r0, s0	@ int
 4771 0086 1044     		add	r0, r0, r2
 4772 0088 8DF80700 		strb	r0, [sp, #7]
 4773              	.LVL272:
 4774              	.LBB671:
 4775              	.LBI666:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4776              		.loc 15 912 6 is_stmt 1 view .LVU1364
 4777              	.LBB669:
 913:Blink.cpp     **** }
 4778              		.loc 15 913 5 view .LVU1365
 913:Blink.cpp     **** }
 4779              		.loc 15 913 26 is_stmt 0 view .LVU1366
 4780 008c 4548     		ldr	r0, .L301+8
 4781              	.LVL273:
 913:Blink.cpp     **** }
 4782              		.loc 15 913 26 view .LVU1367
 4783 008e FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4784              	.LVL274:
 913:Blink.cpp     **** }
 4785              		.loc 15 913 26 view .LVU1368
 4786              	.LBE669:
 4787              	.LBE671:
 953:Blink.cpp     ****             uartInt((uint8_t)(getEffectParams(2)*100)+1);//current param value
 4788              		.loc 15 953 13 is_stmt 1 view .LVU1369
 4789              		.loc 15 953 46 is_stmt 0 view .LVU1370
 4790 0092 0220     		movs	r0, #2
 4791 0094 FFF7FEFF 		bl	_Z15getEffectParamsh
 4792              	.LVL275:
 4793              		.loc 15 953 49 view .LVU1371
 4794 0098 20EE080A 		vmul.f32	s0, s0, s16
 4795              	.LBB672:
 4796              	.LBB673:
 913:Blink.cpp     **** }
 4797              		.loc 15 913 26 view .LVU1372
 4798 009c 0122     		movs	r2, #1
 4799 009e 4FF47A73 		mov	r3, #1000
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 148


 4800 00a2 0DF10701 		add	r1, sp, #7
 4801 00a6 3F48     		ldr	r0, .L301+8
 4802              	.LBE673:
 4803              	.LBE672:
 4804              		.loc 15 953 21 view .LVU1373
 4805 00a8 BCEEC00A 		vcvt.u32.f32	s0, s0
 4806              		.loc 15 953 20 view .LVU1374
 4807 00ac 10EE104A 		vmov	r4, s0	@ int
 4808 00b0 1444     		add	r4, r4, r2
 4809 00b2 8DF80740 		strb	r4, [sp, #7]
 4810              	.LVL276:
 4811              	.LBB675:
 4812              	.LBI672:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4813              		.loc 15 912 6 is_stmt 1 view .LVU1375
 4814              	.LBB674:
 913:Blink.cpp     **** }
 4815              		.loc 15 913 5 view .LVU1376
 913:Blink.cpp     **** }
 4816              		.loc 15 913 26 is_stmt 0 view .LVU1377
 4817 00b6 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4818              	.LVL277:
 4819              	.L296:
 913:Blink.cpp     **** }
 4820              		.loc 15 913 26 view .LVU1378
 4821              	.LBE674:
 4822              	.LBE675:
 954:Blink.cpp     ****         } else {
 955:Blink.cpp     ****             uartInt(1);//dummy
 956:Blink.cpp     ****             uartInt(1);
 957:Blink.cpp     ****             uartInt(1);
 958:Blink.cpp     ****         }
 959:Blink.cpp     ****         uartInt(1);//dummy
 4823              		.loc 15 959 9 is_stmt 1 view .LVU1379
 4824 00ba 0122     		movs	r2, #1
 4825              	.LBB676:
 4826              	.LBB677:
 913:Blink.cpp     **** }
 4827              		.loc 15 913 26 is_stmt 0 view .LVU1380
 4828 00bc 4FF47A73 		mov	r3, #1000
 4829 00c0 0DF10701 		add	r1, sp, #7
 4830 00c4 3748     		ldr	r0, .L301+8
 4831 00c6 8DF80720 		strb	r2, [sp, #7]
 4832              	.LVL278:
 913:Blink.cpp     **** }
 4833              		.loc 15 913 26 view .LVU1381
 4834              	.LBE677:
 4835              	.LBI676:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4836              		.loc 15 912 6 is_stmt 1 view .LVU1382
 4837              	.LBB678:
 913:Blink.cpp     **** }
 4838              		.loc 15 913 5 view .LVU1383
 913:Blink.cpp     **** }
 4839              		.loc 15 913 26 is_stmt 0 view .LVU1384
 4840 00ca FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4841              	.LVL279:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 149


 913:Blink.cpp     **** }
 4842              		.loc 15 913 26 view .LVU1385
 4843              	.LBE678:
 4844              	.LBE676:
 960:Blink.cpp     **** }
 4845              		.loc 15 960 1 view .LVU1386
 4846 00ce 02B0     		add	sp, sp, #8
 4847              		.cfi_remember_state
 4848              		.cfi_def_cfa_offset 24
 4849              		@ sp needed
 4850 00d0 BDEC028B 		vldm	sp!, {d8}
 4851              		.cfi_restore 80
 4852              		.cfi_restore 81
 4853              		.cfi_def_cfa_offset 16
 4854 00d4 70BD     		pop	{r4, r5, r6, pc}
 4855              	.L295:
 4856              		.cfi_restore_state
 955:Blink.cpp     ****             uartInt(1);
 4857              		.loc 15 955 13 is_stmt 1 view .LVU1387
 4858 00d6 0124     		movs	r4, #1
 4859              	.LBB679:
 4860              	.LBB680:
 913:Blink.cpp     **** }
 4861              		.loc 15 913 26 is_stmt 0 view .LVU1388
 4862 00d8 0DF10701 		add	r1, sp, #7
 4863 00dc 4FF47A73 		mov	r3, #1000
 4864 00e0 3048     		ldr	r0, .L301+8
 4865 00e2 2246     		mov	r2, r4
 4866 00e4 8DF80740 		strb	r4, [sp, #7]
 4867              	.LVL280:
 913:Blink.cpp     **** }
 4868              		.loc 15 913 26 view .LVU1389
 4869              	.LBE680:
 4870              	.LBI679:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4871              		.loc 15 912 6 is_stmt 1 view .LVU1390
 4872              	.LBB681:
 913:Blink.cpp     **** }
 4873              		.loc 15 913 5 view .LVU1391
 913:Blink.cpp     **** }
 4874              		.loc 15 913 26 is_stmt 0 view .LVU1392
 4875 00e8 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4876              	.LVL281:
 913:Blink.cpp     **** }
 4877              		.loc 15 913 26 view .LVU1393
 4878              	.LBE681:
 4879              	.LBE679:
 956:Blink.cpp     ****             uartInt(1);
 4880              		.loc 15 956 13 is_stmt 1 view .LVU1394
 4881              	.LBB682:
 4882              	.LBB683:
 913:Blink.cpp     **** }
 4883              		.loc 15 913 26 is_stmt 0 view .LVU1395
 4884 00ec 2246     		mov	r2, r4
 4885 00ee 0DF10701 		add	r1, sp, #7
 4886 00f2 4FF47A73 		mov	r3, #1000
 4887 00f6 2B48     		ldr	r0, .L301+8
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 150


 4888 00f8 8DF80740 		strb	r4, [sp, #7]
 4889              	.LVL282:
 913:Blink.cpp     **** }
 4890              		.loc 15 913 26 view .LVU1396
 4891              	.LBE683:
 4892              	.LBI682:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4893              		.loc 15 912 6 is_stmt 1 view .LVU1397
 4894              	.LBB684:
 913:Blink.cpp     **** }
 4895              		.loc 15 913 5 view .LVU1398
 913:Blink.cpp     **** }
 4896              		.loc 15 913 26 is_stmt 0 view .LVU1399
 4897 00fc FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4898              	.LVL283:
 913:Blink.cpp     **** }
 4899              		.loc 15 913 26 view .LVU1400
 4900              	.LBE684:
 4901              	.LBE682:
 957:Blink.cpp     ****         }
 4902              		.loc 15 957 13 is_stmt 1 view .LVU1401
 4903              	.LBB685:
 4904              	.LBB686:
 913:Blink.cpp     **** }
 4905              		.loc 15 913 26 is_stmt 0 view .LVU1402
 4906 0100 4FF47A73 		mov	r3, #1000
 4907 0104 2246     		mov	r2, r4
 4908 0106 0DF10701 		add	r1, sp, #7
 4909 010a 2648     		ldr	r0, .L301+8
 4910 010c 8DF80740 		strb	r4, [sp, #7]
 4911              	.LVL284:
 913:Blink.cpp     **** }
 4912              		.loc 15 913 26 view .LVU1403
 4913              	.LBE686:
 4914              	.LBI685:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4915              		.loc 15 912 6 is_stmt 1 view .LVU1404
 4916              	.LBB687:
 913:Blink.cpp     **** }
 4917              		.loc 15 913 5 view .LVU1405
 913:Blink.cpp     **** }
 4918              		.loc 15 913 26 is_stmt 0 view .LVU1406
 4919 0110 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4920              	.LVL285:
 913:Blink.cpp     **** }
 4921              		.loc 15 913 26 view .LVU1407
 4922 0114 D1E7     		b	.L296
 4923              	.L292:
 4924              	.LBE687:
 4925              	.LBE685:
 938:Blink.cpp     ****         uartInt(profile2[0]);
 4926              		.loc 15 938 5 is_stmt 1 view .LVU1408
 939:Blink.cpp     ****         uartInt(profile2[1]);
 4927              		.loc 15 939 9 view .LVU1409
 939:Blink.cpp     ****         uartInt(profile2[1]);
 4928              		.loc 15 939 16 is_stmt 0 view .LVU1410
 4929 0116 254E     		ldr	r6, .L301+16
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 151


 4930              	.LBB688:
 4931              	.LBB689:
 913:Blink.cpp     **** }
 4932              		.loc 15 913 26 view .LVU1411
 4933 0118 2246     		mov	r2, r4
 4934 011a 0DF10701 		add	r1, sp, #7
 4935 011e 2148     		ldr	r0, .L301+8
 4936 0120 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 4937 0122 8DF80730 		strb	r3, [sp, #7]
 4938              	.LVL286:
 913:Blink.cpp     **** }
 4939              		.loc 15 913 26 view .LVU1412
 4940              	.LBE689:
 4941              	.LBI688:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4942              		.loc 15 912 6 is_stmt 1 view .LVU1413
 4943              	.LBB690:
 913:Blink.cpp     **** }
 4944              		.loc 15 913 5 view .LVU1414
 913:Blink.cpp     **** }
 4945              		.loc 15 913 26 is_stmt 0 view .LVU1415
 4946 0126 4FF47A73 		mov	r3, #1000
 4947              	.LVL287:
 913:Blink.cpp     **** }
 4948              		.loc 15 913 26 view .LVU1416
 4949 012a FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4950              	.LVL288:
 913:Blink.cpp     **** }
 4951              		.loc 15 913 26 view .LVU1417
 4952              	.LBE690:
 4953              	.LBE688:
 940:Blink.cpp     ****         uartInt(profile2[2]);
 4954              		.loc 15 940 9 is_stmt 1 view .LVU1418
 4955 012e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 4956              	.LBB691:
 4957              	.LBB692:
 913:Blink.cpp     **** }
 4958              		.loc 15 913 26 is_stmt 0 view .LVU1419
 4959 0130 2246     		mov	r2, r4
 4960 0132 0DF10701 		add	r1, sp, #7
 4961 0136 8DF80730 		strb	r3, [sp, #7]
 4962              	.LVL289:
 913:Blink.cpp     **** }
 4963              		.loc 15 913 26 view .LVU1420
 4964              	.LBE692:
 4965              	.LBI691:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4966              		.loc 15 912 6 is_stmt 1 view .LVU1421
 4967              	.LBB693:
 913:Blink.cpp     **** }
 4968              		.loc 15 913 5 view .LVU1422
 913:Blink.cpp     **** }
 4969              		.loc 15 913 26 is_stmt 0 view .LVU1423
 4970 013a 4FF47A73 		mov	r3, #1000
 4971              	.LVL290:
 913:Blink.cpp     **** }
 4972              		.loc 15 913 26 view .LVU1424
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 152


 4973 013e 1948     		ldr	r0, .L301+8
 4974 0140 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 4975              	.LVL291:
 913:Blink.cpp     **** }
 4976              		.loc 15 913 26 view .LVU1425
 4977              	.LBE693:
 4978              	.LBE691:
 941:Blink.cpp     ****         break;
 4979              		.loc 15 941 9 is_stmt 1 view .LVU1426
 4980 0144 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 4981              	.LBB694:
 4982              	.LBB695:
 913:Blink.cpp     **** }
 4983              		.loc 15 913 26 is_stmt 0 view .LVU1427
 4984 0146 2246     		mov	r2, r4
 4985 0148 4FF47A73 		mov	r3, #1000
 4986              	.L299:
 4987 014c 8DF80710 		strb	r1, [sp, #7]
 4988              	.LVL292:
 913:Blink.cpp     **** }
 4989              		.loc 15 913 26 view .LVU1428
 4990              	.LBE695:
 4991              	.LBE694:
 4992              	.LBB696:
 4993              	.LBI696:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 4994              		.loc 15 912 6 is_stmt 1 view .LVU1429
 4995              	.LBB697:
 913:Blink.cpp     **** }
 4996              		.loc 15 913 5 view .LVU1430
 913:Blink.cpp     **** }
 4997              		.loc 15 913 26 is_stmt 0 view .LVU1431
 4998 0150 0DF10701 		add	r1, sp, #7
 4999              	.LVL293:
 913:Blink.cpp     **** }
 5000              		.loc 15 913 26 view .LVU1432
 5001 0154 1348     		ldr	r0, .L301+8
 5002 0156 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 5003              	.LVL294:
 913:Blink.cpp     **** }
 5004              		.loc 15 913 26 view .LVU1433
 5005              	.LBE697:
 5006              	.LBE696:
 947:Blink.cpp     ****     }
 5007              		.loc 15 947 9 is_stmt 1 view .LVU1434
 950:Blink.cpp     ****             uartInt((uint8_t)(getEffectParams(0)*100)+1);//current param value
 5008              		.loc 15 950 16 is_stmt 0 view .LVU1435
 5009 015a 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 947:Blink.cpp     ****     }
 5010              		.loc 15 947 9 view .LVU1436
 5011 015c 6AE7     		b	.L294
 5012              	.L300:
 933:Blink.cpp     ****         uartInt(profile1[0]);
 5013              		.loc 15 933 5 is_stmt 1 view .LVU1437
 934:Blink.cpp     ****         uartInt(profile1[1]);
 5014              		.loc 15 934 9 view .LVU1438
 934:Blink.cpp     ****         uartInt(profile1[1]);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 153


 5015              		.loc 15 934 16 is_stmt 0 view .LVU1439
 5016 015e 144C     		ldr	r4, .L301+20
 5017              	.L298:
 5018 0160 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5019              	.LBB699:
 5020              	.LBB700:
 913:Blink.cpp     **** }
 5021              		.loc 15 913 26 view .LVU1440
 5022 0162 4FF47A73 		mov	r3, #1000
 5023 0166 0122     		movs	r2, #1
 5024 0168 0E48     		ldr	r0, .L301+8
 5025 016a 8DF80710 		strb	r1, [sp, #7]
 5026              	.LVL295:
 913:Blink.cpp     **** }
 5027              		.loc 15 913 26 view .LVU1441
 5028              	.LBE700:
 5029              	.LBI699:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 5030              		.loc 15 912 6 is_stmt 1 view .LVU1442
 5031              	.LBB701:
 913:Blink.cpp     **** }
 5032              		.loc 15 913 5 view .LVU1443
 913:Blink.cpp     **** }
 5033              		.loc 15 913 26 is_stmt 0 view .LVU1444
 5034 016e 0DF10701 		add	r1, sp, #7
 5035              	.LVL296:
 913:Blink.cpp     **** }
 5036              		.loc 15 913 26 view .LVU1445
 5037 0172 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 5038              	.LVL297:
 913:Blink.cpp     **** }
 5039              		.loc 15 913 26 view .LVU1446
 5040              	.LBE701:
 5041              	.LBE699:
 945:Blink.cpp     ****         uartInt(profile3[2]);
 5042              		.loc 15 945 9 is_stmt 1 view .LVU1447
 5043 0176 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 5044              	.LBB702:
 5045              	.LBB703:
 913:Blink.cpp     **** }
 5046              		.loc 15 913 26 is_stmt 0 view .LVU1448
 5047 0178 4FF47A73 		mov	r3, #1000
 5048 017c 0DF10701 		add	r1, sp, #7
 5049 0180 8DF80720 		strb	r2, [sp, #7]
 5050              	.LVL298:
 913:Blink.cpp     **** }
 5051              		.loc 15 913 26 view .LVU1449
 5052              	.LBE703:
 5053              	.LBI702:
 912:Blink.cpp     ****     uart.BlockingTransmit(&var, 1, 1000);
 5054              		.loc 15 912 6 is_stmt 1 view .LVU1450
 5055              	.LBB704:
 913:Blink.cpp     **** }
 5056              		.loc 15 913 5 view .LVU1451
 913:Blink.cpp     **** }
 5057              		.loc 15 913 26 is_stmt 0 view .LVU1452
 5058 0184 0122     		movs	r2, #1
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 154


 5059              	.LVL299:
 913:Blink.cpp     **** }
 5060              		.loc 15 913 26 view .LVU1453
 5061 0186 0748     		ldr	r0, .L301+8
 5062 0188 FFF7FEFF 		bl	_ZN5daisy11UartHandler16BlockingTransmitEPhjm
 5063              	.LVL300:
 913:Blink.cpp     **** }
 5064              		.loc 15 913 26 view .LVU1454
 5065              	.LBE704:
 5066              	.LBE702:
 946:Blink.cpp     ****         break;
 5067              		.loc 15 946 9 is_stmt 1 view .LVU1455
 5068 018c A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 5069              	.LBB705:
 5070              	.LBB698:
 913:Blink.cpp     **** }
 5071              		.loc 15 913 26 is_stmt 0 view .LVU1456
 5072 018e 4FF47A73 		mov	r3, #1000
 5073 0192 0122     		movs	r2, #1
 5074 0194 DAE7     		b	.L299
 5075              	.L293:
 5076              	.LBE698:
 5077              	.LBE705:
 943:Blink.cpp     ****         uartInt(profile3[0]);
 5078              		.loc 15 943 5 is_stmt 1 view .LVU1457
 944:Blink.cpp     ****         uartInt(profile3[1]);
 5079              		.loc 15 944 9 view .LVU1458
 944:Blink.cpp     ****         uartInt(profile3[1]);
 5080              		.loc 15 944 16 is_stmt 0 view .LVU1459
 5081 0196 074C     		ldr	r4, .L301+24
 5082 0198 E2E7     		b	.L298
 5083              	.L302:
 5084 019a 00BF     		.align	2
 5085              	.L301:
 5086 019c 00000000 		.word	.LANCHOR73
 5087 01a0 00000000 		.word	.LANCHOR5
 5088 01a4 00000000 		.word	.LANCHOR69
 5089 01a8 0000C842 		.word	1120403456
 5090 01ac 00000000 		.word	.LANCHOR32
 5091 01b0 00000000 		.word	.LANCHOR30
 5092 01b4 00000000 		.word	.LANCHOR34
 5093              		.cfi_endproc
 5094              	.LFE4911:
 5096              		.section	.text._Z11encProfile1v,"ax",%progbits
 5097              		.align	1
 5098              		.p2align 2,,3
 5099              		.global	_Z11encProfile1v
 5100              		.syntax unified
 5101              		.thumb
 5102              		.thumb_func
 5103              		.fpu fpv5-d16
 5105              	_Z11encProfile1v:
 5106              	.LFB4904:
 658:Blink.cpp     ****     if((p1Size < 3) && !contains(profile)){
 5107              		.loc 15 658 19 is_stmt 1 view -0
 5108              		.cfi_startproc
 5109              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 155


 5110              		@ frame_needed = 0, uses_anonymous_args = 0
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5111              		.loc 15 659 5 view .LVU1461
 658:Blink.cpp     ****     if((p1Size < 3) && !contains(profile)){
 5112              		.loc 15 658 19 is_stmt 0 view .LVU1462
 5113 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5114              		.cfi_def_cfa_offset 24
 5115              		.cfi_offset 3, -24
 5116              		.cfi_offset 4, -20
 5117              		.cfi_offset 5, -16
 5118              		.cfi_offset 6, -12
 5119              		.cfi_offset 7, -8
 5120              		.cfi_offset 14, -4
 5121              	.LBB706:
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5122              		.loc 15 659 16 view .LVU1463
 5123 0002 424E     		ldr	r6, .L329
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5124              		.loc 15 659 33 view .LVU1464
 5125 0004 424B     		ldr	r3, .L329+4
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5126              		.loc 15 659 16 view .LVU1465
 5127 0006 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5128              		.loc 15 659 21 view .LVU1466
 5129 0008 022C     		cmp	r4, #2
 5130              	.LBE706:
 658:Blink.cpp     ****     if((p1Size < 3) && !contains(profile)){
 5131              		.loc 15 658 19 view .LVU1467
 5132 000a 2DED048B 		vpush.64	{d8, d9}
 5133              		.cfi_def_cfa_offset 40
 5134              		.cfi_offset 80, -40
 5135              		.cfi_offset 81, -36
 5136              		.cfi_offset 82, -32
 5137              		.cfi_offset 83, -28
 5138              	.LBB745:
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5139              		.loc 15 659 33 view .LVU1468
 5140 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5141              		.loc 15 659 21 view .LVU1469
 5142 0010 55D8     		bhi	.L304
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5143              		.loc 15 659 33 discriminator 1 view .LVU1470
 5144 0012 FFF7FEFF 		bl	_Z8containsh
 5145              	.LVL301:
 659:Blink.cpp     ****             profile1[p1Size] = effectCount;
 5146              		.loc 15 659 21 discriminator 1 view .LVU1471
 5147 0016 88B3     		cbz	r0, .L326
 5148              	.L305:
 5149              	.LBB707:
 5150              	.LBB708:
 687:Blink.cpp     ****             float a,b,c;
 5151              		.loc 15 687 13 is_stmt 1 view .LVU1472
 5152              	.LVL302:
 688:Blink.cpp     ****             a = getEffectParams(0);
 5153              		.loc 15 688 13 view .LVU1473
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 156


 689:Blink.cpp     ****             b = getEffectParams(1);
 5154              		.loc 15 689 13 view .LVU1474
 689:Blink.cpp     ****             b = getEffectParams(1);
 5155              		.loc 15 689 32 is_stmt 0 view .LVU1475
 5156 0018 0020     		movs	r0, #0
 5157 001a 3E4D     		ldr	r5, .L329+8
 5158 001c FFF7FEFF 		bl	_Z15getEffectParamsh
 5159              	.LVL303:
 690:Blink.cpp     ****             c = getEffectParams(2);
 5160              		.loc 15 690 32 view .LVU1476
 5161 0020 0120     		movs	r0, #1
 689:Blink.cpp     ****             b = getEffectParams(1);
 5162              		.loc 15 689 32 view .LVU1477
 5163 0022 B0EE409A 		vmov.f32	s18, s0
 5164              	.LVL304:
 690:Blink.cpp     ****             c = getEffectParams(2);
 5165              		.loc 15 690 13 is_stmt 1 view .LVU1478
 690:Blink.cpp     ****             c = getEffectParams(2);
 5166              		.loc 15 690 32 is_stmt 0 view .LVU1479
 5167 0026 FFF7FEFF 		bl	_Z15getEffectParamsh
 5168              	.LVL305:
 691:Blink.cpp     ****             while(y) {
 5169              		.loc 15 691 32 view .LVU1480
 5170 002a 0220     		movs	r0, #2
 690:Blink.cpp     ****             c = getEffectParams(2);
 5171              		.loc 15 690 32 view .LVU1481
 5172 002c F0EE408A 		vmov.f32	s17, s0
 5173              	.LVL306:
 691:Blink.cpp     ****             while(y) {
 5174              		.loc 15 691 13 is_stmt 1 view .LVU1482
 691:Blink.cpp     ****             while(y) {
 5175              		.loc 15 691 32 is_stmt 0 view .LVU1483
 5176 0030 FFF7FEFF 		bl	_Z15getEffectParamsh
 5177              	.LVL307:
 691:Blink.cpp     ****             while(y) {
 5178              		.loc 15 691 32 view .LVU1484
 5179 0034 B0EE408A 		vmov.f32	s16, s0
 5180              	.LVL308:
 691:Blink.cpp     ****             while(y) {
 5181              		.loc 15 691 32 view .LVU1485
 5182 0038 374C     		ldr	r4, .L329+12
 5183              	.LVL309:
 5184              	.L320:
 692:Blink.cpp     ****                 configuring = 1;
 5185              		.loc 15 692 13 is_stmt 1 view .LVU1486
 692:Blink.cpp     ****                 configuring = 1;
 5186              		.loc 15 692 13 view .LVU1487
 5187              	.LBB709:
 693:Blink.cpp     ****                 ReadPots();
 5188              		.loc 15 693 17 view .LVU1488
 693:Blink.cpp     ****                 ReadPots();
 5189              		.loc 15 693 29 is_stmt 0 view .LVU1489
 5190 003a 0123     		movs	r3, #1
 5191 003c 2B70     		strb	r3, [r5]
 694:Blink.cpp     ****                 transmitData();
 5192              		.loc 15 694 17 is_stmt 1 view .LVU1490
 694:Blink.cpp     ****                 transmitData();
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 157


 5193              		.loc 15 694 25 is_stmt 0 view .LVU1491
 5194 003e FFF7FEFF 		bl	_Z8ReadPotsv
 5195              	.LVL310:
 695:Blink.cpp     ****                 transmitData2();
 5196              		.loc 15 695 17 is_stmt 1 view .LVU1492
 695:Blink.cpp     ****                 transmitData2();
 5197              		.loc 15 695 29 is_stmt 0 view .LVU1493
 5198 0042 FFF7FEFF 		bl	_Z12transmitDatav
 5199              	.LVL311:
 696:Blink.cpp     ****                 //set new params for the effect here
 5200              		.loc 15 696 17 is_stmt 1 view .LVU1494
 696:Blink.cpp     ****                 //set new params for the effect here
 5201              		.loc 15 696 30 is_stmt 0 view .LVU1495
 5202 0046 FFF7FEFF 		bl	_Z13transmitData2v
 5203              	.LVL312:
 698:Blink.cpp     ****                 encoder.Debounce();
 5204              		.loc 15 698 17 is_stmt 1 view .LVU1496
 698:Blink.cpp     ****                 encoder.Debounce();
 5205              		.loc 15 698 31 is_stmt 0 view .LVU1497
 5206 004a FFF7FEFF 		bl	_Z14setEffectPramsv
 5207              	.LVL313:
 699:Blink.cpp     ****                 int inc = encoder.Increment();
 5208              		.loc 15 699 17 is_stmt 1 view .LVU1498
 699:Blink.cpp     ****                 int inc = encoder.Increment();
 5209              		.loc 15 699 33 is_stmt 0 view .LVU1499
 5210 004e 3248     		ldr	r0, .L329+12
 5211 0050 FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 5212              	.LVL314:
 700:Blink.cpp     ****                 if(inc > 0) {
 5213              		.loc 15 700 17 is_stmt 1 view .LVU1500
 5214              	.LBB710:
 5215              	.LBI710:
  22:../../libDaisy/src/hid/encoder.h **** 
  23:../../libDaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libDaisy/src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../../libDaisy/src/hid/encoder.h ****      */
  26:../../libDaisy/src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libDaisy/src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libDaisy/src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libDaisy/src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libDaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libDaisy/src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libDaisy/src/hid/encoder.h ****      */
  33:../../libDaisy/src/hid/encoder.h ****     void Debounce();
  34:../../libDaisy/src/hid/encoder.h **** 
  35:../../libDaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../../libDaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 5216              		.loc 1 36 20 view .LVU1501
 5217              	.LBB711:
 5218              		.loc 1 36 40 view .LVU1502
 5219              		.loc 1 36 40 is_stmt 0 view .LVU1503
 5220              	.LBE711:
 5221              	.LBE710:
 710:Blink.cpp     ****                     configuring = 0;
 5222              		.loc 15 710 24 is_stmt 1 view .LVU1504
 715:Blink.cpp     ****                     configuring = 0;
 5223              		.loc 15 715 24 view .LVU1505
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 158


 5224              	.LBB713:
 5225              	.LBI713:
  37:../../libDaisy/src/hid/encoder.h **** 
  38:../../libDaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../../libDaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 5226              		.loc 1 39 17 view .LVU1506
 5227              	.LBE713:
 5228              	.LBE709:
 5229              	.LBE708:
 5230              	.LBE707:
 5231              	.LBE745:
 5232              		.loc 1 39 38 view .LVU1507
 5233              	.LBB746:
 5234              	.LBB731:
 5235              	.LBB726:
 5236              	.LBB721:
 5237              	.LBB718:
 5238              	.LBB714:
 5239              	.LBI714:
  43:../../libDaisy/src/hid/switch.h **** 
  44:../../libDaisy/src/hid/switch.h ****     /** 
  45:../../libDaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy/src/hid/switch.h ****     */
  52:../../libDaisy/src/hid/switch.h ****     void
  53:../../libDaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy/src/hid/switch.h **** 
  55:../../libDaisy/src/hid/switch.h ****     /**
  56:../../libDaisy/src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy/src/hid/switch.h ****     */
  60:../../libDaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy/src/hid/switch.h **** 
  62:../../libDaisy/src/hid/switch.h ****     /** 
  63:../../libDaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy/src/hid/switch.h ****     */
  67:../../libDaisy/src/hid/switch.h ****     void Debounce();
  68:../../libDaisy/src/hid/switch.h **** 
  69:../../libDaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 5240              		.loc 2 70 17 view .LVU1508
 5241              	.LBB715:
 5242              		.loc 2 70 38 view .LVU1509
 5243              		.loc 2 70 38 is_stmt 0 view .LVU1510
 5244              	.LBE715:
 5245              	.LBE714:
 5246              	.LBE718:
 5247              	.LBB719:
 5248              	.LBB712:
  36:../../libDaisy/src/hid/encoder.h **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 159


 5249              		.loc 1 36 56 view .LVU1511
 5250 0054 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5251 0056 1BB1     		cbz	r3, .L310
 5252 0058 636A     		ldr	r3, [r4, #36]
 5253              	.LVL315:
  36:../../libDaisy/src/hid/encoder.h **** 
 5254              		.loc 1 36 56 view .LVU1512
 5255              	.LBE712:
 5256              	.LBE719:
 701:Blink.cpp     ****                     configuring = 0;
 5257              		.loc 15 701 17 is_stmt 1 view .LVU1513
 5258 005a 002B     		cmp	r3, #0
 5259 005c 3CDC     		bgt	.L327
 710:Blink.cpp     ****                     configuring = 0;
 5260              		.loc 15 710 24 is_stmt 0 view .LVU1514
 5261 005e 29D1     		bne	.L312
 5262              	.LVL316:
 5263              	.L310:
 5264              	.LBB720:
 5265              	.LBB717:
 5266              	.LBB716:
 5267              		.loc 2 70 54 view .LVU1515
 5268 0060 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 5269 0062 002B     		cmp	r3, #0
 5270 0064 E9D0     		beq	.L320
 5271              	.LBE716:
 5272              	.LBE717:
 5273              	.LBE720:
 715:Blink.cpp     ****                     configuring = 0;
 5274              		.loc 15 715 24 view .LVU1516
 5275 0066 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 5276 0068 7F2B     		cmp	r3, #127
 5277 006a E6D1     		bne	.L320
 716:Blink.cpp     ****                     removeEffect();
 5278              		.loc 15 716 21 is_stmt 1 view .LVU1517
 716:Blink.cpp     ****                     removeEffect();
 5279              		.loc 15 716 33 is_stmt 0 view .LVU1518
 5280 006c 0023     		movs	r3, #0
 5281              	.LBE721:
 5282              	.LBE726:
 5283              	.LBE731:
 5284              	.LBE746:
 729:Blink.cpp     **** 
 5285              		.loc 15 729 1 view .LVU1519
 5286 006e BDEC048B 		vldm	sp!, {d8-d9}
 5287              		.cfi_remember_state
 5288              		.cfi_restore 82
 5289              		.cfi_restore 83
 5290              		.cfi_restore 80
 5291              		.cfi_restore 81
 5292              		.cfi_def_cfa_offset 24
 5293              	.LVL317:
 5294              	.LBB747:
 5295              	.LBB732:
 5296              	.LBB727:
 5297              	.LBB722:
 716:Blink.cpp     ****                     removeEffect();
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 160


 5298              		.loc 15 716 33 view .LVU1520
 5299 0072 2B70     		strb	r3, [r5]
 717:Blink.cpp     ****                     return;
 5300              		.loc 15 717 21 is_stmt 1 view .LVU1521
 5301              	.LBE722:
 5302              	.LBE727:
 5303              	.LBE732:
 5304              	.LBE747:
 729:Blink.cpp     **** 
 5305              		.loc 15 729 1 is_stmt 0 view .LVU1522
 5306 0074 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5307              		.cfi_restore 14
 5308              		.cfi_restore 7
 5309              		.cfi_restore 6
 5310              		.cfi_restore 5
 5311              		.cfi_restore 4
 5312              		.cfi_restore 3
 5313              		.cfi_def_cfa_offset 0
 5314              	.LBB748:
 5315              	.LBB733:
 5316              	.LBB728:
 5317              	.LBB723:
 717:Blink.cpp     ****                     return;
 5318              		.loc 15 717 33 view .LVU1523
 5319 0078 FFF7FEBF 		b	_Z12removeEffectv
 5320              	.LVL318:
 5321              	.L326:
 5322              		.cfi_restore_state
 717:Blink.cpp     ****                     return;
 5323              		.loc 15 717 33 view .LVU1524
 5324              	.LBE723:
 5325              	.LBE728:
 5326              	.LBE733:
 5327              	.LBB734:
 660:Blink.cpp     ****             p1Size++;
 5328              		.loc 15 660 13 is_stmt 1 view .LVU1525
 660:Blink.cpp     ****             p1Size++;
 5329              		.loc 15 660 30 is_stmt 0 view .LVU1526
 5330 007c 274B     		ldr	r3, .L329+16
 661:Blink.cpp     ****             bool x = true;
 5331              		.loc 15 661 19 view .LVU1527
 5332 007e 621C     		adds	r2, r4, #1
 660:Blink.cpp     ****             p1Size++;
 5333              		.loc 15 660 30 view .LVU1528
 5334 0080 274F     		ldr	r7, .L329+20
 5335 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5336 0084 234D     		ldr	r5, .L329+8
 5337 0086 3B55     		strb	r3, [r7, r4]
 661:Blink.cpp     ****             bool x = true;
 5338              		.loc 15 661 13 is_stmt 1 view .LVU1529
 662:Blink.cpp     ****             while(x){
 5339              		.loc 15 662 13 view .LVU1530
 5340              	.LVL319:
 662:Blink.cpp     ****             while(x){
 5341              		.loc 15 662 13 is_stmt 0 view .LVU1531
 5342 0088 234C     		ldr	r4, .L329+12
 661:Blink.cpp     ****             bool x = true;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 161


 5343              		.loc 15 661 19 view .LVU1532
 5344 008a 3270     		strb	r2, [r6]
 5345              	.L319:
 663:Blink.cpp     ****                 //set effect params here
 5346              		.loc 15 663 13 is_stmt 1 view .LVU1533
 663:Blink.cpp     ****                 //set effect params here
 5347              		.loc 15 663 13 view .LVU1534
 5348              	.LBB735:
 665:Blink.cpp     ****                 configuring = 1;
 5349              		.loc 15 665 17 view .LVU1535
 665:Blink.cpp     ****                 configuring = 1;
 5350              		.loc 15 665 31 is_stmt 0 view .LVU1536
 5351 008c FFF7FEFF 		bl	_Z14setEffectPramsv
 5352              	.LVL320:
 666:Blink.cpp     ****                 ReadPots();
 5353              		.loc 15 666 17 is_stmt 1 view .LVU1537
 666:Blink.cpp     ****                 ReadPots();
 5354              		.loc 15 666 29 is_stmt 0 view .LVU1538
 5355 0090 0123     		movs	r3, #1
 5356 0092 2B70     		strb	r3, [r5]
 667:Blink.cpp     ****                 transmitData();
 5357              		.loc 15 667 17 is_stmt 1 view .LVU1539
 667:Blink.cpp     ****                 transmitData();
 5358              		.loc 15 667 25 is_stmt 0 view .LVU1540
 5359 0094 FFF7FEFF 		bl	_Z8ReadPotsv
 5360              	.LVL321:
 668:Blink.cpp     ****                 transmitData2();
 5361              		.loc 15 668 17 is_stmt 1 view .LVU1541
 668:Blink.cpp     ****                 transmitData2();
 5362              		.loc 15 668 29 is_stmt 0 view .LVU1542
 5363 0098 FFF7FEFF 		bl	_Z12transmitDatav
 5364              	.LVL322:
 669:Blink.cpp     ****                 encoder.Debounce();
 5365              		.loc 15 669 17 is_stmt 1 view .LVU1543
 669:Blink.cpp     ****                 encoder.Debounce();
 5366              		.loc 15 669 30 is_stmt 0 view .LVU1544
 5367 009c FFF7FEFF 		bl	_Z13transmitData2v
 5368              	.LVL323:
 670:Blink.cpp     ****         
 5369              		.loc 15 670 17 is_stmt 1 view .LVU1545
 670:Blink.cpp     ****         
 5370              		.loc 15 670 33 is_stmt 0 view .LVU1546
 5371 00a0 1D48     		ldr	r0, .L329+12
 5372 00a2 FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 5373              	.LVL324:
 672:Blink.cpp     ****                 if(inc > 0) {
 5374              		.loc 15 672 17 is_stmt 1 view .LVU1547
 5375              	.LBB736:
 5376              	.LBI736:
  36:../../libDaisy/src/hid/encoder.h **** 
 5377              		.loc 1 36 20 view .LVU1548
 5378              	.LBB737:
  36:../../libDaisy/src/hid/encoder.h **** 
 5379              		.loc 1 36 40 view .LVU1549
  36:../../libDaisy/src/hid/encoder.h **** 
 5380              		.loc 1 36 40 is_stmt 0 view .LVU1550
 5381              	.LBE737:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 162


 5382              	.LBE736:
 679:Blink.cpp     ****                     configuring = 0;
 5383              		.loc 15 679 24 is_stmt 1 view .LVU1551
 5384              	.LBB739:
 5385              	.LBB738:
  36:../../libDaisy/src/hid/encoder.h **** 
 5386              		.loc 1 36 56 is_stmt 0 view .LVU1552
 5387 00a6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5388 00a8 002B     		cmp	r3, #0
 5389 00aa EFD0     		beq	.L319
 5390 00ac 636A     		ldr	r3, [r4, #36]
 5391              	.LVL325:
  36:../../libDaisy/src/hid/encoder.h **** 
 5392              		.loc 1 36 56 view .LVU1553
 5393              	.LBE738:
 5394              	.LBE739:
 673:Blink.cpp     ****                     p1Size--;
 5395              		.loc 15 673 17 is_stmt 1 view .LVU1554
 5396 00ae 002B     		cmp	r3, #0
 5397 00b0 23DC     		bgt	.L328
 679:Blink.cpp     ****                     configuring = 0;
 5398              		.loc 15 679 24 is_stmt 0 view .LVU1555
 5399 00b2 EBD0     		beq	.L319
 5400              	.LVL326:
 5401              	.L312:
 680:Blink.cpp     ****                     return;
 5402              		.loc 15 680 21 is_stmt 1 view .LVU1556
 680:Blink.cpp     ****                     return;
 5403              		.loc 15 680 33 is_stmt 0 view .LVU1557
 5404 00b4 0023     		movs	r3, #0
 5405 00b6 2B70     		strb	r3, [r5]
 681:Blink.cpp     **** 
 5406              		.loc 15 681 21 is_stmt 1 view .LVU1558
 5407              	.L303:
 5408              	.LBE735:
 5409              	.LBE734:
 5410              	.LBE748:
 729:Blink.cpp     **** 
 5411              		.loc 15 729 1 is_stmt 0 view .LVU1559
 5412 00b8 BDEC048B 		vldm	sp!, {d8-d9}
 5413              		.cfi_remember_state
 5414              		.cfi_restore 82
 5415              		.cfi_restore 83
 5416              		.cfi_restore 80
 5417              		.cfi_restore 81
 5418              		.cfi_def_cfa_offset 24
 5419 00bc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5420              	.L304:
 5421              		.cfi_restore_state
 685:Blink.cpp     **** 
 5422              		.loc 15 685 16 is_stmt 1 discriminator 4 view .LVU1560
 5423              	.LBB749:
 5424              	.LBB741:
 685:Blink.cpp     **** 
 5425              		.loc 15 685 27 is_stmt 0 discriminator 4 view .LVU1561
 5426 00be FFF7FEFF 		bl	_Z8containsh
 5427              	.LVL327:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 163


 685:Blink.cpp     **** 
 5428              		.loc 15 685 16 discriminator 4 view .LVU1562
 5429 00c2 0028     		cmp	r0, #0
 5430 00c4 A8D1     		bne	.L305
 5431              	.LBE741:
 5432              	.LBE749:
 723:Blink.cpp     ****             errorFlag = 1;
 5433              		.loc 15 723 9 is_stmt 1 view .LVU1563
 5434 00c6 032C     		cmp	r4, #3
 724:Blink.cpp     ****         } else {
 5435              		.loc 15 724 13 view .LVU1564
 724:Blink.cpp     ****         } else {
 5436              		.loc 15 724 23 is_stmt 0 view .LVU1565
 5437 00c8 164B     		ldr	r3, .L329+24
 5438 00ca 14BF     		ite	ne
 5439 00cc 0122     		movne	r2, #1
 726:Blink.cpp     ****         }
 5440              		.loc 15 726 13 is_stmt 1 view .LVU1566
 726:Blink.cpp     ****         }
 5441              		.loc 15 726 23 is_stmt 0 view .LVU1567
 5442 00ce 0222     		moveq	r2, #2
 5443 00d0 1A70     		strb	r2, [r3]
 729:Blink.cpp     **** 
 5444              		.loc 15 729 1 view .LVU1568
 5445 00d2 BDEC048B 		vldm	sp!, {d8-d9}
 5446              		.cfi_remember_state
 5447              		.cfi_restore 82
 5448              		.cfi_restore 83
 5449              		.cfi_restore 80
 5450              		.cfi_restore 81
 5451              		.cfi_def_cfa_offset 24
 5452 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5453              	.LVL328:
 5454              	.L327:
 5455              		.cfi_restore_state
 5456              	.LBB750:
 5457              	.LBB742:
 5458              	.LBB729:
 5459              	.LBB724:
 702:Blink.cpp     ****                     //set prev values (cancel)
 5460              		.loc 15 702 21 is_stmt 1 view .LVU1569
 706:Blink.cpp     ****                     setEffectPrams();
 5461              		.loc 15 706 27 is_stmt 0 view .LVU1570
 5462 00d8 134B     		ldr	r3, .L329+28
 5463              	.LVL329:
 702:Blink.cpp     ****                     //set prev values (cancel)
 5464              		.loc 15 702 33 view .LVU1571
 5465 00da 0020     		movs	r0, #0
 704:Blink.cpp     ****                     knob2 = b;
 5466              		.loc 15 704 27 view .LVU1572
 5467 00dc 1349     		ldr	r1, .L329+32
 705:Blink.cpp     ****                     knob3 = c;
 5468              		.loc 15 705 27 view .LVU1573
 5469 00de 144A     		ldr	r2, .L329+36
 706:Blink.cpp     ****                     setEffectPrams();
 5470              		.loc 15 706 27 view .LVU1574
 5471 00e0 83ED008A 		vstr.32	s16, [r3]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 164


 704:Blink.cpp     ****                     knob2 = b;
 5472              		.loc 15 704 27 view .LVU1575
 5473 00e4 81ED009A 		vstr.32	s18, [r1]
 705:Blink.cpp     ****                     knob3 = c;
 5474              		.loc 15 705 27 view .LVU1576
 5475 00e8 C2ED008A 		vstr.32	s17, [r2]
 702:Blink.cpp     ****                     //set prev values (cancel)
 5476              		.loc 15 702 33 view .LVU1577
 5477 00ec 2870     		strb	r0, [r5]
 704:Blink.cpp     ****                     knob2 = b;
 5478              		.loc 15 704 21 is_stmt 1 view .LVU1578
 705:Blink.cpp     ****                     knob3 = c;
 5479              		.loc 15 705 21 view .LVU1579
 706:Blink.cpp     ****                     setEffectPrams();
 5480              		.loc 15 706 21 view .LVU1580
 707:Blink.cpp     ****                     return;
 5481              		.loc 15 707 21 view .LVU1581
 5482              	.LBE724:
 5483              	.LBE729:
 5484              	.LBE742:
 5485              	.LBE750:
 729:Blink.cpp     **** 
 5486              		.loc 15 729 1 is_stmt 0 view .LVU1582
 5487 00ee BDEC048B 		vldm	sp!, {d8-d9}
 5488              		.cfi_remember_state
 5489              		.cfi_restore 82
 5490              		.cfi_restore 83
 5491              		.cfi_restore 80
 5492              		.cfi_restore 81
 5493              		.cfi_def_cfa_offset 24
 5494              	.LVL330:
 729:Blink.cpp     **** 
 5495              		.loc 15 729 1 view .LVU1583
 5496 00f2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5497              		.cfi_restore 14
 5498              		.cfi_restore 7
 5499              		.cfi_restore 6
 5500              		.cfi_restore 5
 5501              		.cfi_restore 4
 5502              		.cfi_restore 3
 5503              		.cfi_def_cfa_offset 0
 5504              	.LBB751:
 5505              	.LBB743:
 5506              	.LBB730:
 5507              	.LBB725:
 707:Blink.cpp     ****                     return;
 5508              		.loc 15 707 35 view .LVU1584
 5509 00f6 FFF7FEBF 		b	_Z14setEffectPramsv
 5510              	.LVL331:
 5511              	.L328:
 5512              		.cfi_restore_state
 707:Blink.cpp     ****                     return;
 5513              		.loc 15 707 35 view .LVU1585
 5514              	.LBE725:
 5515              	.LBE730:
 5516              	.LBE743:
 5517              	.LBB744:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 165


 5518              	.LBB740:
 674:Blink.cpp     ****                     profile1[p1Size] = 9;
 5519              		.loc 15 674 21 is_stmt 1 view .LVU1586
 674:Blink.cpp     ****                     profile1[p1Size] = 9;
 5520              		.loc 15 674 27 is_stmt 0 view .LVU1587
 5521 00fa 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 5522              	.LVL332:
 675:Blink.cpp     ****                     configuring = 0;
 5523              		.loc 15 675 38 view .LVU1588
 5524 00fc 0922     		movs	r2, #9
 674:Blink.cpp     ****                     profile1[p1Size] = 9;
 5525              		.loc 15 674 27 view .LVU1589
 5526 00fe 013B     		subs	r3, r3, #1
 5527 0100 DBB2     		uxtb	r3, r3
 5528 0102 3370     		strb	r3, [r6]
 675:Blink.cpp     ****                     configuring = 0;
 5529              		.loc 15 675 21 is_stmt 1 view .LVU1590
 675:Blink.cpp     ****                     configuring = 0;
 5530              		.loc 15 675 38 is_stmt 0 view .LVU1591
 5531 0104 FA54     		strb	r2, [r7, r3]
 676:Blink.cpp     ****                     return;
 5532              		.loc 15 676 21 is_stmt 1 view .LVU1592
 676:Blink.cpp     ****                     return;
 5533              		.loc 15 676 33 is_stmt 0 view .LVU1593
 5534 0106 0023     		movs	r3, #0
 5535 0108 2B70     		strb	r3, [r5]
 677:Blink.cpp     **** 
 5536              		.loc 15 677 21 is_stmt 1 view .LVU1594
 5537 010a D5E7     		b	.L303
 5538              	.L330:
 5539              		.align	2
 5540              	.L329:
 5541 010c 00000000 		.word	.LANCHOR29
 5542 0110 00000000 		.word	.LANCHOR5
 5543 0114 00000000 		.word	.LANCHOR71
 5544 0118 00000000 		.word	.LANCHOR74
 5545 011c 00000000 		.word	.LANCHOR35
 5546 0120 00000000 		.word	.LANCHOR30
 5547 0124 00000000 		.word	.LANCHOR72
 5548 0128 00000000 		.word	.LANCHOR68
 5549 012c 00000000 		.word	.LANCHOR66
 5550 0130 00000000 		.word	.LANCHOR67
 5551              	.LBE740:
 5552              	.LBE744:
 5553              	.LBE751:
 5554              		.cfi_endproc
 5555              	.LFE4904:
 5557              		.section	.text._Z11encProfile2v,"ax",%progbits
 5558              		.align	1
 5559              		.p2align 2,,3
 5560              		.global	_Z11encProfile2v
 5561              		.syntax unified
 5562              		.thumb
 5563              		.thumb_func
 5564              		.fpu fpv5-d16
 5566              	_Z11encProfile2v:
 5567              	.LFB4905:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 166


 731:Blink.cpp     ****     if((p2Size < 3) && !contains(profile)){
 5568              		.loc 15 731 19 view -0
 5569              		.cfi_startproc
 5570              		@ args = 0, pretend = 0, frame = 0
 5571              		@ frame_needed = 0, uses_anonymous_args = 0
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5572              		.loc 15 732 5 view .LVU1596
 731:Blink.cpp     ****     if((p2Size < 3) && !contains(profile)){
 5573              		.loc 15 731 19 is_stmt 0 view .LVU1597
 5574 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5575              		.cfi_def_cfa_offset 24
 5576              		.cfi_offset 3, -24
 5577              		.cfi_offset 4, -20
 5578              		.cfi_offset 5, -16
 5579              		.cfi_offset 6, -12
 5580              		.cfi_offset 7, -8
 5581              		.cfi_offset 14, -4
 5582              	.LBB752:
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5583              		.loc 15 732 16 view .LVU1598
 5584 0002 464E     		ldr	r6, .L357
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5585              		.loc 15 732 33 view .LVU1599
 5586 0004 464B     		ldr	r3, .L357+4
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5587              		.loc 15 732 16 view .LVU1600
 5588 0006 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5589              		.loc 15 732 21 view .LVU1601
 5590 0008 022C     		cmp	r4, #2
 5591              	.LBE752:
 731:Blink.cpp     ****     if((p2Size < 3) && !contains(profile)){
 5592              		.loc 15 731 19 view .LVU1602
 5593 000a 2DED048B 		vpush.64	{d8, d9}
 5594              		.cfi_def_cfa_offset 40
 5595              		.cfi_offset 80, -40
 5596              		.cfi_offset 81, -36
 5597              		.cfi_offset 82, -32
 5598              		.cfi_offset 83, -28
 5599              	.LBB799:
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5600              		.loc 15 732 33 view .LVU1603
 5601 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5602              		.loc 15 732 21 view .LVU1604
 5603 0010 55D8     		bhi	.L332
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5604              		.loc 15 732 33 discriminator 1 view .LVU1605
 5605 0012 FFF7FEFF 		bl	_Z8containsh
 5606              	.LVL333:
 732:Blink.cpp     ****             profile2[p2Size] = effectCount;
 5607              		.loc 15 732 21 discriminator 1 view .LVU1606
 5608 0016 88B3     		cbz	r0, .L353
 5609              	.L333:
 5610              	.LBB753:
 5611              	.LBB754:
 759:Blink.cpp     ****             float a,b,c;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 167


 5612              		.loc 15 759 13 is_stmt 1 view .LVU1607
 5613              	.LVL334:
 760:Blink.cpp     ****             a = getEffectParams(0);
 5614              		.loc 15 760 13 view .LVU1608
 761:Blink.cpp     ****             b = getEffectParams(1);
 5615              		.loc 15 761 13 view .LVU1609
 761:Blink.cpp     ****             b = getEffectParams(1);
 5616              		.loc 15 761 32 is_stmt 0 view .LVU1610
 5617 0018 0020     		movs	r0, #0
 5618 001a 424D     		ldr	r5, .L357+8
 5619 001c FFF7FEFF 		bl	_Z15getEffectParamsh
 5620              	.LVL335:
 762:Blink.cpp     ****             c = getEffectParams(2);
 5621              		.loc 15 762 32 view .LVU1611
 5622 0020 0120     		movs	r0, #1
 761:Blink.cpp     ****             b = getEffectParams(1);
 5623              		.loc 15 761 32 view .LVU1612
 5624 0022 B0EE409A 		vmov.f32	s18, s0
 5625              	.LVL336:
 762:Blink.cpp     ****             c = getEffectParams(2);
 5626              		.loc 15 762 13 is_stmt 1 view .LVU1613
 762:Blink.cpp     ****             c = getEffectParams(2);
 5627              		.loc 15 762 32 is_stmt 0 view .LVU1614
 5628 0026 FFF7FEFF 		bl	_Z15getEffectParamsh
 5629              	.LVL337:
 763:Blink.cpp     ****             while(y) {
 5630              		.loc 15 763 32 view .LVU1615
 5631 002a 0220     		movs	r0, #2
 762:Blink.cpp     ****             c = getEffectParams(2);
 5632              		.loc 15 762 32 view .LVU1616
 5633 002c F0EE408A 		vmov.f32	s17, s0
 5634              	.LVL338:
 763:Blink.cpp     ****             while(y) {
 5635              		.loc 15 763 13 is_stmt 1 view .LVU1617
 763:Blink.cpp     ****             while(y) {
 5636              		.loc 15 763 32 is_stmt 0 view .LVU1618
 5637 0030 FFF7FEFF 		bl	_Z15getEffectParamsh
 5638              	.LVL339:
 763:Blink.cpp     ****             while(y) {
 5639              		.loc 15 763 32 view .LVU1619
 5640 0034 B0EE408A 		vmov.f32	s16, s0
 5641              	.LVL340:
 763:Blink.cpp     ****             while(y) {
 5642              		.loc 15 763 32 view .LVU1620
 5643 0038 3B4C     		ldr	r4, .L357+12
 5644              	.LVL341:
 5645              	.L347:
 764:Blink.cpp     ****                 configuring = 1;
 5646              		.loc 15 764 13 is_stmt 1 view .LVU1621
 764:Blink.cpp     ****                 configuring = 1;
 5647              		.loc 15 764 13 view .LVU1622
 5648              	.LBB755:
 765:Blink.cpp     ****                 ReadPots();
 5649              		.loc 15 765 17 view .LVU1623
 765:Blink.cpp     ****                 ReadPots();
 5650              		.loc 15 765 29 is_stmt 0 view .LVU1624
 5651 003a 0123     		movs	r3, #1
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 168


 5652 003c 2B70     		strb	r3, [r5]
 766:Blink.cpp     ****                 transmitData();
 5653              		.loc 15 766 17 is_stmt 1 view .LVU1625
 766:Blink.cpp     ****                 transmitData();
 5654              		.loc 15 766 25 is_stmt 0 view .LVU1626
 5655 003e FFF7FEFF 		bl	_Z8ReadPotsv
 5656              	.LVL342:
 767:Blink.cpp     ****                 transmitData2();
 5657              		.loc 15 767 17 is_stmt 1 view .LVU1627
 767:Blink.cpp     ****                 transmitData2();
 5658              		.loc 15 767 29 is_stmt 0 view .LVU1628
 5659 0042 FFF7FEFF 		bl	_Z12transmitDatav
 5660              	.LVL343:
 768:Blink.cpp     ****                 setEffectPrams();
 5661              		.loc 15 768 17 is_stmt 1 view .LVU1629
 768:Blink.cpp     ****                 setEffectPrams();
 5662              		.loc 15 768 30 is_stmt 0 view .LVU1630
 5663 0046 FFF7FEFF 		bl	_Z13transmitData2v
 5664              	.LVL344:
 769:Blink.cpp     ****                 //set new params for the effect here
 5665              		.loc 15 769 17 is_stmt 1 view .LVU1631
 769:Blink.cpp     ****                 //set new params for the effect here
 5666              		.loc 15 769 31 is_stmt 0 view .LVU1632
 5667 004a FFF7FEFF 		bl	_Z14setEffectPramsv
 5668              	.LVL345:
 771:Blink.cpp     ****                 int inc = encoder.Increment();
 5669              		.loc 15 771 17 is_stmt 1 view .LVU1633
 771:Blink.cpp     ****                 int inc = encoder.Increment();
 5670              		.loc 15 771 33 is_stmt 0 view .LVU1634
 5671 004e 3648     		ldr	r0, .L357+12
 5672 0050 FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 5673              	.LVL346:
 772:Blink.cpp     ****                 if(inc > 0) {
 5674              		.loc 15 772 17 is_stmt 1 view .LVU1635
 5675              	.LBB756:
 5676              	.LBI756:
  36:../../libDaisy/src/hid/encoder.h **** 
 5677              		.loc 1 36 20 view .LVU1636
 5678              	.LBB757:
  36:../../libDaisy/src/hid/encoder.h **** 
 5679              		.loc 1 36 40 view .LVU1637
  36:../../libDaisy/src/hid/encoder.h **** 
 5680              		.loc 1 36 40 is_stmt 0 view .LVU1638
 5681              	.LBE757:
 5682              	.LBE756:
 782:Blink.cpp     ****                     configuring = 0;
 5683              		.loc 15 782 24 is_stmt 1 view .LVU1639
 788:Blink.cpp     ****                     configuring = 0;
 5684              		.loc 15 788 24 view .LVU1640
 5685              	.LBB759:
 5686              	.LBI759:
 5687              		.loc 1 39 17 view .LVU1641
 5688              	.LBE759:
 5689              	.LBE755:
 5690              	.LBE754:
 5691              	.LBE753:
 5692              	.LBE799:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 169


 5693              		.loc 1 39 38 view .LVU1642
 5694              	.LBB800:
 5695              	.LBB781:
 5696              	.LBB774:
 5697              	.LBB767:
 5698              	.LBB764:
 5699              	.LBB760:
 5700              	.LBI760:
 5701              		.loc 2 70 17 view .LVU1643
 5702              	.LBB761:
 5703              		.loc 2 70 38 view .LVU1644
 5704              		.loc 2 70 38 is_stmt 0 view .LVU1645
 5705              	.LBE761:
 5706              	.LBE760:
 5707              	.LBE764:
 5708              	.LBB765:
 5709              	.LBB758:
  36:../../libDaisy/src/hid/encoder.h **** 
 5710              		.loc 1 36 56 view .LVU1646
 5711 0054 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5712 0056 1BB1     		cbz	r3, .L338
 5713 0058 636A     		ldr	r3, [r4, #36]
 5714              	.LVL347:
  36:../../libDaisy/src/hid/encoder.h **** 
 5715              		.loc 1 36 56 view .LVU1647
 5716              	.LBE758:
 5717              	.LBE765:
 773:Blink.cpp     ****                     configuring = 0;
 5718              		.loc 15 773 17 is_stmt 1 view .LVU1648
 5719 005a 002B     		cmp	r3, #0
 5720 005c 44DC     		bgt	.L354
 782:Blink.cpp     ****                     configuring = 0;
 5721              		.loc 15 782 24 is_stmt 0 view .LVU1649
 5722 005e 3BD1     		bne	.L355
 5723              	.LVL348:
 5724              	.L338:
 5725              	.LBB766:
 5726              	.LBB763:
 5727              	.LBB762:
 5728              		.loc 2 70 54 view .LVU1650
 5729 0060 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 5730 0062 002B     		cmp	r3, #0
 5731 0064 E9D0     		beq	.L347
 5732              	.LBE762:
 5733              	.LBE763:
 5734              	.LBE766:
 788:Blink.cpp     ****                     configuring = 0;
 5735              		.loc 15 788 24 view .LVU1651
 5736 0066 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 5737 0068 7F2B     		cmp	r3, #127
 5738 006a E6D1     		bne	.L347
 789:Blink.cpp     ****                     removeEffect();
 5739              		.loc 15 789 21 is_stmt 1 view .LVU1652
 789:Blink.cpp     ****                     removeEffect();
 5740              		.loc 15 789 33 is_stmt 0 view .LVU1653
 5741 006c 0023     		movs	r3, #0
 5742              	.LBE767:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 170


 5743              	.LBE774:
 5744              	.LBE781:
 5745              	.LBE800:
 800:Blink.cpp     **** 
 5746              		.loc 15 800 1 view .LVU1654
 5747 006e BDEC048B 		vldm	sp!, {d8-d9}
 5748              		.cfi_remember_state
 5749              		.cfi_restore 82
 5750              		.cfi_restore 83
 5751              		.cfi_restore 80
 5752              		.cfi_restore 81
 5753              		.cfi_def_cfa_offset 24
 5754              	.LVL349:
 5755              	.LBB801:
 5756              	.LBB782:
 5757              	.LBB775:
 5758              	.LBB768:
 789:Blink.cpp     ****                     removeEffect();
 5759              		.loc 15 789 33 view .LVU1655
 5760 0072 2B70     		strb	r3, [r5]
 790:Blink.cpp     ****                     return;
 5761              		.loc 15 790 21 is_stmt 1 view .LVU1656
 5762              	.LBE768:
 5763              	.LBE775:
 5764              	.LBE782:
 5765              	.LBE801:
 800:Blink.cpp     **** 
 5766              		.loc 15 800 1 is_stmt 0 view .LVU1657
 5767 0074 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5768              		.cfi_restore 14
 5769              		.cfi_restore 7
 5770              		.cfi_restore 6
 5771              		.cfi_restore 5
 5772              		.cfi_restore 4
 5773              		.cfi_restore 3
 5774              		.cfi_def_cfa_offset 0
 5775              	.LBB802:
 5776              	.LBB783:
 5777              	.LBB776:
 5778              	.LBB769:
 790:Blink.cpp     ****                     return;
 5779              		.loc 15 790 33 view .LVU1658
 5780 0078 FFF7FEBF 		b	_Z12removeEffectv
 5781              	.LVL350:
 5782              	.L353:
 5783              		.cfi_restore_state
 790:Blink.cpp     ****                     return;
 5784              		.loc 15 790 33 view .LVU1659
 5785              	.LBE769:
 5786              	.LBE776:
 5787              	.LBE783:
 5788              	.LBB784:
 733:Blink.cpp     ****             p2Size++;
 5789              		.loc 15 733 13 is_stmt 1 view .LVU1660
 733:Blink.cpp     ****             p2Size++;
 5790              		.loc 15 733 30 is_stmt 0 view .LVU1661
 5791 007c 2B4B     		ldr	r3, .L357+16
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 171


 734:Blink.cpp     ****             bool x = true;
 5792              		.loc 15 734 19 view .LVU1662
 5793 007e 621C     		adds	r2, r4, #1
 733:Blink.cpp     ****             p2Size++;
 5794              		.loc 15 733 30 view .LVU1663
 5795 0080 2B4F     		ldr	r7, .L357+20
 5796 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5797 0084 274D     		ldr	r5, .L357+8
 5798 0086 3B55     		strb	r3, [r7, r4]
 734:Blink.cpp     ****             bool x = true;
 5799              		.loc 15 734 13 is_stmt 1 view .LVU1664
 735:Blink.cpp     ****             while(x){
 5800              		.loc 15 735 13 view .LVU1665
 5801              	.LVL351:
 735:Blink.cpp     ****             while(x){
 5802              		.loc 15 735 13 is_stmt 0 view .LVU1666
 5803 0088 274C     		ldr	r4, .L357+12
 734:Blink.cpp     ****             bool x = true;
 5804              		.loc 15 734 19 view .LVU1667
 5805 008a 3270     		strb	r2, [r6]
 5806              	.L346:
 736:Blink.cpp     ****                 //set effect params here
 5807              		.loc 15 736 13 is_stmt 1 view .LVU1668
 736:Blink.cpp     ****                 //set effect params here
 5808              		.loc 15 736 13 view .LVU1669
 5809              	.LBB785:
 738:Blink.cpp     ****                 configuring = 1;
 5810              		.loc 15 738 17 view .LVU1670
 738:Blink.cpp     ****                 configuring = 1;
 5811              		.loc 15 738 31 is_stmt 0 view .LVU1671
 5812 008c FFF7FEFF 		bl	_Z14setEffectPramsv
 5813              	.LVL352:
 739:Blink.cpp     ****                 ReadPots();
 5814              		.loc 15 739 17 is_stmt 1 view .LVU1672
 739:Blink.cpp     ****                 ReadPots();
 5815              		.loc 15 739 29 is_stmt 0 view .LVU1673
 5816 0090 0123     		movs	r3, #1
 5817 0092 2B70     		strb	r3, [r5]
 740:Blink.cpp     ****                 transmitData();
 5818              		.loc 15 740 17 is_stmt 1 view .LVU1674
 740:Blink.cpp     ****                 transmitData();
 5819              		.loc 15 740 25 is_stmt 0 view .LVU1675
 5820 0094 FFF7FEFF 		bl	_Z8ReadPotsv
 5821              	.LVL353:
 741:Blink.cpp     ****                 transmitData2();
 5822              		.loc 15 741 17 is_stmt 1 view .LVU1676
 741:Blink.cpp     ****                 transmitData2();
 5823              		.loc 15 741 29 is_stmt 0 view .LVU1677
 5824 0098 FFF7FEFF 		bl	_Z12transmitDatav
 5825              	.LVL354:
 742:Blink.cpp     ****                 encoder.Debounce();
 5826              		.loc 15 742 17 is_stmt 1 view .LVU1678
 742:Blink.cpp     ****                 encoder.Debounce();
 5827              		.loc 15 742 30 is_stmt 0 view .LVU1679
 5828 009c FFF7FEFF 		bl	_Z13transmitData2v
 5829              	.LVL355:
 743:Blink.cpp     ****         
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 172


 5830              		.loc 15 743 17 is_stmt 1 view .LVU1680
 743:Blink.cpp     ****         
 5831              		.loc 15 743 33 is_stmt 0 view .LVU1681
 5832 00a0 2148     		ldr	r0, .L357+12
 5833 00a2 FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 5834              	.LVL356:
 745:Blink.cpp     ****                 if(inc > 0) {
 5835              		.loc 15 745 17 is_stmt 1 view .LVU1682
 5836              	.LBB786:
 5837              	.LBI786:
  36:../../libDaisy/src/hid/encoder.h **** 
 5838              		.loc 1 36 20 view .LVU1683
 5839              	.LBB787:
  36:../../libDaisy/src/hid/encoder.h **** 
 5840              		.loc 1 36 40 view .LVU1684
  36:../../libDaisy/src/hid/encoder.h **** 
 5841              		.loc 1 36 40 is_stmt 0 view .LVU1685
 5842              	.LBE787:
 5843              	.LBE786:
 752:Blink.cpp     ****                     configuring = 0;
 5844              		.loc 15 752 24 is_stmt 1 view .LVU1686
 5845              	.LBB789:
 5846              	.LBB788:
  36:../../libDaisy/src/hid/encoder.h **** 
 5847              		.loc 1 36 56 is_stmt 0 view .LVU1687
 5848 00a6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5849 00a8 002B     		cmp	r3, #0
 5850 00aa EFD0     		beq	.L346
 5851 00ac 636A     		ldr	r3, [r4, #36]
 5852              	.LVL357:
  36:../../libDaisy/src/hid/encoder.h **** 
 5853              		.loc 1 36 56 view .LVU1688
 5854              	.LBE788:
 5855              	.LBE789:
 746:Blink.cpp     ****                     p2Size--;
 5856              		.loc 15 746 17 is_stmt 1 view .LVU1689
 5857 00ae 002B     		cmp	r3, #0
 5858 00b0 2BDC     		bgt	.L356
 752:Blink.cpp     ****                     configuring = 0;
 5859              		.loc 15 752 24 is_stmt 0 view .LVU1690
 5860 00b2 EBD0     		beq	.L346
 753:Blink.cpp     ****                     return;
 5861              		.loc 15 753 21 is_stmt 1 view .LVU1691
 753:Blink.cpp     ****                     return;
 5862              		.loc 15 753 33 is_stmt 0 view .LVU1692
 5863 00b4 0023     		movs	r3, #0
 5864              	.LVL358:
 753:Blink.cpp     ****                     return;
 5865              		.loc 15 753 33 view .LVU1693
 5866              	.LBE785:
 5867              	.LBE784:
 5868              	.LBE802:
 800:Blink.cpp     **** 
 5869              		.loc 15 800 1 view .LVU1694
 5870 00b6 BDEC048B 		vldm	sp!, {d8-d9}
 5871              		.cfi_remember_state
 5872              		.cfi_restore 82
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 173


 5873              		.cfi_restore 83
 5874              		.cfi_restore 80
 5875              		.cfi_restore 81
 5876              		.cfi_def_cfa_offset 24
 5877              	.LBB803:
 5878              	.LBB792:
 5879              	.LBB790:
 753:Blink.cpp     ****                     return;
 5880              		.loc 15 753 33 view .LVU1695
 5881 00ba 2B70     		strb	r3, [r5]
 754:Blink.cpp     **** 
 5882              		.loc 15 754 21 is_stmt 1 view .LVU1696
 5883              	.LBE790:
 5884              	.LBE792:
 5885              	.LBE803:
 800:Blink.cpp     **** 
 5886              		.loc 15 800 1 is_stmt 0 view .LVU1697
 5887 00bc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5888              	.LVL359:
 5889              	.L332:
 5890              		.cfi_restore_state
 758:Blink.cpp     ****             bool y = true;
 5891              		.loc 15 758 16 is_stmt 1 discriminator 4 view .LVU1698
 5892              	.LBB804:
 5893              	.LBB793:
 758:Blink.cpp     ****             bool y = true;
 5894              		.loc 15 758 27 is_stmt 0 discriminator 4 view .LVU1699
 5895 00be FFF7FEFF 		bl	_Z8containsh
 5896              	.LVL360:
 758:Blink.cpp     ****             bool y = true;
 5897              		.loc 15 758 16 discriminator 4 view .LVU1700
 5898 00c2 0028     		cmp	r0, #0
 5899 00c4 A8D1     		bne	.L333
 5900              	.LBE793:
 5901              	.LBE804:
 795:Blink.cpp     ****             errorFlag = 1;
 5902              		.loc 15 795 9 is_stmt 1 view .LVU1701
 5903 00c6 032C     		cmp	r4, #3
 796:Blink.cpp     ****         } else {
 5904              		.loc 15 796 13 view .LVU1702
 796:Blink.cpp     ****         } else {
 5905              		.loc 15 796 23 is_stmt 0 view .LVU1703
 5906 00c8 1A4B     		ldr	r3, .L357+24
 5907 00ca 14BF     		ite	ne
 5908 00cc 0122     		movne	r2, #1
 798:Blink.cpp     ****         }
 5909              		.loc 15 798 13 is_stmt 1 view .LVU1704
 798:Blink.cpp     ****         }
 5910              		.loc 15 798 23 is_stmt 0 view .LVU1705
 5911 00ce 0222     		moveq	r2, #2
 5912 00d0 1A70     		strb	r2, [r3]
 5913              	.L331:
 800:Blink.cpp     **** 
 5914              		.loc 15 800 1 view .LVU1706
 5915 00d2 BDEC048B 		vldm	sp!, {d8-d9}
 5916              		.cfi_remember_state
 5917              		.cfi_restore 82
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 174


 5918              		.cfi_restore 83
 5919              		.cfi_restore 80
 5920              		.cfi_restore 81
 5921              		.cfi_def_cfa_offset 24
 5922 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5923              	.LVL361:
 5924              	.L355:
 5925              		.cfi_restore_state
 5926              	.LBB805:
 5927              	.LBB794:
 5928              	.LBB777:
 5929              	.LBB770:
 783:Blink.cpp     ****                     //leave new values selected(save)
 5930              		.loc 15 783 21 is_stmt 1 view .LVU1707
 783:Blink.cpp     ****                     //leave new values selected(save)
 5931              		.loc 15 783 33 is_stmt 0 view .LVU1708
 5932 00d8 0023     		movs	r3, #0
 5933              	.LVL362:
 783:Blink.cpp     ****                     //leave new values selected(save)
 5934              		.loc 15 783 33 view .LVU1709
 5935              	.LBE770:
 5936              	.LBE777:
 5937              	.LBE794:
 5938              	.LBE805:
 800:Blink.cpp     **** 
 5939              		.loc 15 800 1 view .LVU1710
 5940 00da BDEC048B 		vldm	sp!, {d8-d9}
 5941              		.cfi_remember_state
 5942              		.cfi_restore 82
 5943              		.cfi_restore 83
 5944              		.cfi_restore 80
 5945              		.cfi_restore 81
 5946              		.cfi_def_cfa_offset 24
 5947              	.LVL363:
 5948              	.LBB806:
 5949              	.LBB795:
 5950              	.LBB778:
 5951              	.LBB771:
 783:Blink.cpp     ****                     //leave new values selected(save)
 5952              		.loc 15 783 33 view .LVU1711
 5953 00de 2B70     		strb	r3, [r5]
 785:Blink.cpp     ****                     return;
 5954              		.loc 15 785 21 is_stmt 1 view .LVU1712
 5955              	.LBE771:
 5956              	.LBE778:
 5957              	.LBE795:
 5958              	.LBE806:
 800:Blink.cpp     **** 
 5959              		.loc 15 800 1 is_stmt 0 view .LVU1713
 5960 00e0 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5961              		.cfi_restore 14
 5962              		.cfi_restore 7
 5963              		.cfi_restore 6
 5964              		.cfi_restore 5
 5965              		.cfi_restore 4
 5966              		.cfi_restore 3
 5967              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 175


 5968              	.LBB807:
 5969              	.LBB796:
 5970              	.LBB779:
 5971              	.LBB772:
 785:Blink.cpp     ****                     return;
 5972              		.loc 15 785 35 view .LVU1714
 5973 00e4 FFF7FEBF 		b	_Z14setEffectPramsv
 5974              	.LVL364:
 5975              	.L354:
 5976              		.cfi_restore_state
 774:Blink.cpp     ****                     //set prev values (cancel)
 5977              		.loc 15 774 21 is_stmt 1 view .LVU1715
 778:Blink.cpp     ****                     setEffectPrams();
 5978              		.loc 15 778 27 is_stmt 0 view .LVU1716
 5979 00e8 134B     		ldr	r3, .L357+28
 5980              	.LVL365:
 774:Blink.cpp     ****                     //set prev values (cancel)
 5981              		.loc 15 774 33 view .LVU1717
 5982 00ea 0020     		movs	r0, #0
 776:Blink.cpp     ****                     knob2 = b;
 5983              		.loc 15 776 27 view .LVU1718
 5984 00ec 1349     		ldr	r1, .L357+32
 777:Blink.cpp     ****                     knob3 = c;
 5985              		.loc 15 777 27 view .LVU1719
 5986 00ee 144A     		ldr	r2, .L357+36
 778:Blink.cpp     ****                     setEffectPrams();
 5987              		.loc 15 778 27 view .LVU1720
 5988 00f0 83ED008A 		vstr.32	s16, [r3]
 776:Blink.cpp     ****                     knob2 = b;
 5989              		.loc 15 776 27 view .LVU1721
 5990 00f4 81ED009A 		vstr.32	s18, [r1]
 777:Blink.cpp     ****                     knob3 = c;
 5991              		.loc 15 777 27 view .LVU1722
 5992 00f8 C2ED008A 		vstr.32	s17, [r2]
 774:Blink.cpp     ****                     //set prev values (cancel)
 5993              		.loc 15 774 33 view .LVU1723
 5994 00fc 2870     		strb	r0, [r5]
 776:Blink.cpp     ****                     knob2 = b;
 5995              		.loc 15 776 21 is_stmt 1 view .LVU1724
 777:Blink.cpp     ****                     knob3 = c;
 5996              		.loc 15 777 21 view .LVU1725
 778:Blink.cpp     ****                     setEffectPrams();
 5997              		.loc 15 778 21 view .LVU1726
 779:Blink.cpp     ****                     return;
 5998              		.loc 15 779 21 view .LVU1727
 5999              	.LBE772:
 6000              	.LBE779:
 6001              	.LBE796:
 6002              	.LBE807:
 800:Blink.cpp     **** 
 6003              		.loc 15 800 1 is_stmt 0 view .LVU1728
 6004 00fe BDEC048B 		vldm	sp!, {d8-d9}
 6005              		.cfi_remember_state
 6006              		.cfi_restore 82
 6007              		.cfi_restore 83
 6008              		.cfi_restore 80
 6009              		.cfi_restore 81
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 176


 6010              		.cfi_def_cfa_offset 24
 6011              	.LVL366:
 800:Blink.cpp     **** 
 6012              		.loc 15 800 1 view .LVU1729
 6013 0102 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 6014              		.cfi_restore 14
 6015              		.cfi_restore 7
 6016              		.cfi_restore 6
 6017              		.cfi_restore 5
 6018              		.cfi_restore 4
 6019              		.cfi_restore 3
 6020              		.cfi_def_cfa_offset 0
 6021              	.LBB808:
 6022              	.LBB797:
 6023              	.LBB780:
 6024              	.LBB773:
 779:Blink.cpp     ****                     return;
 6025              		.loc 15 779 35 view .LVU1730
 6026 0106 FFF7FEBF 		b	_Z14setEffectPramsv
 6027              	.LVL367:
 6028              	.L356:
 6029              		.cfi_restore_state
 779:Blink.cpp     ****                     return;
 6030              		.loc 15 779 35 view .LVU1731
 6031              	.LBE773:
 6032              	.LBE780:
 6033              	.LBE797:
 6034              	.LBB798:
 6035              	.LBB791:
 747:Blink.cpp     ****                     profile2[p2Size] = 9;
 6036              		.loc 15 747 21 is_stmt 1 view .LVU1732
 747:Blink.cpp     ****                     profile2[p2Size] = 9;
 6037              		.loc 15 747 27 is_stmt 0 view .LVU1733
 6038 010a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 6039              	.LVL368:
 748:Blink.cpp     ****                     configuring = 0;
 6040              		.loc 15 748 38 view .LVU1734
 6041 010c 0922     		movs	r2, #9
 747:Blink.cpp     ****                     profile2[p2Size] = 9;
 6042              		.loc 15 747 27 view .LVU1735
 6043 010e 013B     		subs	r3, r3, #1
 6044 0110 DBB2     		uxtb	r3, r3
 6045 0112 3370     		strb	r3, [r6]
 748:Blink.cpp     ****                     configuring = 0;
 6046              		.loc 15 748 21 is_stmt 1 view .LVU1736
 748:Blink.cpp     ****                     configuring = 0;
 6047              		.loc 15 748 38 is_stmt 0 view .LVU1737
 6048 0114 FA54     		strb	r2, [r7, r3]
 749:Blink.cpp     ****                     return;
 6049              		.loc 15 749 21 is_stmt 1 view .LVU1738
 749:Blink.cpp     ****                     return;
 6050              		.loc 15 749 33 is_stmt 0 view .LVU1739
 6051 0116 0023     		movs	r3, #0
 6052 0118 2B70     		strb	r3, [r5]
 750:Blink.cpp     **** 
 6053              		.loc 15 750 21 is_stmt 1 view .LVU1740
 6054 011a DAE7     		b	.L331
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 177


 6055              	.L358:
 6056              		.align	2
 6057              	.L357:
 6058 011c 00000000 		.word	.LANCHOR31
 6059 0120 00000000 		.word	.LANCHOR5
 6060 0124 00000000 		.word	.LANCHOR71
 6061 0128 00000000 		.word	.LANCHOR74
 6062 012c 00000000 		.word	.LANCHOR35
 6063 0130 00000000 		.word	.LANCHOR32
 6064 0134 00000000 		.word	.LANCHOR72
 6065 0138 00000000 		.word	.LANCHOR68
 6066 013c 00000000 		.word	.LANCHOR66
 6067 0140 00000000 		.word	.LANCHOR67
 6068              	.LBE791:
 6069              	.LBE798:
 6070              	.LBE808:
 6071              		.cfi_endproc
 6072              	.LFE4905:
 6074              		.section	.text._Z11encProfile3v,"ax",%progbits
 6075              		.align	1
 6076              		.p2align 2,,3
 6077              		.global	_Z11encProfile3v
 6078              		.syntax unified
 6079              		.thumb
 6080              		.thumb_func
 6081              		.fpu fpv5-d16
 6083              	_Z11encProfile3v:
 6084              	.LFB4906:
 802:Blink.cpp     ****     if((p3Size < 3) && !contains(profile)){
 6085              		.loc 15 802 19 view -0
 6086              		.cfi_startproc
 6087              		@ args = 0, pretend = 0, frame = 0
 6088              		@ frame_needed = 0, uses_anonymous_args = 0
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6089              		.loc 15 803 5 view .LVU1742
 802:Blink.cpp     ****     if((p3Size < 3) && !contains(profile)){
 6090              		.loc 15 802 19 is_stmt 0 view .LVU1743
 6091 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6092              		.cfi_def_cfa_offset 24
 6093              		.cfi_offset 3, -24
 6094              		.cfi_offset 4, -20
 6095              		.cfi_offset 5, -16
 6096              		.cfi_offset 6, -12
 6097              		.cfi_offset 7, -8
 6098              		.cfi_offset 14, -4
 6099              	.LBB809:
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6100              		.loc 15 803 16 view .LVU1744
 6101 0002 454E     		ldr	r6, .L385
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6102              		.loc 15 803 33 view .LVU1745
 6103 0004 454B     		ldr	r3, .L385+4
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6104              		.loc 15 803 16 view .LVU1746
 6105 0006 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6106              		.loc 15 803 21 view .LVU1747
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 178


 6107 0008 022C     		cmp	r4, #2
 6108              	.LBE809:
 802:Blink.cpp     ****     if((p3Size < 3) && !contains(profile)){
 6109              		.loc 15 802 19 view .LVU1748
 6110 000a 2DED048B 		vpush.64	{d8, d9}
 6111              		.cfi_def_cfa_offset 40
 6112              		.cfi_offset 80, -40
 6113              		.cfi_offset 81, -36
 6114              		.cfi_offset 82, -32
 6115              		.cfi_offset 83, -28
 6116              	.LBB856:
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6117              		.loc 15 803 33 view .LVU1749
 6118 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6119              		.loc 15 803 21 view .LVU1750
 6120 0010 53D8     		bhi	.L360
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6121              		.loc 15 803 33 discriminator 1 view .LVU1751
 6122 0012 FFF7FEFF 		bl	_Z8containsh
 6123              	.LVL369:
 803:Blink.cpp     ****             profile3[p3Size] = effectCount;
 6124              		.loc 15 803 21 discriminator 1 view .LVU1752
 6125 0016 78B3     		cbz	r0, .L381
 6126              	.L361:
 6127              	.LBB810:
 6128              	.LBB811:
 830:Blink.cpp     ****             float a,b,c;
 6129              		.loc 15 830 13 is_stmt 1 view .LVU1753
 6130              	.LVL370:
 831:Blink.cpp     ****             a = getEffectParams(0);
 6131              		.loc 15 831 13 view .LVU1754
 832:Blink.cpp     ****             b = getEffectParams(1);
 6132              		.loc 15 832 13 view .LVU1755
 832:Blink.cpp     ****             b = getEffectParams(1);
 6133              		.loc 15 832 32 is_stmt 0 view .LVU1756
 6134 0018 0020     		movs	r0, #0
 6135 001a 414D     		ldr	r5, .L385+8
 6136 001c FFF7FEFF 		bl	_Z15getEffectParamsh
 6137              	.LVL371:
 833:Blink.cpp     ****             c = getEffectParams(2);
 6138              		.loc 15 833 32 view .LVU1757
 6139 0020 0120     		movs	r0, #1
 832:Blink.cpp     ****             b = getEffectParams(1);
 6140              		.loc 15 832 32 view .LVU1758
 6141 0022 B0EE409A 		vmov.f32	s18, s0
 6142              	.LVL372:
 833:Blink.cpp     ****             c = getEffectParams(2);
 6143              		.loc 15 833 13 is_stmt 1 view .LVU1759
 833:Blink.cpp     ****             c = getEffectParams(2);
 6144              		.loc 15 833 32 is_stmt 0 view .LVU1760
 6145 0026 FFF7FEFF 		bl	_Z15getEffectParamsh
 6146              	.LVL373:
 834:Blink.cpp     ****             while(y) {
 6147              		.loc 15 834 32 view .LVU1761
 6148 002a 0220     		movs	r0, #2
 833:Blink.cpp     ****             c = getEffectParams(2);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 179


 6149              		.loc 15 833 32 view .LVU1762
 6150 002c F0EE408A 		vmov.f32	s17, s0
 6151              	.LVL374:
 834:Blink.cpp     ****             while(y) {
 6152              		.loc 15 834 13 is_stmt 1 view .LVU1763
 834:Blink.cpp     ****             while(y) {
 6153              		.loc 15 834 32 is_stmt 0 view .LVU1764
 6154 0030 FFF7FEFF 		bl	_Z15getEffectParamsh
 6155              	.LVL375:
 834:Blink.cpp     ****             while(y) {
 6156              		.loc 15 834 32 view .LVU1765
 6157 0034 B0EE408A 		vmov.f32	s16, s0
 6158              	.LVL376:
 834:Blink.cpp     ****             while(y) {
 6159              		.loc 15 834 32 view .LVU1766
 6160 0038 3A4C     		ldr	r4, .L385+12
 6161              	.LVL377:
 6162              	.L375:
 835:Blink.cpp     ****                 configuring = 1;
 6163              		.loc 15 835 13 is_stmt 1 view .LVU1767
 835:Blink.cpp     ****                 configuring = 1;
 6164              		.loc 15 835 13 view .LVU1768
 6165              	.LBB812:
 836:Blink.cpp     ****                 ReadPots();
 6166              		.loc 15 836 17 view .LVU1769
 836:Blink.cpp     ****                 ReadPots();
 6167              		.loc 15 836 29 is_stmt 0 view .LVU1770
 6168 003a 0123     		movs	r3, #1
 6169 003c 2B70     		strb	r3, [r5]
 837:Blink.cpp     ****                 transmitData();
 6170              		.loc 15 837 17 is_stmt 1 view .LVU1771
 837:Blink.cpp     ****                 transmitData();
 6171              		.loc 15 837 25 is_stmt 0 view .LVU1772
 6172 003e FFF7FEFF 		bl	_Z8ReadPotsv
 6173              	.LVL378:
 838:Blink.cpp     ****                 transmitData2();
 6174              		.loc 15 838 17 is_stmt 1 view .LVU1773
 838:Blink.cpp     ****                 transmitData2();
 6175              		.loc 15 838 29 is_stmt 0 view .LVU1774
 6176 0042 FFF7FEFF 		bl	_Z12transmitDatav
 6177              	.LVL379:
 839:Blink.cpp     ****                 //set new params for the effect here
 6178              		.loc 15 839 17 is_stmt 1 view .LVU1775
 839:Blink.cpp     ****                 //set new params for the effect here
 6179              		.loc 15 839 30 is_stmt 0 view .LVU1776
 6180 0046 FFF7FEFF 		bl	_Z13transmitData2v
 6181              	.LVL380:
 841:Blink.cpp     ****                 int inc = encoder.Increment();
 6182              		.loc 15 841 17 is_stmt 1 view .LVU1777
 841:Blink.cpp     ****                 int inc = encoder.Increment();
 6183              		.loc 15 841 33 is_stmt 0 view .LVU1778
 6184 004a 3648     		ldr	r0, .L385+12
 6185 004c FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 6186              	.LVL381:
 842:Blink.cpp     ****                 if(inc > 0) {
 6187              		.loc 15 842 17 is_stmt 1 view .LVU1779
 6188              	.LBB813:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 180


 6189              	.LBI813:
  36:../../libDaisy/src/hid/encoder.h **** 
 6190              		.loc 1 36 20 view .LVU1780
 6191              	.LBB814:
  36:../../libDaisy/src/hid/encoder.h **** 
 6192              		.loc 1 36 40 view .LVU1781
  36:../../libDaisy/src/hid/encoder.h **** 
 6193              		.loc 1 36 40 is_stmt 0 view .LVU1782
 6194              	.LBE814:
 6195              	.LBE813:
 852:Blink.cpp     ****                     configuring = 0;
 6196              		.loc 15 852 24 is_stmt 1 view .LVU1783
 858:Blink.cpp     ****                     configuring = 0;
 6197              		.loc 15 858 24 view .LVU1784
 6198              	.LBB816:
 6199              	.LBI816:
 6200              		.loc 1 39 17 view .LVU1785
 6201              	.LBE816:
 6202              	.LBE812:
 6203              	.LBE811:
 6204              	.LBE810:
 6205              	.LBE856:
 6206              		.loc 1 39 38 view .LVU1786
 6207              	.LBB857:
 6208              	.LBB838:
 6209              	.LBB831:
 6210              	.LBB824:
 6211              	.LBB821:
 6212              	.LBB817:
 6213              	.LBI817:
 6214              		.loc 2 70 17 view .LVU1787
 6215              	.LBB818:
 6216              		.loc 2 70 38 view .LVU1788
 6217              		.loc 2 70 38 is_stmt 0 view .LVU1789
 6218              	.LBE818:
 6219              	.LBE817:
 6220              	.LBE821:
 6221              	.LBB822:
 6222              	.LBB815:
  36:../../libDaisy/src/hid/encoder.h **** 
 6223              		.loc 1 36 56 view .LVU1790
 6224 0050 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 6225 0052 1BB1     		cbz	r3, .L366
 6226 0054 636A     		ldr	r3, [r4, #36]
 6227              	.LVL382:
  36:../../libDaisy/src/hid/encoder.h **** 
 6228              		.loc 1 36 56 view .LVU1791
 6229              	.LBE815:
 6230              	.LBE822:
 843:Blink.cpp     ****                     configuring = 0;
 6231              		.loc 15 843 17 is_stmt 1 view .LVU1792
 6232 0056 002B     		cmp	r3, #0
 6233 0058 44DC     		bgt	.L382
 852:Blink.cpp     ****                     configuring = 0;
 6234              		.loc 15 852 24 is_stmt 0 view .LVU1793
 6235 005a 3BD1     		bne	.L383
 6236              	.LVL383:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 181


 6237              	.L366:
 6238              	.LBB823:
 6239              	.LBB820:
 6240              	.LBB819:
 6241              		.loc 2 70 54 view .LVU1794
 6242 005c 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 6243 005e 002B     		cmp	r3, #0
 6244 0060 EBD0     		beq	.L375
 6245              	.LBE819:
 6246              	.LBE820:
 6247              	.LBE823:
 858:Blink.cpp     ****                     configuring = 0;
 6248              		.loc 15 858 24 view .LVU1795
 6249 0062 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 6250 0064 7F2B     		cmp	r3, #127
 6251 0066 E8D1     		bne	.L375
 859:Blink.cpp     ****                     removeEffect();
 6252              		.loc 15 859 21 is_stmt 1 view .LVU1796
 859:Blink.cpp     ****                     removeEffect();
 6253              		.loc 15 859 33 is_stmt 0 view .LVU1797
 6254 0068 0023     		movs	r3, #0
 6255              	.LBE824:
 6256              	.LBE831:
 6257              	.LBE838:
 6258              	.LBE857:
 870:Blink.cpp     **** 
 6259              		.loc 15 870 1 view .LVU1798
 6260 006a BDEC048B 		vldm	sp!, {d8-d9}
 6261              		.cfi_remember_state
 6262              		.cfi_restore 82
 6263              		.cfi_restore 83
 6264              		.cfi_restore 80
 6265              		.cfi_restore 81
 6266              		.cfi_def_cfa_offset 24
 6267              	.LVL384:
 6268              	.LBB858:
 6269              	.LBB839:
 6270              	.LBB832:
 6271              	.LBB825:
 859:Blink.cpp     ****                     removeEffect();
 6272              		.loc 15 859 33 view .LVU1799
 6273 006e 2B70     		strb	r3, [r5]
 860:Blink.cpp     ****                     return;
 6274              		.loc 15 860 21 is_stmt 1 view .LVU1800
 6275              	.LBE825:
 6276              	.LBE832:
 6277              	.LBE839:
 6278              	.LBE858:
 870:Blink.cpp     **** 
 6279              		.loc 15 870 1 is_stmt 0 view .LVU1801
 6280 0070 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 6281              		.cfi_restore 14
 6282              		.cfi_restore 7
 6283              		.cfi_restore 6
 6284              		.cfi_restore 5
 6285              		.cfi_restore 4
 6286              		.cfi_restore 3
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 182


 6287              		.cfi_def_cfa_offset 0
 6288              	.LBB859:
 6289              	.LBB840:
 6290              	.LBB833:
 6291              	.LBB826:
 860:Blink.cpp     ****                     return;
 6292              		.loc 15 860 33 view .LVU1802
 6293 0074 FFF7FEBF 		b	_Z12removeEffectv
 6294              	.LVL385:
 6295              	.L381:
 6296              		.cfi_restore_state
 860:Blink.cpp     ****                     return;
 6297              		.loc 15 860 33 view .LVU1803
 6298              	.LBE826:
 6299              	.LBE833:
 6300              	.LBE840:
 6301              	.LBB841:
 804:Blink.cpp     ****             p3Size++;
 6302              		.loc 15 804 13 is_stmt 1 view .LVU1804
 804:Blink.cpp     ****             p3Size++;
 6303              		.loc 15 804 30 is_stmt 0 view .LVU1805
 6304 0078 2B4B     		ldr	r3, .L385+16
 805:Blink.cpp     ****             bool x = true;
 6305              		.loc 15 805 19 view .LVU1806
 6306 007a 621C     		adds	r2, r4, #1
 804:Blink.cpp     ****             p3Size++;
 6307              		.loc 15 804 30 view .LVU1807
 6308 007c 2B4F     		ldr	r7, .L385+20
 6309 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6310 0080 274D     		ldr	r5, .L385+8
 6311 0082 3B55     		strb	r3, [r7, r4]
 805:Blink.cpp     ****             bool x = true;
 6312              		.loc 15 805 13 is_stmt 1 view .LVU1808
 806:Blink.cpp     ****             while(x){
 6313              		.loc 15 806 13 view .LVU1809
 6314              	.LVL386:
 806:Blink.cpp     ****             while(x){
 6315              		.loc 15 806 13 is_stmt 0 view .LVU1810
 6316 0084 274C     		ldr	r4, .L385+12
 805:Blink.cpp     ****             bool x = true;
 6317              		.loc 15 805 19 view .LVU1811
 6318 0086 3270     		strb	r2, [r6]
 6319              	.L374:
 807:Blink.cpp     ****                 //set effect params here
 6320              		.loc 15 807 13 is_stmt 1 view .LVU1812
 807:Blink.cpp     ****                 //set effect params here
 6321              		.loc 15 807 13 view .LVU1813
 6322              	.LBB842:
 809:Blink.cpp     ****                 setEffectPrams();
 6323              		.loc 15 809 17 view .LVU1814
 809:Blink.cpp     ****                 setEffectPrams();
 6324              		.loc 15 809 29 is_stmt 0 view .LVU1815
 6325 0088 0123     		movs	r3, #1
 6326 008a 2B70     		strb	r3, [r5]
 810:Blink.cpp     ****                 ReadPots();
 6327              		.loc 15 810 17 is_stmt 1 view .LVU1816
 810:Blink.cpp     ****                 ReadPots();
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 183


 6328              		.loc 15 810 31 is_stmt 0 view .LVU1817
 6329 008c FFF7FEFF 		bl	_Z14setEffectPramsv
 6330              	.LVL387:
 811:Blink.cpp     ****                 transmitData();
 6331              		.loc 15 811 17 is_stmt 1 view .LVU1818
 811:Blink.cpp     ****                 transmitData();
 6332              		.loc 15 811 25 is_stmt 0 view .LVU1819
 6333 0090 FFF7FEFF 		bl	_Z8ReadPotsv
 6334              	.LVL388:
 812:Blink.cpp     ****                 transmitData();
 6335              		.loc 15 812 17 is_stmt 1 view .LVU1820
 812:Blink.cpp     ****                 transmitData();
 6336              		.loc 15 812 29 is_stmt 0 view .LVU1821
 6337 0094 FFF7FEFF 		bl	_Z12transmitDatav
 6338              	.LVL389:
 813:Blink.cpp     ****                 encoder.Debounce();
 6339              		.loc 15 813 17 is_stmt 1 view .LVU1822
 813:Blink.cpp     ****                 encoder.Debounce();
 6340              		.loc 15 813 29 is_stmt 0 view .LVU1823
 6341 0098 FFF7FEFF 		bl	_Z12transmitDatav
 6342              	.LVL390:
 814:Blink.cpp     ****         
 6343              		.loc 15 814 17 is_stmt 1 view .LVU1824
 814:Blink.cpp     ****         
 6344              		.loc 15 814 33 is_stmt 0 view .LVU1825
 6345 009c 2148     		ldr	r0, .L385+12
 6346 009e FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 6347              	.LVL391:
 816:Blink.cpp     ****                 if(inc > 0) {
 6348              		.loc 15 816 17 is_stmt 1 view .LVU1826
 6349              	.LBB843:
 6350              	.LBI843:
  36:../../libDaisy/src/hid/encoder.h **** 
 6351              		.loc 1 36 20 view .LVU1827
 6352              	.LBB844:
  36:../../libDaisy/src/hid/encoder.h **** 
 6353              		.loc 1 36 40 view .LVU1828
  36:../../libDaisy/src/hid/encoder.h **** 
 6354              		.loc 1 36 40 is_stmt 0 view .LVU1829
 6355              	.LBE844:
 6356              	.LBE843:
 823:Blink.cpp     ****                     configuring = 0;
 6357              		.loc 15 823 24 is_stmt 1 view .LVU1830
 6358              	.LBB846:
 6359              	.LBB845:
  36:../../libDaisy/src/hid/encoder.h **** 
 6360              		.loc 1 36 56 is_stmt 0 view .LVU1831
 6361 00a2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 6362 00a4 002B     		cmp	r3, #0
 6363 00a6 EFD0     		beq	.L374
 6364 00a8 636A     		ldr	r3, [r4, #36]
 6365              	.LVL392:
  36:../../libDaisy/src/hid/encoder.h **** 
 6366              		.loc 1 36 56 view .LVU1832
 6367              	.LBE845:
 6368              	.LBE846:
 817:Blink.cpp     ****                     p3Size--;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 184


 6369              		.loc 15 817 17 is_stmt 1 view .LVU1833
 6370 00aa 002B     		cmp	r3, #0
 6371 00ac 2BDC     		bgt	.L384
 823:Blink.cpp     ****                     configuring = 0;
 6372              		.loc 15 823 24 is_stmt 0 view .LVU1834
 6373 00ae EBD0     		beq	.L374
 824:Blink.cpp     ****                     return;
 6374              		.loc 15 824 21 is_stmt 1 view .LVU1835
 824:Blink.cpp     ****                     return;
 6375              		.loc 15 824 33 is_stmt 0 view .LVU1836
 6376 00b0 0023     		movs	r3, #0
 6377              	.LVL393:
 824:Blink.cpp     ****                     return;
 6378              		.loc 15 824 33 view .LVU1837
 6379              	.LBE842:
 6380              	.LBE841:
 6381              	.LBE859:
 870:Blink.cpp     **** 
 6382              		.loc 15 870 1 view .LVU1838
 6383 00b2 BDEC048B 		vldm	sp!, {d8-d9}
 6384              		.cfi_remember_state
 6385              		.cfi_restore 82
 6386              		.cfi_restore 83
 6387              		.cfi_restore 80
 6388              		.cfi_restore 81
 6389              		.cfi_def_cfa_offset 24
 6390              	.LBB860:
 6391              	.LBB849:
 6392              	.LBB847:
 824:Blink.cpp     ****                     return;
 6393              		.loc 15 824 33 view .LVU1839
 6394 00b6 2B70     		strb	r3, [r5]
 825:Blink.cpp     **** 
 6395              		.loc 15 825 21 is_stmt 1 view .LVU1840
 6396              	.LBE847:
 6397              	.LBE849:
 6398              	.LBE860:
 870:Blink.cpp     **** 
 6399              		.loc 15 870 1 is_stmt 0 view .LVU1841
 6400 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6401              	.LVL394:
 6402              	.L360:
 6403              		.cfi_restore_state
 829:Blink.cpp     ****             bool y = true;
 6404              		.loc 15 829 16 is_stmt 1 discriminator 4 view .LVU1842
 6405              	.LBB861:
 6406              	.LBB850:
 829:Blink.cpp     ****             bool y = true;
 6407              		.loc 15 829 27 is_stmt 0 discriminator 4 view .LVU1843
 6408 00ba FFF7FEFF 		bl	_Z8containsh
 6409              	.LVL395:
 829:Blink.cpp     ****             bool y = true;
 6410              		.loc 15 829 16 discriminator 4 view .LVU1844
 6411 00be 0028     		cmp	r0, #0
 6412 00c0 AAD1     		bne	.L361
 6413              	.LBE850:
 6414              	.LBE861:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 185


 865:Blink.cpp     ****             errorFlag = 1;
 6415              		.loc 15 865 9 is_stmt 1 view .LVU1845
 6416 00c2 032C     		cmp	r4, #3
 866:Blink.cpp     ****         } else {
 6417              		.loc 15 866 13 view .LVU1846
 866:Blink.cpp     ****         } else {
 6418              		.loc 15 866 23 is_stmt 0 view .LVU1847
 6419 00c4 1A4B     		ldr	r3, .L385+24
 6420 00c6 14BF     		ite	ne
 6421 00c8 0122     		movne	r2, #1
 868:Blink.cpp     ****         }
 6422              		.loc 15 868 13 is_stmt 1 view .LVU1848
 868:Blink.cpp     ****         }
 6423              		.loc 15 868 23 is_stmt 0 view .LVU1849
 6424 00ca 0222     		moveq	r2, #2
 6425 00cc 1A70     		strb	r2, [r3]
 6426              	.L359:
 870:Blink.cpp     **** 
 6427              		.loc 15 870 1 view .LVU1850
 6428 00ce BDEC048B 		vldm	sp!, {d8-d9}
 6429              		.cfi_remember_state
 6430              		.cfi_restore 82
 6431              		.cfi_restore 83
 6432              		.cfi_restore 80
 6433              		.cfi_restore 81
 6434              		.cfi_def_cfa_offset 24
 6435 00d2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6436              	.LVL396:
 6437              	.L383:
 6438              		.cfi_restore_state
 6439              	.LBB862:
 6440              	.LBB851:
 6441              	.LBB834:
 6442              	.LBB827:
 853:Blink.cpp     ****                     //leave new values selected(save)
 6443              		.loc 15 853 21 is_stmt 1 view .LVU1851
 853:Blink.cpp     ****                     //leave new values selected(save)
 6444              		.loc 15 853 33 is_stmt 0 view .LVU1852
 6445 00d4 0023     		movs	r3, #0
 6446              	.LVL397:
 853:Blink.cpp     ****                     //leave new values selected(save)
 6447              		.loc 15 853 33 view .LVU1853
 6448              	.LBE827:
 6449              	.LBE834:
 6450              	.LBE851:
 6451              	.LBE862:
 870:Blink.cpp     **** 
 6452              		.loc 15 870 1 view .LVU1854
 6453 00d6 BDEC048B 		vldm	sp!, {d8-d9}
 6454              		.cfi_remember_state
 6455              		.cfi_restore 82
 6456              		.cfi_restore 83
 6457              		.cfi_restore 80
 6458              		.cfi_restore 81
 6459              		.cfi_def_cfa_offset 24
 6460              	.LVL398:
 6461              	.LBB863:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 186


 6462              	.LBB852:
 6463              	.LBB835:
 6464              	.LBB828:
 853:Blink.cpp     ****                     //leave new values selected(save)
 6465              		.loc 15 853 33 view .LVU1855
 6466 00da 2B70     		strb	r3, [r5]
 855:Blink.cpp     ****                     return;
 6467              		.loc 15 855 21 is_stmt 1 view .LVU1856
 6468              	.LBE828:
 6469              	.LBE835:
 6470              	.LBE852:
 6471              	.LBE863:
 870:Blink.cpp     **** 
 6472              		.loc 15 870 1 is_stmt 0 view .LVU1857
 6473 00dc BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 6474              		.cfi_restore 14
 6475              		.cfi_restore 7
 6476              		.cfi_restore 6
 6477              		.cfi_restore 5
 6478              		.cfi_restore 4
 6479              		.cfi_restore 3
 6480              		.cfi_def_cfa_offset 0
 6481              	.LBB864:
 6482              	.LBB853:
 6483              	.LBB836:
 6484              	.LBB829:
 855:Blink.cpp     ****                     return;
 6485              		.loc 15 855 35 view .LVU1858
 6486 00e0 FFF7FEBF 		b	_Z14setEffectPramsv
 6487              	.LVL399:
 6488              	.L382:
 6489              		.cfi_restore_state
 844:Blink.cpp     ****                     //set prev values (cancel)
 6490              		.loc 15 844 21 is_stmt 1 view .LVU1859
 848:Blink.cpp     ****                     setEffectPrams();
 6491              		.loc 15 848 27 is_stmt 0 view .LVU1860
 6492 00e4 134B     		ldr	r3, .L385+28
 6493              	.LVL400:
 844:Blink.cpp     ****                     //set prev values (cancel)
 6494              		.loc 15 844 33 view .LVU1861
 6495 00e6 0020     		movs	r0, #0
 846:Blink.cpp     ****                     knob2 = b;
 6496              		.loc 15 846 27 view .LVU1862
 6497 00e8 1349     		ldr	r1, .L385+32
 847:Blink.cpp     ****                     knob3 = c;
 6498              		.loc 15 847 27 view .LVU1863
 6499 00ea 144A     		ldr	r2, .L385+36
 848:Blink.cpp     ****                     setEffectPrams();
 6500              		.loc 15 848 27 view .LVU1864
 6501 00ec 83ED008A 		vstr.32	s16, [r3]
 846:Blink.cpp     ****                     knob2 = b;
 6502              		.loc 15 846 27 view .LVU1865
 6503 00f0 81ED009A 		vstr.32	s18, [r1]
 847:Blink.cpp     ****                     knob3 = c;
 6504              		.loc 15 847 27 view .LVU1866
 6505 00f4 C2ED008A 		vstr.32	s17, [r2]
 844:Blink.cpp     ****                     //set prev values (cancel)
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 187


 6506              		.loc 15 844 33 view .LVU1867
 6507 00f8 2870     		strb	r0, [r5]
 846:Blink.cpp     ****                     knob2 = b;
 6508              		.loc 15 846 21 is_stmt 1 view .LVU1868
 847:Blink.cpp     ****                     knob3 = c;
 6509              		.loc 15 847 21 view .LVU1869
 848:Blink.cpp     ****                     setEffectPrams();
 6510              		.loc 15 848 21 view .LVU1870
 849:Blink.cpp     ****                     return;
 6511              		.loc 15 849 21 view .LVU1871
 6512              	.LBE829:
 6513              	.LBE836:
 6514              	.LBE853:
 6515              	.LBE864:
 870:Blink.cpp     **** 
 6516              		.loc 15 870 1 is_stmt 0 view .LVU1872
 6517 00fa BDEC048B 		vldm	sp!, {d8-d9}
 6518              		.cfi_remember_state
 6519              		.cfi_restore 82
 6520              		.cfi_restore 83
 6521              		.cfi_restore 80
 6522              		.cfi_restore 81
 6523              		.cfi_def_cfa_offset 24
 6524              	.LVL401:
 870:Blink.cpp     **** 
 6525              		.loc 15 870 1 view .LVU1873
 6526 00fe BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 6527              		.cfi_restore 14
 6528              		.cfi_restore 7
 6529              		.cfi_restore 6
 6530              		.cfi_restore 5
 6531              		.cfi_restore 4
 6532              		.cfi_restore 3
 6533              		.cfi_def_cfa_offset 0
 6534              	.LBB865:
 6535              	.LBB854:
 6536              	.LBB837:
 6537              	.LBB830:
 849:Blink.cpp     ****                     return;
 6538              		.loc 15 849 35 view .LVU1874
 6539 0102 FFF7FEBF 		b	_Z14setEffectPramsv
 6540              	.LVL402:
 6541              	.L384:
 6542              		.cfi_restore_state
 849:Blink.cpp     ****                     return;
 6543              		.loc 15 849 35 view .LVU1875
 6544              	.LBE830:
 6545              	.LBE837:
 6546              	.LBE854:
 6547              	.LBB855:
 6548              	.LBB848:
 818:Blink.cpp     ****                     profile3[p3Size] = 9;
 6549              		.loc 15 818 21 is_stmt 1 view .LVU1876
 818:Blink.cpp     ****                     profile3[p3Size] = 9;
 6550              		.loc 15 818 27 is_stmt 0 view .LVU1877
 6551 0106 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 6552              	.LVL403:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 188


 819:Blink.cpp     ****                     configuring = 0;
 6553              		.loc 15 819 38 view .LVU1878
 6554 0108 0922     		movs	r2, #9
 818:Blink.cpp     ****                     profile3[p3Size] = 9;
 6555              		.loc 15 818 27 view .LVU1879
 6556 010a 013B     		subs	r3, r3, #1
 6557 010c DBB2     		uxtb	r3, r3
 6558 010e 3370     		strb	r3, [r6]
 819:Blink.cpp     ****                     configuring = 0;
 6559              		.loc 15 819 21 is_stmt 1 view .LVU1880
 819:Blink.cpp     ****                     configuring = 0;
 6560              		.loc 15 819 38 is_stmt 0 view .LVU1881
 6561 0110 FA54     		strb	r2, [r7, r3]
 820:Blink.cpp     ****                     return;
 6562              		.loc 15 820 21 is_stmt 1 view .LVU1882
 820:Blink.cpp     ****                     return;
 6563              		.loc 15 820 33 is_stmt 0 view .LVU1883
 6564 0112 0023     		movs	r3, #0
 6565 0114 2B70     		strb	r3, [r5]
 821:Blink.cpp     **** 
 6566              		.loc 15 821 21 is_stmt 1 view .LVU1884
 6567 0116 DAE7     		b	.L359
 6568              	.L386:
 6569              		.align	2
 6570              	.L385:
 6571 0118 00000000 		.word	.LANCHOR33
 6572 011c 00000000 		.word	.LANCHOR5
 6573 0120 00000000 		.word	.LANCHOR71
 6574 0124 00000000 		.word	.LANCHOR74
 6575 0128 00000000 		.word	.LANCHOR35
 6576 012c 00000000 		.word	.LANCHOR34
 6577 0130 00000000 		.word	.LANCHOR72
 6578 0134 00000000 		.word	.LANCHOR68
 6579 0138 00000000 		.word	.LANCHOR66
 6580 013c 00000000 		.word	.LANCHOR67
 6581              	.LBE848:
 6582              	.LBE855:
 6583              	.LBE865:
 6584              		.cfi_endproc
 6585              	.LFE4906:
 6587              		.section	.text.startup.main,"ax",%progbits
 6588              		.align	1
 6589              		.p2align 2,,3
 6590              		.global	main
 6591              		.syntax unified
 6592              		.thumb
 6593              		.thumb_func
 6594              		.fpu fpv5-d16
 6596              	main:
 6597              	.LFB4912:
 961:Blink.cpp     **** 
 962:Blink.cpp     **** int main(void) {
 6598              		.loc 15 962 16 view -0
 6599              		.cfi_startproc
 6600              		@ args = 0, pretend = 0, frame = 104
 6601              		@ frame_needed = 0, uses_anonymous_args = 0
 963:Blink.cpp     **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 189


 964:Blink.cpp     ****     hw.Configure();
 6602              		.loc 15 964 5 view .LVU1886
 962:Blink.cpp     **** 
 6603              		.loc 15 962 16 is_stmt 0 view .LVU1887
 6604 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6605              		.cfi_def_cfa_offset 24
 6606              		.cfi_offset 4, -24
 6607              		.cfi_offset 5, -20
 6608              		.cfi_offset 6, -16
 6609              		.cfi_offset 7, -12
 6610              		.cfi_offset 8, -8
 6611              		.cfi_offset 14, -4
 6612              		.loc 15 964 17 view .LVU1888
 6613 0004 A948     		ldr	r0, .L416
 6614              	.LBB866:
 6615              	.LBB867:
  70:../../DaisySP/Source/Filters/ladder.h ****     ~LadderFilter() = default;
  71:../../DaisySP/Source/Filters/ladder.h **** 
  72:../../DaisySP/Source/Filters/ladder.h ****     /** Initializes the ladder filter module.
  73:../../DaisySP/Source/Filters/ladder.h ****      */
  74:../../DaisySP/Source/Filters/ladder.h ****     void Init(float sample_rate);
  75:../../DaisySP/Source/Filters/ladder.h **** 
  76:../../DaisySP/Source/Filters/ladder.h ****     /** Process single sample */
  77:../../DaisySP/Source/Filters/ladder.h ****     float Process(float in);
  78:../../DaisySP/Source/Filters/ladder.h **** 
  79:../../DaisySP/Source/Filters/ladder.h ****     /** Process mono buffer/block of samples in place */
  80:../../DaisySP/Source/Filters/ladder.h ****     void ProcessBlock(float* buf, size_t size);
  81:../../DaisySP/Source/Filters/ladder.h **** 
  82:../../DaisySP/Source/Filters/ladder.h ****     /**
  83:../../DaisySP/Source/Filters/ladder.h ****         Sets the cutoff frequency of the filter.
  84:../../DaisySP/Source/Filters/ladder.h ****         Units of hz, valid in range 5 - ~nyquist (samp_rate / 2)
  85:../../DaisySP/Source/Filters/ladder.h ****         Internally clamped to this range.
  86:../../DaisySP/Source/Filters/ladder.h ****     */
  87:../../DaisySP/Source/Filters/ladder.h ****     void SetFreq(float freq);
  88:../../DaisySP/Source/Filters/ladder.h **** 
  89:../../DaisySP/Source/Filters/ladder.h ****     /**
  90:../../DaisySP/Source/Filters/ladder.h ****         Sets the resonance of the filter.
  91:../../DaisySP/Source/Filters/ladder.h ****         Filter will stably self oscillate at higher values.
  92:../../DaisySP/Source/Filters/ladder.h ****         Valid in range 0 - 1.8
  93:../../DaisySP/Source/Filters/ladder.h ****         Internally clamped to this range.
  94:../../DaisySP/Source/Filters/ladder.h ****     */
  95:../../DaisySP/Source/Filters/ladder.h ****     void SetRes(float res);
  96:../../DaisySP/Source/Filters/ladder.h **** 
  97:../../DaisySP/Source/Filters/ladder.h ****     /**
  98:../../DaisySP/Source/Filters/ladder.h ****         Set "passband gain" compensation factor to mitigate
  99:../../DaisySP/Source/Filters/ladder.h ****         loss of energy in passband at higher resonance values.
 100:../../DaisySP/Source/Filters/ladder.h ****         Drive and passband gain have a dependent relationship.
 101:../../DaisySP/Source/Filters/ladder.h ****         Valid in range 0 - 0.5
 102:../../DaisySP/Source/Filters/ladder.h ****         Internally clamped to this range.
 103:../../DaisySP/Source/Filters/ladder.h ****      */
 104:../../DaisySP/Source/Filters/ladder.h ****     void SetPassbandGain(float pbg);
 105:../../DaisySP/Source/Filters/ladder.h **** 
 106:../../DaisySP/Source/Filters/ladder.h ****     /**
 107:../../DaisySP/Source/Filters/ladder.h ****         Sets drive of the input stage into the tanh clipper
 108:../../DaisySP/Source/Filters/ladder.h ****         Valid in range 0 - 4.0
 109:../../DaisySP/Source/Filters/ladder.h ****      */
 110:../../DaisySP/Source/Filters/ladder.h ****     void SetInputDrive(float drv);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 190


 111:../../DaisySP/Source/Filters/ladder.h **** 
 112:../../DaisySP/Source/Filters/ladder.h ****     /**
 113:../../DaisySP/Source/Filters/ladder.h ****         Sets the filter mode/response
 114:../../DaisySP/Source/Filters/ladder.h ****         Defaults to classic lowpass 24dB/oct
 115:../../DaisySP/Source/Filters/ladder.h ****      */
 116:../../DaisySP/Source/Filters/ladder.h ****     inline void SetFilterMode(FilterMode mode) { mode_ = mode; }
 6616              		.loc 14 116 56 view .LVU1889
 6617 0006 0427     		movs	r7, #4
 6618              	.LBE867:
 6619              	.LBE866:
 965:Blink.cpp     ****     hw.Init();
 966:Blink.cpp     **** 
 967:Blink.cpp     ****     System::Delay(1000);//need to make sure esp32 display starts before us for uart to work
 968:Blink.cpp     ****     
 969:Blink.cpp     ****     hw.SetAudioBlockSize(2);//sample buffer size
 970:Blink.cpp     ****     //long story audiocallback causes a transient, since its periodic we get a tone at sample rate 
 971:Blink.cpp     ****     //48k/2 = 24k which is inaudible
 972:Blink.cpp     ****     float sr = hw.AudioSampleRate();
 973:Blink.cpp     ****     ch.Init(sr);
 974:Blink.cpp     ****     fl.Init(sr);
 975:Blink.cpp     ****     trem.Init(sr);
 976:Blink.cpp     ****     ph.Init(sr);
 977:Blink.cpp     ****     wahflt.Init(sr);
 6620              		.loc 15 977 16 view .LVU1890
 6621 0008 A94D     		ldr	r5, .L416+4
 978:Blink.cpp     ****     wahflt.SetFilterMode(LadderFilter::FilterMode::BP12);
 979:Blink.cpp     ****     wahflt.SetRes(0.8);
 980:Blink.cpp     ****     wahflt.SetPassbandGain(0.25);
 981:Blink.cpp     ****     wahflt.SetInputDrive(2.2);
 982:Blink.cpp     **** 
 983:Blink.cpp     ****     hp.Init(sr);
 6622              		.loc 15 983 12 view .LVU1891
 6623 000a AA4C     		ldr	r4, .L416+8
 984:Blink.cpp     ****     hp.SetFilterMode(LadderFilter::FilterMode::HP24);
 985:Blink.cpp     ****     hp.SetRes(0.0);
 986:Blink.cpp     ****     hp.SetInputDrive(1.0);
 987:Blink.cpp     ****     hp.SetPassbandGain(1.0);
 988:Blink.cpp     ****     hp.SetFreq(100);
 989:Blink.cpp     **** 
 990:Blink.cpp     ****     lp.Init(sr);
 991:Blink.cpp     ****     lp.SetFilterMode(LadderFilter::FilterMode::LP24);
 992:Blink.cpp     ****     lp.SetRes(0.1);
 993:Blink.cpp     ****     lp.SetInputDrive(1.0);
 994:Blink.cpp     ****     lp.SetPassbandGain(1.0);
 995:Blink.cpp     ****     lp.SetFreq(15000);
 996:Blink.cpp     **** 
 997:Blink.cpp     ****     delMem1.Init();
 998:Blink.cpp     ****     del1.del = &delMem1;
 999:Blink.cpp     ****     del1.delayTarget = 2400;
 6624              		.loc 15 999 22 view .LVU1892
 6625 000c DFF81883 		ldr	r8, .L416+124
 6626              	.LBB870:
 6627              	.LBB871:
 6628              	.LBB872:
  44:../../DaisySP/Source/Utility/delayline.h ****         delay_     = 1;
 6629              		.loc 13 44 20 view .LVU1893
 6630 0010 A94E     		ldr	r6, .L416+12
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 191


 6631              	.LBE872:
 6632              	.LBE871:
 6633              	.LBE870:
 962:Blink.cpp     **** 
 6634              		.loc 15 962 16 view .LVU1894
 6635 0012 2DED028B 		vpush.64	{d8}
 6636              		.cfi_def_cfa_offset 32
 6637              		.cfi_offset 80, -32
 6638              		.cfi_offset 81, -28
 6639 0016 9AB0     		sub	sp, sp, #104
 6640              		.cfi_def_cfa_offset 136
 964:Blink.cpp     ****     hw.Init();
 6641              		.loc 15 964 17 view .LVU1895
 6642 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6643              	.LVL404:
 965:Blink.cpp     **** 
 6644              		.loc 15 965 5 is_stmt 1 view .LVU1896
 965:Blink.cpp     **** 
 6645              		.loc 15 965 12 is_stmt 0 view .LVU1897
 6646 001c 0021     		movs	r1, #0
 6647 001e A348     		ldr	r0, .L416
 6648 0020 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6649              	.LVL405:
 967:Blink.cpp     ****     
 6650              		.loc 15 967 5 is_stmt 1 view .LVU1898
 967:Blink.cpp     ****     
 6651              		.loc 15 967 18 is_stmt 0 view .LVU1899
 6652 0024 4FF47A70 		mov	r0, #1000
 6653 0028 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 6654              	.LVL406:
 969:Blink.cpp     ****     //long story audiocallback causes a transient, since its periodic we get a tone at sample rate 
 6655              		.loc 15 969 5 is_stmt 1 view .LVU1900
 969:Blink.cpp     ****     //long story audiocallback causes a transient, since its periodic we get a tone at sample rate 
 6656              		.loc 15 969 25 is_stmt 0 view .LVU1901
 6657 002c 0221     		movs	r1, #2
 6658 002e 9F48     		ldr	r0, .L416
 6659 0030 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 6660              	.LVL407:
 972:Blink.cpp     ****     ch.Init(sr);
 6661              		.loc 15 972 5 is_stmt 1 view .LVU1902
 972:Blink.cpp     ****     ch.Init(sr);
 6662              		.loc 15 972 34 is_stmt 0 view .LVU1903
 6663 0034 9D48     		ldr	r0, .L416
 6664 0036 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6665              	.LVL408:
 6666 003a B0EE408A 		vmov.f32	s16, s0
 6667              	.LVL409:
 973:Blink.cpp     ****     fl.Init(sr);
 6668              		.loc 15 973 5 is_stmt 1 view .LVU1904
 973:Blink.cpp     ****     fl.Init(sr);
 6669              		.loc 15 973 12 is_stmt 0 view .LVU1905
 6670 003e 9F48     		ldr	r0, .L416+16
 6671 0040 FFF7FEFF 		bl	_ZN7daisysp6Chorus4InitEf
 6672              	.LVL410:
 974:Blink.cpp     ****     trem.Init(sr);
 6673              		.loc 15 974 5 is_stmt 1 view .LVU1906
 974:Blink.cpp     ****     trem.Init(sr);
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 192


 6674              		.loc 15 974 12 is_stmt 0 view .LVU1907
 6675 0044 9E48     		ldr	r0, .L416+20
 6676 0046 B0EE480A 		vmov.f32	s0, s16
 6677 004a FFF7FEFF 		bl	_ZN7daisysp7Flanger4InitEf
 6678              	.LVL411:
 975:Blink.cpp     ****     ph.Init(sr);
 6679              		.loc 15 975 5 is_stmt 1 view .LVU1908
 975:Blink.cpp     ****     ph.Init(sr);
 6680              		.loc 15 975 14 is_stmt 0 view .LVU1909
 6681 004e B0EE480A 		vmov.f32	s0, s16
 6682 0052 9C48     		ldr	r0, .L416+24
 6683 0054 FFF7FEFF 		bl	_ZN7daisysp7Tremolo4InitEf
 6684              	.LVL412:
 976:Blink.cpp     ****     wahflt.Init(sr);
 6685              		.loc 15 976 5 is_stmt 1 view .LVU1910
 976:Blink.cpp     ****     wahflt.Init(sr);
 6686              		.loc 15 976 12 is_stmt 0 view .LVU1911
 6687 0058 B0EE480A 		vmov.f32	s0, s16
 6688 005c 9A48     		ldr	r0, .L416+28
 6689 005e FFF7FEFF 		bl	_ZN7daisysp6Phaser4InitEf
 6690              	.LVL413:
 977:Blink.cpp     ****     wahflt.SetFilterMode(LadderFilter::FilterMode::BP12);
 6691              		.loc 15 977 5 is_stmt 1 view .LVU1912
 977:Blink.cpp     ****     wahflt.SetFilterMode(LadderFilter::FilterMode::BP12);
 6692              		.loc 15 977 16 is_stmt 0 view .LVU1913
 6693 0062 B0EE480A 		vmov.f32	s0, s16
 6694 0066 2846     		mov	r0, r5
 6695 0068 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter4InitEf
 6696              	.LVL414:
 978:Blink.cpp     ****     wahflt.SetRes(0.8);
 6697              		.loc 15 978 5 is_stmt 1 view .LVU1914
 6698              	.LBB881:
 6699              	.LBI881:
 6700              		.loc 14 116 17 view .LVU1915
 6701              	.LBB882:
 6702              		.loc 14 116 50 view .LVU1916
 6703              		.loc 14 116 56 is_stmt 0 view .LVU1917
 6704 006c 0323     		movs	r3, #3
 6705              	.LBE882:
 6706              	.LBE881:
 979:Blink.cpp     ****     wahflt.SetPassbandGain(0.25);
 6707              		.loc 15 979 18 view .LVU1918
 6708 006e 2846     		mov	r0, r5
 6709 0070 9FED960A 		vldr.32	s0, .L416+32
 6710              	.LBB884:
 6711              	.LBB883:
 6712              		.loc 14 116 56 view .LVU1919
 6713 0074 AB65     		str	r3, [r5, #88]
 6714              	.LVL415:
 6715              		.loc 14 116 56 view .LVU1920
 6716              	.LBE883:
 6717              	.LBE884:
 979:Blink.cpp     ****     wahflt.SetPassbandGain(0.25);
 6718              		.loc 15 979 5 is_stmt 1 view .LVU1921
 979:Blink.cpp     ****     wahflt.SetPassbandGain(0.25);
 6719              		.loc 15 979 18 is_stmt 0 view .LVU1922
 6720 0076 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter6SetResEf
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 193


 6721              	.LVL416:
 980:Blink.cpp     ****     wahflt.SetInputDrive(2.2);
 6722              		.loc 15 980 5 is_stmt 1 view .LVU1923
 980:Blink.cpp     ****     wahflt.SetInputDrive(2.2);
 6723              		.loc 15 980 27 is_stmt 0 view .LVU1924
 6724 007a 2846     		mov	r0, r5
 6725 007c B5EE000A 		vmov.f32	s0, #2.5e-1
 6726 0080 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter15SetPassbandGainEf
 6727              	.LVL417:
 981:Blink.cpp     **** 
 6728              		.loc 15 981 5 is_stmt 1 view .LVU1925
 981:Blink.cpp     **** 
 6729              		.loc 15 981 25 is_stmt 0 view .LVU1926
 6730 0084 2846     		mov	r0, r5
 6731 0086 9FED920A 		vldr.32	s0, .L416+36
 6732 008a FFF7FEFF 		bl	_ZN7daisysp12LadderFilter13SetInputDriveEf
 6733              	.LVL418:
 983:Blink.cpp     ****     hp.SetFilterMode(LadderFilter::FilterMode::HP24);
 6734              		.loc 15 983 5 is_stmt 1 view .LVU1927
 983:Blink.cpp     ****     hp.SetFilterMode(LadderFilter::FilterMode::HP24);
 6735              		.loc 15 983 12 is_stmt 0 view .LVU1928
 6736 008e B0EE480A 		vmov.f32	s0, s16
 6737 0092 2046     		mov	r0, r4
 990:Blink.cpp     ****     lp.SetFilterMode(LadderFilter::FilterMode::LP24);
 6738              		.loc 15 990 12 view .LVU1929
 6739 0094 8F4D     		ldr	r5, .L416+40
 983:Blink.cpp     ****     hp.SetFilterMode(LadderFilter::FilterMode::HP24);
 6740              		.loc 15 983 12 view .LVU1930
 6741 0096 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter4InitEf
 6742              	.LVL419:
 984:Blink.cpp     ****     hp.SetRes(0.0);
 6743              		.loc 15 984 5 is_stmt 1 view .LVU1931
 6744              	.LBB885:
 6745              	.LBI866:
 6746              		.loc 14 116 17 view .LVU1932
 6747              	.LBB868:
 6748              		.loc 14 116 50 view .LVU1933
 6749              	.LBE868:
 6750              	.LBE885:
 985:Blink.cpp     ****     hp.SetInputDrive(1.0);
 6751              		.loc 15 985 14 is_stmt 0 view .LVU1934
 6752 009a 2046     		mov	r0, r4
 6753 009c 9FED8E0A 		vldr.32	s0, .L416+44
 6754              	.LBB886:
 6755              	.LBB869:
 6756              		.loc 14 116 56 view .LVU1935
 6757 00a0 A765     		str	r7, [r4, #88]
 6758              	.LVL420:
 6759              		.loc 14 116 56 view .LVU1936
 6760              	.LBE869:
 6761              	.LBE886:
 985:Blink.cpp     ****     hp.SetInputDrive(1.0);
 6762              		.loc 15 985 5 is_stmt 1 view .LVU1937
 985:Blink.cpp     ****     hp.SetInputDrive(1.0);
 6763              		.loc 15 985 14 is_stmt 0 view .LVU1938
 6764 00a2 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter6SetResEf
 6765              	.LVL421:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 194


 986:Blink.cpp     ****     hp.SetPassbandGain(1.0);
 6766              		.loc 15 986 5 is_stmt 1 view .LVU1939
 986:Blink.cpp     ****     hp.SetPassbandGain(1.0);
 6767              		.loc 15 986 21 is_stmt 0 view .LVU1940
 6768 00a6 2046     		mov	r0, r4
 6769 00a8 B7EE000A 		vmov.f32	s0, #1.0e+0
 6770 00ac FFF7FEFF 		bl	_ZN7daisysp12LadderFilter13SetInputDriveEf
 6771              	.LVL422:
 987:Blink.cpp     ****     hp.SetFreq(100);
 6772              		.loc 15 987 5 is_stmt 1 view .LVU1941
 987:Blink.cpp     ****     hp.SetFreq(100);
 6773              		.loc 15 987 23 is_stmt 0 view .LVU1942
 6774 00b0 2046     		mov	r0, r4
 6775 00b2 B7EE000A 		vmov.f32	s0, #1.0e+0
 6776 00b6 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter15SetPassbandGainEf
 6777              	.LVL423:
 988:Blink.cpp     **** 
 6778              		.loc 15 988 5 is_stmt 1 view .LVU1943
 988:Blink.cpp     **** 
 6779              		.loc 15 988 15 is_stmt 0 view .LVU1944
 6780 00ba 2046     		mov	r0, r4
 6781 00bc 9FED870A 		vldr.32	s0, .L416+48
 6782              	.LBB887:
 6783              	.LBB888:
 6784              		.loc 14 116 56 view .LVU1945
 6785 00c0 0024     		movs	r4, #0
 6786              	.LBE888:
 6787              	.LBE887:
 988:Blink.cpp     **** 
 6788              		.loc 15 988 15 view .LVU1946
 6789 00c2 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7SetFreqEf
 6790              	.LVL424:
 990:Blink.cpp     ****     lp.SetFilterMode(LadderFilter::FilterMode::LP24);
 6791              		.loc 15 990 5 is_stmt 1 view .LVU1947
 990:Blink.cpp     ****     lp.SetFilterMode(LadderFilter::FilterMode::LP24);
 6792              		.loc 15 990 12 is_stmt 0 view .LVU1948
 6793 00c6 B0EE480A 		vmov.f32	s0, s16
 6794 00ca 2846     		mov	r0, r5
1000:Blink.cpp     ****     del1.feedback = 0.25;
 6795              		.loc 15 1000 19 view .LVU1949
 6796 00cc B5EE008A 		vmov.f32	s16, #2.5e-1
 6797              	.LVL425:
 990:Blink.cpp     ****     lp.SetFilterMode(LadderFilter::FilterMode::LP24);
 6798              		.loc 15 990 12 view .LVU1950
 6799 00d0 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter4InitEf
 6800              	.LVL426:
 991:Blink.cpp     ****     lp.SetRes(0.1);
 6801              		.loc 15 991 5 is_stmt 1 view .LVU1951
 6802              	.LBB891:
 6803              	.LBI887:
 6804              		.loc 14 116 17 view .LVU1952
 6805              	.LBB889:
 6806              		.loc 14 116 50 view .LVU1953
 6807              	.LBE889:
 6808              	.LBE891:
 992:Blink.cpp     ****     lp.SetInputDrive(1.0);
 6809              		.loc 15 992 14 is_stmt 0 view .LVU1954
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 195


 6810 00d4 2846     		mov	r0, r5
 6811 00d6 9FED820A 		vldr.32	s0, .L416+52
 6812              	.LBB892:
 6813              	.LBB890:
 6814              		.loc 14 116 56 view .LVU1955
 6815 00da AC65     		str	r4, [r5, #88]
 6816              	.LVL427:
 6817              		.loc 14 116 56 view .LVU1956
 6818              	.LBE890:
 6819              	.LBE892:
 992:Blink.cpp     ****     lp.SetInputDrive(1.0);
 6820              		.loc 15 992 5 is_stmt 1 view .LVU1957
 992:Blink.cpp     ****     lp.SetInputDrive(1.0);
 6821              		.loc 15 992 14 is_stmt 0 view .LVU1958
 6822 00dc FFF7FEFF 		bl	_ZN7daisysp12LadderFilter6SetResEf
 6823              	.LVL428:
 993:Blink.cpp     ****     lp.SetPassbandGain(1.0);
 6824              		.loc 15 993 5 is_stmt 1 view .LVU1959
 993:Blink.cpp     ****     lp.SetPassbandGain(1.0);
 6825              		.loc 15 993 21 is_stmt 0 view .LVU1960
 6826 00e0 2846     		mov	r0, r5
 6827 00e2 B7EE000A 		vmov.f32	s0, #1.0e+0
 6828 00e6 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter13SetInputDriveEf
 6829              	.LVL429:
 994:Blink.cpp     ****     lp.SetFreq(15000);
 6830              		.loc 15 994 5 is_stmt 1 view .LVU1961
 994:Blink.cpp     ****     lp.SetFreq(15000);
 6831              		.loc 15 994 23 is_stmt 0 view .LVU1962
 6832 00ea 2846     		mov	r0, r5
 6833 00ec B7EE000A 		vmov.f32	s0, #1.0e+0
 6834 00f0 FFF7FEFF 		bl	_ZN7daisysp12LadderFilter15SetPassbandGainEf
 6835              	.LVL430:
 995:Blink.cpp     **** 
 6836              		.loc 15 995 5 is_stmt 1 view .LVU1963
 995:Blink.cpp     **** 
 6837              		.loc 15 995 15 is_stmt 0 view .LVU1964
 6838 00f4 9FED7B0A 		vldr.32	s0, .L416+56
 6839 00f8 2846     		mov	r0, r5
 6840              	.LBB893:
 6841              	.LBB894:
 6842              	.LBB895:
  45:../../DaisySP/Source/Utility/delayline.h ****     }
 6843              		.loc 13 45 20 view .LVU1965
 6844 00fa 0125     		movs	r5, #1
 6845              	.LBE895:
 6846              	.LBE894:
 6847              	.LBE893:
 995:Blink.cpp     **** 
 6848              		.loc 15 995 15 view .LVU1966
 6849 00fc FFF7FEFF 		bl	_ZN7daisysp12LadderFilter7SetFreqEf
 6850              	.LVL431:
 997:Blink.cpp     ****     del1.del = &delMem1;
 6851              		.loc 15 997 5 is_stmt 1 view .LVU1967
 6852              	.LBB903:
 6853              	.LBI893:
  35:../../DaisySP/Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
 6854              		.loc 13 35 10 view .LVU1968
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 196


 6855              	.LBB900:
 6856              	.LBB897:
 6857              	.LBB896:
  40:../../DaisySP/Source/Utility/delayline.h ****         {
 6858              		.loc 13 40 29 view .LVU1969
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6859              		.loc 13 42 22 is_stmt 0 view .LVU1970
 6860 0100 2146     		mov	r1, r4
 6861 0102 794A     		ldr	r2, .L416+60
 6862 0104 7948     		ldr	r0, .L416+64
 6863 0106 FFF7FEFF 		bl	memset
 6864              	.LVL432:
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6865              		.loc 13 42 22 view .LVU1971
 6866              	.LBE896:
 6867              	.LBE897:
 6868              	.LBE900:
 6869              	.LBE903:
 998:Blink.cpp     ****     del1.delayTarget = 2400;
 6870              		.loc 15 998 14 view .LVU1972
 6871 010a 794B     		ldr	r3, .L416+68
 6872              	.LBB904:
 6873              	.LBB901:
 6874              	.LBB898:
  44:../../DaisySP/Source/Utility/delayline.h ****         delay_     = 1;
 6875              		.loc 13 44 20 view .LVU1973
 6876 010c 794A     		ldr	r2, .L416+72
 6877              	.LBE898:
 6878              	.LBE901:
 6879              	.LBE904:
 6880              	.LBB905:
 6881              	.LBB878:
 6882              	.LBB875:
 6883              	.LBB873:
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6884              		.loc 13 42 22 view .LVU1974
 6885 010e 2146     		mov	r1, r4
 6886 0110 7948     		ldr	r0, .L416+76
 6887              	.LBE873:
 6888              	.LBE875:
 6889              	.LBE878:
 6890              	.LBE905:
 998:Blink.cpp     ****     del1.delayTarget = 2400;
 6891              		.loc 15 998 14 view .LVU1975
 6892 0112 1A60     		str	r2, [r3]
 999:Blink.cpp     ****     del1.feedback = 0.25;
 6893              		.loc 15 999 22 view .LVU1976
 6894 0114 C3F80880 		str	r8, [r3, #8]	@ float
 6895              		.loc 15 1000 19 view .LVU1977
 6896 0118 83ED038A 		vstr.32	s16, [r3, #12]
 6897              	.LBB906:
 6898              	.LBB902:
 6899              	.LBB899:
  45:../../DaisySP/Source/Utility/delayline.h ****     }
 6900              		.loc 13 45 20 view .LVU1978
 6901 011c C2E90145 		strd	r4, r5, [r2, #4]
 6902              	.LVL433:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 197


  45:../../DaisySP/Source/Utility/delayline.h ****     }
 6903              		.loc 13 45 20 view .LVU1979
 6904              	.LBE899:
 6905              	.LBE902:
 6906              	.LBE906:
 998:Blink.cpp     ****     del1.delayTarget = 2400;
 6907              		.loc 15 998 5 is_stmt 1 view .LVU1980
 999:Blink.cpp     ****     del1.feedback = 0.25;
 6908              		.loc 15 999 5 view .LVU1981
 6909              		.loc 15 1000 5 view .LVU1982
1001:Blink.cpp     **** 
1002:Blink.cpp     ****     delMem2.Init();
 6910              		.loc 15 1002 5 view .LVU1983
 6911              	.LBB907:
 6912              	.LBI870:
  35:../../DaisySP/Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
 6913              		.loc 13 35 10 view .LVU1984
 6914              	.LBB879:
 6915              	.LBB876:
 6916              	.LBB874:
  40:../../DaisySP/Source/Utility/delayline.h ****         {
 6917              		.loc 13 40 29 view .LVU1985
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6918              		.loc 13 42 22 is_stmt 0 view .LVU1986
 6919 0120 714A     		ldr	r2, .L416+60
 6920 0122 FFF7FEFF 		bl	memset
 6921              	.LVL434:
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6922              		.loc 13 42 22 view .LVU1987
 6923              	.LBE874:
 6924              	.LBE876:
 6925              	.LBE879:
 6926              	.LBE907:
1003:Blink.cpp     ****     del2.del = &delMem2;
 6927              		.loc 15 1003 14 view .LVU1988
 6928 0126 754B     		ldr	r3, .L416+80
 6929              	.LBB908:
 6930              	.LBB909:
 6931              	.LBB910:
 6932              	.LBB911:
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6933              		.loc 13 42 22 view .LVU1989
 6934 0128 6F4A     		ldr	r2, .L416+60
 6935 012a 2146     		mov	r1, r4
 6936 012c 7448     		ldr	r0, .L416+84
 6937              	.LBE911:
 6938              	.LBE910:
 6939              	.LBE909:
 6940              	.LBE908:
 6941              		.loc 15 1003 14 view .LVU1990
 6942 012e 1E60     		str	r6, [r3]
1004:Blink.cpp     ****     del2.delayTarget = 2400;
 6943              		.loc 15 1004 22 view .LVU1991
 6944 0130 C3F80880 		str	r8, [r3, #8]	@ float
1005:Blink.cpp     ****     del2.feedback = 0.25;
 6945              		.loc 15 1005 19 view .LVU1992
 6946 0134 83ED038A 		vstr.32	s16, [r3, #12]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 198


 6947              	.LBB917:
 6948              	.LBB880:
 6949              	.LBB877:
  45:../../DaisySP/Source/Utility/delayline.h ****     }
 6950              		.loc 13 45 20 view .LVU1993
 6951 0138 C6E90145 		strd	r4, r5, [r6, #4]
 6952              	.LVL435:
  45:../../DaisySP/Source/Utility/delayline.h ****     }
 6953              		.loc 13 45 20 view .LVU1994
 6954              	.LBE877:
 6955              	.LBE880:
 6956              	.LBE917:
1003:Blink.cpp     ****     del2.delayTarget = 2400;
 6957              		.loc 15 1003 5 is_stmt 1 view .LVU1995
1004:Blink.cpp     ****     del2.feedback = 0.25;
 6958              		.loc 15 1004 5 view .LVU1996
 6959              		.loc 15 1005 5 view .LVU1997
1006:Blink.cpp     **** 
1007:Blink.cpp     ****     delMem3.Init();
 6960              		.loc 15 1007 5 view .LVU1998
 6961              	.LBB918:
 6962              	.LBI908:
  35:../../DaisySP/Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
 6963              		.loc 13 35 10 view .LVU1999
 6964              	.LBB915:
 6965              	.LBB913:
 6966              	.LBB912:
  40:../../DaisySP/Source/Utility/delayline.h ****         {
 6967              		.loc 13 40 29 view .LVU2000
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6968              		.loc 13 42 22 is_stmt 0 view .LVU2001
 6969 013c FFF7FEFF 		bl	memset
 6970              	.LVL436:
  42:../../DaisySP/Source/Utility/delayline.h ****         }
 6971              		.loc 13 42 22 view .LVU2002
 6972              	.LBE912:
 6973              	.LBE913:
 6974              	.LBE915:
 6975              	.LBE918:
1008:Blink.cpp     ****     del3.del = &delMem2;
 6976              		.loc 15 1008 14 view .LVU2003
 6977 0140 704B     		ldr	r3, .L416+88
 6978 0142 1E60     		str	r6, [r3]
1009:Blink.cpp     ****     del3.delayTarget = 2400;
 6979              		.loc 15 1009 22 view .LVU2004
 6980 0144 C3F80880 		str	r8, [r3, #8]	@ float
1010:Blink.cpp     ****     del3.feedback = 0.25;
 6981              		.loc 15 1010 19 view .LVU2005
 6982 0148 83ED038A 		vstr.32	s16, [r3, #12]
 6983              	.LBB919:
 6984              	.LBB916:
 6985              	.LBB914:
  44:../../DaisySP/Source/Utility/delayline.h ****         delay_     = 1;
 6986              		.loc 13 44 20 view .LVU2006
 6987 014c 6E4B     		ldr	r3, .L416+92
 6988 014e 6F4E     		ldr	r6, .L416+96
  45:../../DaisySP/Source/Utility/delayline.h ****     }
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 199


 6989              		.loc 13 45 20 view .LVU2007
 6990 0150 C3E90145 		strd	r4, r5, [r3, #4]
 6991              	.LVL437:
  45:../../DaisySP/Source/Utility/delayline.h ****     }
 6992              		.loc 13 45 20 view .LVU2008
 6993              	.LBE914:
 6994              	.LBE916:
 6995              	.LBE919:
1008:Blink.cpp     ****     del3.delayTarget = 2400;
 6996              		.loc 15 1008 5 is_stmt 1 view .LVU2009
1009:Blink.cpp     ****     del3.feedback = 0.25;
 6997              		.loc 15 1009 5 view .LVU2010
 6998              		.loc 15 1010 5 view .LVU2011
1011:Blink.cpp     **** 
1012:Blink.cpp     **** 
1013:Blink.cpp     **** 
1014:Blink.cpp     ****     
1015:Blink.cpp     ****     InitializeADC();
 6999              		.loc 15 1015 5 view .LVU2012
 7000              		.loc 15 1015 18 is_stmt 0 view .LVU2013
 7001 0154 FFF7FEFF 		bl	_Z13InitializeADCv
 7002              	.LVL438:
1016:Blink.cpp     **** 
1017:Blink.cpp     ****     //init footswitches and encoder
1018:Blink.cpp     ****     Switch button1, button2, button3;
 7003              		.loc 15 1018 5 is_stmt 1 view .LVU2014
 7004              	.LBB920:
 7005              	.LBI920:
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7006              		.loc 2 41 5 view .LVU2015
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7007              		.loc 2 41 5 is_stmt 0 view .LVU2016
 7008              	.LBE920:
 7009              	.LBB921:
 7010              	.LBI921:
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7011              		.loc 2 41 5 is_stmt 1 view .LVU2017
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7012              		.loc 2 41 5 is_stmt 0 view .LVU2018
 7013              	.LBE921:
 7014              	.LBB922:
 7015              	.LBI922:
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7016              		.loc 2 41 5 is_stmt 1 view .LVU2019
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7017              		.loc 2 41 5 is_stmt 0 view .LVU2020
 7018              	.LBE922:
1019:Blink.cpp     ****     button1.Init(hw.GetPin(0), 1000);
 7019              		.loc 15 1019 5 is_stmt 1 view .LVU2021
 7020              		.loc 15 1019 17 is_stmt 0 view .LVU2022
 7021 0158 2046     		mov	r0, r4
 7022 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7023              	.LVL439:
 7024 015e ADF81000 		strh	r0, [sp, #16]	@ movhi
 7025 0162 9FED6B0A 		vldr.32	s0, .L416+100
 7026 0166 07A8     		add	r0, sp, #28
 7027 0168 0499     		ldr	r1, [sp, #16]
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 200


 7028 016a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 7029              	.LVL440:
1020:Blink.cpp     ****     button2.Init(hw.GetPin(1), 1000);
 7030              		.loc 15 1020 5 is_stmt 1 view .LVU2023
 7031              		.loc 15 1020 17 is_stmt 0 view .LVU2024
 7032 016e 2846     		mov	r0, r5
 7033 0170 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7034              	.LVL441:
 7035 0174 ADF81400 		strh	r0, [sp, #20]	@ movhi
 7036 0178 9FED650A 		vldr.32	s0, .L416+100
 7037 017c 0BA8     		add	r0, sp, #44
 7038 017e 0599     		ldr	r1, [sp, #20]
 7039 0180 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 7040              	.LVL442:
1021:Blink.cpp     ****     button3.Init(hw.GetPin(2), 1000);
 7041              		.loc 15 1021 5 is_stmt 1 view .LVU2025
 7042              		.loc 15 1021 17 is_stmt 0 view .LVU2026
 7043 0184 0220     		movs	r0, #2
 7044 0186 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7045              	.LVL443:
 7046 018a ADF81800 		strh	r0, [sp, #24]	@ movhi
 7047 018e 9FED600A 		vldr.32	s0, .L416+100
 7048 0192 0FA8     		add	r0, sp, #60
 7049 0194 0699     		ldr	r1, [sp, #24]
 7050 0196 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 7051              	.LVL444:
1022:Blink.cpp     ****     
1023:Blink.cpp     ****     encoder.Init(daisy::seed::D7,daisy::seed::D8, daisy::seed::D9);//a d7 b d8 button d9
 7052              		.loc 15 1023 5 is_stmt 1 view .LVU2027
 7053              		.loc 15 1023 17 is_stmt 0 view .LVU2028
 7054 019a 0623     		movs	r3, #6
 7055 019c 9FED4E0A 		vldr.32	s0, .L416+44
 7056 01a0 8DF80430 		strb	r3, [sp, #4]
 7057 01a4 8DF80830 		strb	r3, [sp, #8]
 7058 01a8 0A23     		movs	r3, #10
 7059 01aa 8DF80C50 		strb	r5, [sp, #12]
 7060 01ae 8DF80530 		strb	r3, [sp, #5]
 7061 01b2 0B23     		movs	r3, #11
 7062 01b4 0199     		ldr	r1, [sp, #4]
 7063 01b6 5748     		ldr	r0, .L416+104
 7064 01b8 8DF80D70 		strb	r7, [sp, #13]
 7065 01bc 8DF80930 		strb	r3, [sp, #9]
 7066 01c0 DDE90223 		ldrd	r2, r3, [sp, #8]
 7067 01c4 FFF7FEFF 		bl	_ZN5daisy7Encoder4InitE12dsy_gpio_pinS1_S1_f
 7068              	.LVL445:
1024:Blink.cpp     ****     //uart config
1025:Blink.cpp     ****     UartHandler::Config uart_conf;
 7069              		.loc 15 1025 5 is_stmt 1 view .LVU2029
 7070              	.LBB923:
 7071              	.LBI923:
 7072              		.file 19 "../../libDaisy/src/per/uart.h"
   1:../../libDaisy/src/per/uart.h **** /* 
   2:../../libDaisy/src/per/uart.h **** TODO
   3:../../libDaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   4:../../libDaisy/src/per/uart.h **** */
   5:../../libDaisy/src/per/uart.h **** 
   6:../../libDaisy/src/per/uart.h **** #pragma once
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 201


   7:../../libDaisy/src/per/uart.h **** #ifndef DSY_UART_H
   8:../../libDaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
   9:../../libDaisy/src/per/uart.h **** #include "daisy_core.h"
  10:../../libDaisy/src/per/uart.h **** 
  11:../../libDaisy/src/per/uart.h **** 
  12:../../libDaisy/src/per/uart.h **** namespace daisy
  13:../../libDaisy/src/per/uart.h **** {
  14:../../libDaisy/src/per/uart.h **** /** @addtogroup serial
  15:../../libDaisy/src/per/uart.h ****     @{
  16:../../libDaisy/src/per/uart.h ****     */
  17:../../libDaisy/src/per/uart.h **** 
  18:../../libDaisy/src/per/uart.h **** /** 
  19:../../libDaisy/src/per/uart.h ****     Uart Peripheral
  20:../../libDaisy/src/per/uart.h ****     @author shensley
  21:../../libDaisy/src/per/uart.h ****     @date March 2020
  22:../../libDaisy/src/per/uart.h ****     */
  23:../../libDaisy/src/per/uart.h **** class UartHandler
  24:../../libDaisy/src/per/uart.h **** {
  25:../../libDaisy/src/per/uart.h ****   public:
  26:../../libDaisy/src/per/uart.h ****     struct Config
  27:../../libDaisy/src/per/uart.h ****     {
  28:../../libDaisy/src/per/uart.h ****         enum class Peripheral
  29:../../libDaisy/src/per/uart.h ****         {
  30:../../libDaisy/src/per/uart.h ****             USART_1,
  31:../../libDaisy/src/per/uart.h ****             USART_2,
  32:../../libDaisy/src/per/uart.h ****             USART_3,
  33:../../libDaisy/src/per/uart.h ****             UART_4,
  34:../../libDaisy/src/per/uart.h ****             UART_5,
  35:../../libDaisy/src/per/uart.h ****             USART_6,
  36:../../libDaisy/src/per/uart.h ****             UART_7,
  37:../../libDaisy/src/per/uart.h ****             UART_8,
  38:../../libDaisy/src/per/uart.h ****             LPUART_1,
  39:../../libDaisy/src/per/uart.h ****         };
  40:../../libDaisy/src/per/uart.h **** 
  41:../../libDaisy/src/per/uart.h ****         enum class StopBits
  42:../../libDaisy/src/per/uart.h ****         {
  43:../../libDaisy/src/per/uart.h ****             BITS_0_5,
  44:../../libDaisy/src/per/uart.h ****             BITS_1,
  45:../../libDaisy/src/per/uart.h ****             BITS_1_5,
  46:../../libDaisy/src/per/uart.h ****             BITS_2,
  47:../../libDaisy/src/per/uart.h ****         };
  48:../../libDaisy/src/per/uart.h **** 
  49:../../libDaisy/src/per/uart.h ****         enum class Parity
  50:../../libDaisy/src/per/uart.h ****         {
  51:../../libDaisy/src/per/uart.h ****             NONE,
  52:../../libDaisy/src/per/uart.h ****             EVEN,
  53:../../libDaisy/src/per/uart.h ****             ODD,
  54:../../libDaisy/src/per/uart.h ****         };
  55:../../libDaisy/src/per/uart.h **** 
  56:../../libDaisy/src/per/uart.h ****         enum class Mode
  57:../../libDaisy/src/per/uart.h ****         {
  58:../../libDaisy/src/per/uart.h ****             RX,
  59:../../libDaisy/src/per/uart.h ****             TX,
  60:../../libDaisy/src/per/uart.h ****             TX_RX,
  61:../../libDaisy/src/per/uart.h ****         };
  62:../../libDaisy/src/per/uart.h **** 
  63:../../libDaisy/src/per/uart.h ****         enum class WordLength
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 202


  64:../../libDaisy/src/per/uart.h ****         {
  65:../../libDaisy/src/per/uart.h ****             BITS_7,
  66:../../libDaisy/src/per/uart.h ****             BITS_8,
  67:../../libDaisy/src/per/uart.h ****             BITS_9,
  68:../../libDaisy/src/per/uart.h ****         };
  69:../../libDaisy/src/per/uart.h **** 
  70:../../libDaisy/src/per/uart.h ****         struct
  71:../../libDaisy/src/per/uart.h ****         {
  72:../../libDaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  73:../../libDaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  74:../../libDaisy/src/per/uart.h ****         } pin_config;        /**< & */
  75:../../libDaisy/src/per/uart.h **** 
  76:../../libDaisy/src/per/uart.h ****         Config()
 7073              		.loc 19 76 9 view .LVU2030
 7074              	.LBB924:
 7075              	.LBB925:
  77:../../libDaisy/src/per/uart.h ****         {
  78:../../libDaisy/src/per/uart.h ****             // user must init periph, pin_config, and mode
  79:../../libDaisy/src/per/uart.h ****             stopbits   = StopBits::BITS_1;
 7076              		.loc 19 79 13 view .LVU2031
  80:../../libDaisy/src/per/uart.h ****             parity     = Parity::NONE;
 7077              		.loc 19 80 13 view .LVU2032
  81:../../libDaisy/src/per/uart.h ****             wordlength = WordLength::BITS_8;
 7078              		.loc 19 81 13 view .LVU2033
  82:../../libDaisy/src/per/uart.h ****             baudrate   = 31250;
 7079              		.loc 19 82 13 view .LVU2034
 7080              		.loc 19 82 13 is_stmt 0 view .LVU2035
 7081              	.LBE925:
 7082              	.LBE924:
 7083              	.LBE923:
1026:Blink.cpp     ****     uart_conf.periph        = UartHandler::Config::Peripheral::USART_1;
 7084              		.loc 15 1026 5 is_stmt 1 view .LVU2036
1027:Blink.cpp     ****     uart_conf.mode          = UartHandler::Config::Mode::TX;
 7085              		.loc 15 1027 5 view .LVU2037
1028:Blink.cpp     ****     uart_conf.baudrate      = 31250;
 7086              		.loc 15 1028 5 view .LVU2038
1029:Blink.cpp     ****     uart_conf.pin_config.tx = Pin(PORTB, 6);
 7087              		.loc 15 1029 5 view .LVU2039
1030:Blink.cpp     ****     uart_conf.pin_config.rx = Pin(PORTB, 7);
 7088              		.loc 15 1030 5 view .LVU2040
 7089              	.LBB934:
 7090              	.LBB930:
 7091              	.LBB926:
 7092              		.loc 19 82 24 is_stmt 0 view .LVU2041
 7093 01c8 47F61223 		movw	r3, #31250
 7094              	.LBE926:
 7095              	.LBE930:
 7096              	.LBE934:
1031:Blink.cpp     **** 
1032:Blink.cpp     ****     // Initialize the uart peripheral
1033:Blink.cpp     ****     uart.Init(uart_conf);
 7097              		.loc 15 1033 14 view .LVU2042
 7098 01cc 13A9     		add	r1, sp, #76
 7099 01ce 5248     		ldr	r0, .L416+108
 7100              	.LBB935:
 7101              	.LBB931:
 7102              	.LBB927:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 203


 7103              		.loc 19 82 24 view .LVU2043
 7104 01d0 1993     		str	r3, [sp, #100]
 7105              	.LBE927:
 7106              	.LBE931:
 7107              	.LBE935:
 7108              		.loc 15 1033 5 is_stmt 1 view .LVU2044
 7109              	.LBB936:
 7110              	.LBB932:
  77:../../libDaisy/src/per/uart.h ****             // user must init periph, pin_config, and mode
 7111              		.loc 19 77 9 is_stmt 0 view .LVU2045
 7112 01d2 524B     		ldr	r3, .L416+112
 7113              	.LBE932:
 7114              	.LBE936:
1026:Blink.cpp     ****     uart_conf.mode          = UartHandler::Config::Mode::TX;
 7115              		.loc 15 1026 29 view .LVU2046
 7116 01d4 1494     		str	r4, [sp, #80]
 7117              	.LBB937:
 7118              	.LBB933:
 7119              	.LBB928:
  80:../../libDaisy/src/per/uart.h ****             wordlength = WordLength::BITS_8;
 7120              		.loc 19 80 24 view .LVU2047
 7121 01d6 1694     		str	r4, [sp, #88]
  79:../../libDaisy/src/per/uart.h ****             parity     = Parity::NONE;
 7122              		.loc 19 79 24 view .LVU2048
 7123 01d8 1595     		str	r5, [sp, #84]
 7124              	.LBE928:
  77:../../libDaisy/src/per/uart.h ****             // user must init periph, pin_config, and mode
 7125              		.loc 19 77 9 view .LVU2049
 7126 01da 1393     		str	r3, [sp, #76]
 7127 01dc 4D4C     		ldr	r4, .L416+104
 7128              	.LBB929:
  81:../../libDaisy/src/per/uart.h ****             baudrate   = 31250;
 7129              		.loc 19 81 24 view .LVU2050
 7130 01de CDE91755 		strd	r5, r5, [sp, #92]
 7131              	.LBE929:
 7132              	.LBE933:
 7133              	.LBE937:
 7134              		.loc 15 1033 14 view .LVU2051
 7135 01e2 FFF7FEFF 		bl	_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
 7136              	.LVL446:
1034:Blink.cpp     **** 
1035:Blink.cpp     ****     hw.StartAudio(AudioCallback);//start the callback
 7137              		.loc 15 1035 5 is_stmt 1 view .LVU2052
 7138              		.loc 15 1035 18 is_stmt 0 view .LVU2053
 7139 01e6 4E49     		ldr	r1, .L416+116
 7140 01e8 3048     		ldr	r0, .L416
 7141 01ea 4E4D     		ldr	r5, .L416+120
 7142 01ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 7143              	.LVL447:
 7144 01f0 0FE0     		b	.L400
 7145              	.L414:
 7146              	.LBB938:
1036:Blink.cpp     ****     while(1) {
1037:Blink.cpp     ****         //while loop just polls switches and encoder inputs and sends data over uart
1038:Blink.cpp     ****         button1.Debounce();
1039:Blink.cpp     ****         if (button1.RisingEdge()) {
1040:Blink.cpp     ****             profile = 2;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 204


1041:Blink.cpp     ****         }
1042:Blink.cpp     ****         
1043:Blink.cpp     ****         button2.Debounce();
1044:Blink.cpp     ****         if (button2.RisingEdge()) {
1045:Blink.cpp     ****             profile = 1;
1046:Blink.cpp     ****         }
1047:Blink.cpp     ****         
1048:Blink.cpp     ****         button3.Debounce();
1049:Blink.cpp     ****         if (button3.RisingEdge()) {
1050:Blink.cpp     ****             profile = 0;
1051:Blink.cpp     ****         }
1052:Blink.cpp     **** 
1053:Blink.cpp     ****         encoder.Debounce();
1054:Blink.cpp     ****         
1055:Blink.cpp     ****         int inc = encoder.Increment();
1056:Blink.cpp     ****         if(inc > 0) {
1057:Blink.cpp     ****             effectCount--;
1058:Blink.cpp     **** 
1059:Blink.cpp     ****         } else if (inc < 0) {
1060:Blink.cpp     ****             effectCount++;
1061:Blink.cpp     **** 
1062:Blink.cpp     ****         }
1063:Blink.cpp     ****         if((effectCount > 7) && (effectCount < 200)) {
1064:Blink.cpp     ****             effectCount = 0;
 7147              		.loc 15 1064 13 is_stmt 1 view .LVU2054
 7148              		.loc 15 1064 25 is_stmt 0 view .LVU2055
 7149 01f2 0023     		movs	r3, #0
 7150 01f4 2B70     		strb	r3, [r5]
 7151              	.L396:
1065:Blink.cpp     ****         }else if(effectCount > 200){
1066:Blink.cpp     ****             effectCount = 7;
1067:Blink.cpp     ****         }
1068:Blink.cpp     ****         if (encoder.RisingEdge()){
 7152              		.loc 15 1068 9 is_stmt 1 view .LVU2056
 7153              	.LVL448:
 7154              	.LBB939:
 7155              	.LBI939:
 7156              		.loc 1 39 17 view .LVU2057
 7157              	.LBE939:
 7158              	.LBE938:
 7159              		.loc 1 39 38 view .LVU2058
 7160              	.LBB951:
 7161              	.LBB942:
 7162              	.LBB940:
 7163              	.LBI940:
 7164              		.loc 2 70 17 view .LVU2059
 7165              	.LBB941:
 7166              		.loc 2 70 38 view .LVU2060
 7167              		.loc 2 70 54 is_stmt 0 view .LVU2061
 7168 01f6 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 7169 01f8 3BB1     		cbz	r3, .L397
 7170              	.LVL449:
 7171              		.loc 2 70 54 view .LVU2062
 7172              	.LBE941:
 7173              	.LBE940:
 7174              	.LBE942:
 7175              		.loc 15 1068 9 view .LVU2063
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 205


 7176 01fa A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 7177 01fc 7F2B     		cmp	r3, #127
 7178 01fe 04D1     		bne	.L397
1069:Blink.cpp     ****             if(profile == 0){
 7179              		.loc 15 1069 13 is_stmt 1 view .LVU2064
 7180              		.loc 15 1069 24 is_stmt 0 view .LVU2065
 7181 0200 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 7182              		.loc 15 1069 13 view .LVU2066
 7183 0202 002B     		cmp	r3, #0
 7184 0204 47D1     		bne	.L398
1070:Blink.cpp     ****                 encProfile1();
 7185              		.loc 15 1070 17 is_stmt 1 view .LVU2067
 7186              		.loc 15 1070 28 is_stmt 0 view .LVU2068
 7187 0206 FFF7FEFF 		bl	_Z11encProfile1v
 7188              	.LVL450:
 7189              	.L397:
1071:Blink.cpp     ****             } else if(profile == 1){
1072:Blink.cpp     ****                 encProfile2();
1073:Blink.cpp     ****             } else if(profile == 2){
1074:Blink.cpp     ****                 encProfile3();
1075:Blink.cpp     ****             }
1076:Blink.cpp     ****         }
1077:Blink.cpp     ****         
1078:Blink.cpp     ****         transmitData();
 7190              		.loc 15 1078 9 is_stmt 1 view .LVU2069
 7191              		.loc 15 1078 21 is_stmt 0 view .LVU2070
 7192 020a FFF7FEFF 		bl	_Z12transmitDatav
 7193              	.LVL451:
1079:Blink.cpp     ****         transmitData2();
 7194              		.loc 15 1079 9 is_stmt 1 view .LVU2071
 7195              		.loc 15 1079 22 is_stmt 0 view .LVU2072
 7196 020e FFF7FEFF 		bl	_Z13transmitData2v
 7197              	.LVL452:
 7198              	.LBE951:
1036:Blink.cpp     ****         //while loop just polls switches and encoder inputs and sends data over uart
 7199              		.loc 15 1036 5 is_stmt 1 view .LVU2073
 7200              	.L400:
1036:Blink.cpp     ****         //while loop just polls switches and encoder inputs and sends data over uart
 7201              		.loc 15 1036 5 view .LVU2074
 7202              	.LBB952:
1038:Blink.cpp     ****         if (button1.RisingEdge()) {
 7203              		.loc 15 1038 9 view .LVU2075
1038:Blink.cpp     ****         if (button1.RisingEdge()) {
 7204              		.loc 15 1038 25 is_stmt 0 view .LVU2076
 7205 0212 07A8     		add	r0, sp, #28
 7206 0214 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7207              	.LVL453:
1039:Blink.cpp     ****             profile = 2;
 7208              		.loc 15 1039 9 is_stmt 1 view .LVU2077
 7209              	.LBB943:
 7210              	.LBI943:
 7211              		.loc 2 70 17 view .LVU2078
 7212              	.LBB944:
 7213              		.loc 2 70 38 view .LVU2079
 7214              		.loc 2 70 54 is_stmt 0 view .LVU2080
 7215 0218 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 7216 021c 2BB1     		cbz	r3, .L388
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 206


 7217              	.LVL454:
 7218              		.loc 2 70 54 view .LVU2081
 7219              	.LBE944:
 7220              	.LBE943:
1039:Blink.cpp     ****             profile = 2;
 7221              		.loc 15 1039 9 view .LVU2082
 7222 021e 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 7223 0222 7F2B     		cmp	r3, #127
 7224 0224 01D1     		bne	.L388
1040:Blink.cpp     ****         }
 7225              		.loc 15 1040 13 is_stmt 1 view .LVU2083
1040:Blink.cpp     ****         }
 7226              		.loc 15 1040 21 is_stmt 0 view .LVU2084
 7227 0226 0223     		movs	r3, #2
 7228 0228 3370     		strb	r3, [r6]
 7229              	.L388:
1043:Blink.cpp     ****         if (button2.RisingEdge()) {
 7230              		.loc 15 1043 9 is_stmt 1 view .LVU2085
1043:Blink.cpp     ****         if (button2.RisingEdge()) {
 7231              		.loc 15 1043 25 is_stmt 0 view .LVU2086
 7232 022a 0BA8     		add	r0, sp, #44
 7233 022c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7234              	.LVL455:
1044:Blink.cpp     ****             profile = 1;
 7235              		.loc 15 1044 9 is_stmt 1 view .LVU2087
 7236              	.LBB945:
 7237              	.LBI945:
 7238              		.loc 2 70 17 view .LVU2088
 7239              	.LBB946:
 7240              		.loc 2 70 38 view .LVU2089
 7241              		.loc 2 70 54 is_stmt 0 view .LVU2090
 7242 0230 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 7243 0234 2BB1     		cbz	r3, .L389
 7244              	.LVL456:
 7245              		.loc 2 70 54 view .LVU2091
 7246              	.LBE946:
 7247              	.LBE945:
1044:Blink.cpp     ****             profile = 1;
 7248              		.loc 15 1044 9 view .LVU2092
 7249 0236 9DF83630 		ldrb	r3, [sp, #54]	@ zero_extendqisi2
 7250 023a 7F2B     		cmp	r3, #127
 7251 023c 01D1     		bne	.L389
1045:Blink.cpp     ****         }
 7252              		.loc 15 1045 13 is_stmt 1 view .LVU2093
1045:Blink.cpp     ****         }
 7253              		.loc 15 1045 21 is_stmt 0 view .LVU2094
 7254 023e 0123     		movs	r3, #1
 7255 0240 3370     		strb	r3, [r6]
 7256              	.L389:
1048:Blink.cpp     ****         if (button3.RisingEdge()) {
 7257              		.loc 15 1048 9 is_stmt 1 view .LVU2095
1048:Blink.cpp     ****         if (button3.RisingEdge()) {
 7258              		.loc 15 1048 25 is_stmt 0 view .LVU2096
 7259 0242 0FA8     		add	r0, sp, #60
 7260 0244 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7261              	.LVL457:
1049:Blink.cpp     ****             profile = 0;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 207


 7262              		.loc 15 1049 9 is_stmt 1 view .LVU2097
 7263              	.LBB947:
 7264              	.LBI947:
 7265              		.loc 2 70 17 view .LVU2098
 7266              	.LBB948:
 7267              		.loc 2 70 38 view .LVU2099
 7268              		.loc 2 70 54 is_stmt 0 view .LVU2100
 7269 0248 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 7270 024c 2BB1     		cbz	r3, .L390
 7271              	.LVL458:
 7272              		.loc 2 70 54 view .LVU2101
 7273              	.LBE948:
 7274              	.LBE947:
1049:Blink.cpp     ****             profile = 0;
 7275              		.loc 15 1049 9 view .LVU2102
 7276 024e 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
 7277 0252 7F2B     		cmp	r3, #127
 7278 0254 01D1     		bne	.L390
1050:Blink.cpp     ****         }
 7279              		.loc 15 1050 13 is_stmt 1 view .LVU2103
1050:Blink.cpp     ****         }
 7280              		.loc 15 1050 21 is_stmt 0 view .LVU2104
 7281 0256 0023     		movs	r3, #0
 7282 0258 3370     		strb	r3, [r6]
 7283              	.L390:
1053:Blink.cpp     ****         
 7284              		.loc 15 1053 9 is_stmt 1 view .LVU2105
1053:Blink.cpp     ****         
 7285              		.loc 15 1053 25 is_stmt 0 view .LVU2106
 7286 025a 2E48     		ldr	r0, .L416+104
 7287 025c FFF7FEFF 		bl	_ZN5daisy7Encoder8DebounceEv
 7288              	.LVL459:
1055:Blink.cpp     ****         if(inc > 0) {
 7289              		.loc 15 1055 9 is_stmt 1 view .LVU2107
 7290              	.LBB949:
 7291              	.LBI949:
  36:../../libDaisy/src/hid/encoder.h **** 
 7292              		.loc 1 36 20 view .LVU2108
 7293              	.LBB950:
  36:../../libDaisy/src/hid/encoder.h **** 
 7294              		.loc 1 36 40 view .LVU2109
  36:../../libDaisy/src/hid/encoder.h **** 
 7295              		.loc 1 36 56 is_stmt 0 view .LVU2110
 7296 0260 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 7297 0262 83B1     		cbz	r3, .L394
 7298 0264 636A     		ldr	r3, [r4, #36]
 7299              	.LVL460:
  36:../../libDaisy/src/hid/encoder.h **** 
 7300              		.loc 1 36 56 view .LVU2111
 7301              	.LBE950:
 7302              	.LBE949:
1056:Blink.cpp     ****             effectCount--;
 7303              		.loc 15 1056 9 is_stmt 1 view .LVU2112
 7304 0266 002B     		cmp	r3, #0
 7305 0268 0FDD     		ble	.L393
1057:Blink.cpp     **** 
 7306              		.loc 15 1057 13 view .LVU2113
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 208


1057:Blink.cpp     **** 
 7307              		.loc 15 1057 24 is_stmt 0 view .LVU2114
 7308 026a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7309              	.LVL461:
1057:Blink.cpp     **** 
 7310              		.loc 15 1057 24 view .LVU2115
 7311 026c 013B     		subs	r3, r3, #1
 7312 026e DBB2     		uxtb	r3, r3
 7313 0270 2B70     		strb	r3, [r5]
 7314              	.LVL462:
 7315              	.L392:
1063:Blink.cpp     ****             effectCount = 0;
 7316              		.loc 15 1063 9 is_stmt 1 view .LVU2116
1063:Blink.cpp     ****             effectCount = 0;
 7317              		.loc 15 1063 30 is_stmt 0 view .LVU2117
 7318 0272 A3F10802 		sub	r2, r3, #8
1063:Blink.cpp     ****             effectCount = 0;
 7319              		.loc 15 1063 9 view .LVU2118
 7320 0276 D2B2     		uxtb	r2, r2
 7321 0278 BF2A     		cmp	r2, #191
 7322 027a BAD9     		bls	.L414
1065:Blink.cpp     ****             effectCount = 7;
 7323              		.loc 15 1065 15 is_stmt 1 view .LVU2119
 7324 027c C82B     		cmp	r3, #200
 7325 027e BAD9     		bls	.L396
1066:Blink.cpp     ****         }
 7326              		.loc 15 1066 13 view .LVU2120
1066:Blink.cpp     ****         }
 7327              		.loc 15 1066 25 is_stmt 0 view .LVU2121
 7328 0280 0723     		movs	r3, #7
 7329 0282 2B70     		strb	r3, [r5]
 7330 0284 B7E7     		b	.L396
 7331              	.L394:
1063:Blink.cpp     ****             effectCount = 0;
 7332              		.loc 15 1063 30 view .LVU2122
 7333 0286 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7334 0288 F3E7     		b	.L392
 7335              	.LVL463:
 7336              	.L393:
1059:Blink.cpp     ****             effectCount++;
 7337              		.loc 15 1059 16 is_stmt 1 view .LVU2123
 7338 028a FCD0     		beq	.L394
1060:Blink.cpp     **** 
 7339              		.loc 15 1060 13 view .LVU2124
1060:Blink.cpp     **** 
 7340              		.loc 15 1060 24 is_stmt 0 view .LVU2125
 7341 028c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 7342 028e 0133     		adds	r3, r3, #1
 7343 0290 DBB2     		uxtb	r3, r3
 7344 0292 2B70     		strb	r3, [r5]
 7345 0294 EDE7     		b	.L392
 7346              	.L398:
1071:Blink.cpp     ****                 encProfile2();
 7347              		.loc 15 1071 20 is_stmt 1 view .LVU2126
 7348 0296 012B     		cmp	r3, #1
 7349 0298 04D0     		beq	.L415
1073:Blink.cpp     ****                 encProfile3();
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 209


 7350              		.loc 15 1073 20 view .LVU2127
 7351 029a 022B     		cmp	r3, #2
 7352 029c B5D1     		bne	.L397
1074:Blink.cpp     ****             }
 7353              		.loc 15 1074 17 view .LVU2128
1074:Blink.cpp     ****             }
 7354              		.loc 15 1074 28 is_stmt 0 view .LVU2129
 7355 029e FFF7FEFF 		bl	_Z11encProfile3v
 7356              	.LVL464:
 7357 02a2 B2E7     		b	.L397
 7358              	.L415:
1072:Blink.cpp     ****             } else if(profile == 2){
 7359              		.loc 15 1072 17 is_stmt 1 view .LVU2130
1072:Blink.cpp     ****             } else if(profile == 2){
 7360              		.loc 15 1072 28 is_stmt 0 view .LVU2131
 7361 02a4 FFF7FEFF 		bl	_Z11encProfile2v
 7362              	.LVL465:
 7363 02a8 AFE7     		b	.L397
 7364              	.L417:
 7365 02aa 00BF     		.align	2
 7366              	.L416:
 7367 02ac 00000000 		.word	.LANCHOR2
 7368 02b0 00000000 		.word	.LANCHOR4
 7369 02b4 00000000 		.word	.LANCHOR0
 7370 02b8 00000000 		.word	delMem2
 7371 02bc 00000000 		.word	ch
 7372 02c0 00000000 		.word	.LANCHOR27
 7373 02c4 00000000 		.word	.LANCHOR28
 7374 02c8 00000000 		.word	ph
 7375 02cc CDCC4C3F 		.word	1061997773
 7376 02d0 CDCC0C40 		.word	1074580685
 7377 02d4 00000000 		.word	.LANCHOR1
 7378 02d8 00000000 		.word	0
 7379 02dc 0000C842 		.word	1120403456
 7380 02e0 CDCCCC3D 		.word	1036831949
 7381 02e4 00606A46 		.word	1181376512
 7382 02e8 00DC0500 		.word	384000
 7383 02ec 0C000000 		.word	delMem1+12
 7384 02f0 00000000 		.word	.LANCHOR24
 7385 02f4 00000000 		.word	delMem1
 7386 02f8 0C000000 		.word	delMem2+12
 7387 02fc 00000000 		.word	.LANCHOR25
 7388 0300 0C000000 		.word	delMem3+12
 7389 0304 00000000 		.word	.LANCHOR26
 7390 0308 00000000 		.word	delMem3
 7391 030c 00000000 		.word	.LANCHOR5
 7392 0310 00007A44 		.word	1148846080
 7393 0314 00000000 		.word	.LANCHOR74
 7394 0318 00000000 		.word	.LANCHOR69
 7395 031c 01060107 		.word	117507585
 7396 0320 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 7397 0324 00000000 		.word	.LANCHOR35
 7398 0328 00001645 		.word	1159069696
 7399              	.LBE952:
 7400              		.cfi_endproc
 7401              	.LFE4912:
 7403              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 210


 7404              		.align	1
 7405              		.p2align 2,,3
 7406              		.syntax unified
 7407              		.thumb
 7408              		.thumb_func
 7409              		.fpu fpv5-d16
 7411              	_GLOBAL__sub_I_hw:
 7412              	.LFB5495:
1080:Blink.cpp     **** 
1081:Blink.cpp     ****     }
1082:Blink.cpp     **** }...
 7413              		.loc 15 1082 1 is_stmt 1 view -0
 7414              		.cfi_startproc
 7415              		@ args = 0, pretend = 0, frame = 0
 7416              		@ frame_needed = 0, uses_anonymous_args = 0
 7417              	.LBB1002:
 7418              	.LBI1002:
 7419              		.loc 15 1082 1 view .LVU2133
 7420              	.LVL466:
 7421              	.LBB1003:
 7422              	.LBB1004:
 7423              	.LBI1004:
  21:../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 7424              		.loc 3 21 5 view .LVU2134
 7425              	.LBB1005:
 7426              	.LBB1006:
 7427              	.LBI1006:
 7428              		.file 20 "../../libDaisy/src/per/qspi.h"
   1:../../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy/src/per/qspi.h **** 
   4:../../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy/src/per/qspi.h **** 
   6:../../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy/src/per/qspi.h **** 
   9:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy/src/per/qspi.h **** 
  19:../../libDaisy/src/per/qspi.h **** namespace daisy
  20:../../libDaisy/src/per/qspi.h **** {
  21:../../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy/src/per/qspi.h **** @{
  23:../../libDaisy/src/per/qspi.h **** */
  24:../../libDaisy/src/per/qspi.h **** 
  25:../../libDaisy/src/per/qspi.h **** /** 
  26:../../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy/src/per/qspi.h **** */
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 211


  30:../../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy/src/per/qspi.h **** {
  32:../../libDaisy/src/per/qspi.h ****   public:
  33:../../libDaisy/src/per/qspi.h ****     enum Result
  34:../../libDaisy/src/per/qspi.h ****     {
  35:../../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../../libDaisy/src/per/qspi.h ****         ERR
  37:../../libDaisy/src/per/qspi.h ****     };
  38:../../libDaisy/src/per/qspi.h **** 
  39:../../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy/src/per/qspi.h ****          * 
  43:../../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy/src/per/qspi.h ****          */
  48:../../libDaisy/src/per/qspi.h ****     enum Status
  49:../../libDaisy/src/per/qspi.h ****     {
  50:../../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy/src/per/qspi.h ****     };
  55:../../libDaisy/src/per/qspi.h **** 
  56:../../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy/src/per/qspi.h ****     struct Config
  58:../../libDaisy/src/per/qspi.h ****     {
  59:../../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy/src/per/qspi.h ****         enum Device
  61:../../libDaisy/src/per/qspi.h ****         {
  62:../../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy/src/per/qspi.h ****         };
  66:../../libDaisy/src/per/qspi.h **** 
  67:../../libDaisy/src/per/qspi.h ****         /** 
  68:../../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy/src/per/qspi.h ****         */
  74:../../libDaisy/src/per/qspi.h ****         enum Mode
  75:../../libDaisy/src/per/qspi.h ****         {
  76:../../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy/src/per/qspi.h ****         };
  80:../../libDaisy/src/per/qspi.h **** 
  81:../../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy/src/per/qspi.h ****         struct
  83:../../libDaisy/src/per/qspi.h ****         {
  84:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 212


  87:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../../libDaisy/src/per/qspi.h **** 
  92:../../libDaisy/src/per/qspi.h ****         Device device;
  93:../../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy/src/per/qspi.h ****     };
  95:../../libDaisy/src/per/qspi.h **** 
  96:../../libDaisy/src/per/qspi.h ****     /** 
  97:../../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy/src/per/qspi.h ****         */
 101:../../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy/src/per/qspi.h **** 
 103:../../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy/src/per/qspi.h **** 
 106:../../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy/src/per/qspi.h ****     /** 
 109:../../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy/src/per/qspi.h ****         */
 113:../../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy/src/per/qspi.h **** 
 115:../../libDaisy/src/per/qspi.h ****     /** 
 116:../../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy/src/per/qspi.h ****         */
 123:../../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy/src/per/qspi.h **** 
 125:../../libDaisy/src/per/qspi.h ****     /** 
 126:../../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy/src/per/qspi.h ****         */
 132:../../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy/src/per/qspi.h **** 
 134:../../libDaisy/src/per/qspi.h ****     /** 
 135:../../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy/src/per/qspi.h ****         */
 142:../../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy/src/per/qspi.h **** 
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 213


 144:../../libDaisy/src/per/qspi.h ****     /**  
 145:../../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy/src/per/qspi.h ****         */
 150:../../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy/src/per/qspi.h **** 
 152:../../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy/src/per/qspi.h ****      */
 155:../../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy/src/per/qspi.h **** 
 157:../../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy/src/per/qspi.h ****      * 
 161:../../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy/src/per/qspi.h ****     */
 164:../../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy/src/per/qspi.h **** 
 166:../../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 7429              		.loc 20 166 5 view .LVU2135
 7430              	.LBE1006:
 7431              	.LBE1005:
 7432              	.LBE1004:
 7433              	.LBE1003:
 7434              	.LBE1002:
 7435              		.loc 15 1082 1 is_stmt 0 view .LVU2136
 7436 0000 38B5     		push	{r3, r4, r5, lr}
 7437              		.cfi_def_cfa_offset 16
 7438              		.cfi_offset 3, -16
 7439              		.cfi_offset 4, -12
 7440              		.cfi_offset 5, -8
 7441              		.cfi_offset 14, -4
 7442              	.LBB1052:
 7443              	.LBB1048:
 7444              	.LBB1027:
 7445              	.LBB1025:
 7446              	.LBB1011:
 7447              	.LBB1007:
 7448              	.LBB1008:
 7449              		.loc 20 166 34 view .LVU2137
 7450 0002 2048     		ldr	r0, .L420
 7451 0004 0025     		movs	r5, #0
 7452              	.LBE1008:
 7453              	.LBE1007:
 7454              	.LBE1011:
 7455              	.LBE1025:
 7456              	.LBE1027:
  14:Blink.cpp     **** DaisySeed  hw;
 7457              		.loc 15 14 12 view .LVU2138
 7458 0006 204C     		ldr	r4, .L420+4
 7459 0008 2049     		ldr	r1, .L420+8
 7460 000a 2246     		mov	r2, r4
 7461              	.LBB1028:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 214


 7462              	.LBB1026:
 7463              	.LBB1012:
 7464              	.LBB1010:
 7465              	.LBB1009:
 7466              		.loc 20 166 34 view .LVU2139
 7467 000c 0560     		str	r5, [r0]
 7468              	.LVL467:
 7469              		.loc 20 166 34 view .LVU2140
 7470              	.LBE1009:
 7471              	.LBE1010:
 7472              	.LBE1012:
 7473              	.LBB1013:
 7474              	.LBI1013:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 7475              		.loc 7 95 5 is_stmt 1 view .LVU2141
 7476              	.LBB1014:
 7477              	.LBB1015:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 7478              		.loc 7 95 35 is_stmt 0 view .LVU2142
 7479 000e 4561     		str	r5, [r0, #20]
 7480              	.LVL468:
  95:../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 7481              		.loc 7 95 35 view .LVU2143
 7482              	.LBE1015:
 7483              	.LBE1014:
 7484              	.LBE1013:
 7485              	.LBB1016:
 7486              	.LBI1016:
 109:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 7487              		.loc 6 109 5 is_stmt 1 view .LVU2144
 109:../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 7488              		.loc 6 109 5 is_stmt 0 view .LVU2145
 7489              	.LBE1016:
 7490              	.LBB1017:
 7491              	.LBI1017:
 7492              		.file 21 "../../libDaisy/src/per/dac.h"
   1:../../libDaisy/src/per/dac.h **** #pragma once
   2:../../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy/src/per/dac.h **** 
   5:../../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy/src/per/dac.h **** 
   7:../../libDaisy/src/per/dac.h **** namespace daisy
   8:../../libDaisy/src/per/dac.h **** {
   9:../../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy/src/per/dac.h ****  ** 
  12:../../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy/src/per/dac.h ****  **
  15:../../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy/src/per/dac.h ****  **
  17:../../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy/src/per/dac.h ****  ***/
  21:../../libDaisy/src/per/dac.h **** class DacHandle
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 215


  22:../../libDaisy/src/per/dac.h **** {
  23:../../libDaisy/src/per/dac.h ****   public:
  24:../../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy/src/per/dac.h ****     enum class Result
  26:../../libDaisy/src/per/dac.h ****     {
  27:../../libDaisy/src/per/dac.h ****         OK,
  28:../../libDaisy/src/per/dac.h ****         ERR,
  29:../../libDaisy/src/per/dac.h ****     };
  30:../../libDaisy/src/per/dac.h **** 
  31:../../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy/src/per/dac.h ****     enum class Channel
  33:../../libDaisy/src/per/dac.h ****     {
  34:../../libDaisy/src/per/dac.h ****         ONE,
  35:../../libDaisy/src/per/dac.h ****         TWO,
  36:../../libDaisy/src/per/dac.h ****         BOTH,
  37:../../libDaisy/src/per/dac.h ****     };
  38:../../libDaisy/src/per/dac.h **** 
  39:../../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy/src/per/dac.h ****      **
  41:../../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy/src/per/dac.h ****      **
  43:../../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy/src/per/dac.h ****      ***/
  46:../../libDaisy/src/per/dac.h ****     enum class Mode
  47:../../libDaisy/src/per/dac.h ****     {
  48:../../libDaisy/src/per/dac.h ****         POLLING,
  49:../../libDaisy/src/per/dac.h ****         DMA,
  50:../../libDaisy/src/per/dac.h ****     };
  51:../../libDaisy/src/per/dac.h **** 
  52:../../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy/src/per/dac.h ****      ***/
  56:../../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy/src/per/dac.h ****     {
  58:../../libDaisy/src/per/dac.h ****         BITS_8,
  59:../../libDaisy/src/per/dac.h ****         BITS_12
  60:../../libDaisy/src/per/dac.h ****     };
  61:../../libDaisy/src/per/dac.h **** 
  62:../../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../../libDaisy/src/per/dac.h ****     {
  65:../../libDaisy/src/per/dac.h ****         ENABLED,
  66:../../libDaisy/src/per/dac.h ****         DISABLED,
  67:../../libDaisy/src/per/dac.h ****     };
  68:../../libDaisy/src/per/dac.h **** 
  69:../../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy/src/per/dac.h ****     struct Config
  71:../../libDaisy/src/per/dac.h ****     {
  72:../../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy/src/per/dac.h **** 
  78:../../libDaisy/src/per/dac.h ****         Channel     chn;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 216


  79:../../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy/src/per/dac.h ****     };
  83:../../libDaisy/src/per/dac.h **** 
  84:../../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 7493              		.loc 21 84 5 is_stmt 1 view .LVU2146
 7494              	.LBB1018:
 7495              	.LBB1019:
 7496              		.loc 21 84 33 is_stmt 0 view .LVU2147
 7497 0010 0562     		str	r5, [r0, #32]
 7498              	.LVL469:
 7499              		.loc 21 84 33 view .LVU2148
 7500              	.LBE1019:
 7501              	.LBE1018:
 7502              	.LBE1017:
 7503              	.LBB1020:
 7504              	.LBI1020:
  40:../../libDaisy/src/hid/usb.h **** 
 7505              		.loc 5 40 5 is_stmt 1 view .LVU2149
  40:../../libDaisy/src/hid/usb.h **** 
 7506              		.loc 5 40 5 is_stmt 0 view .LVU2150
 7507              	.LBE1020:
 7508              	.LBB1021:
 7509              	.LBI1021:
  96:../../libDaisy/src/sys/system.h ****     ~System() {}
 7510              		.loc 4 96 5 is_stmt 1 view .LVU2151
  96:../../libDaisy/src/sys/system.h ****     ~System() {}
 7511              		.loc 4 96 5 is_stmt 0 view .LVU2152
 7512              	.LBE1021:
 7513              	.LBB1022:
 7514              	.LBI1022:
 7515              		.file 22 "../../libDaisy/src/per/sai.h"
   1:../../libDaisy/src/per/sai.h **** #pragma once
   2:../../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy/src/per/sai.h **** 
   5:../../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy/src/per/sai.h **** 
   7:../../libDaisy/src/per/sai.h **** namespace daisy
   8:../../libDaisy/src/per/sai.h **** {
   9:../../libDaisy/src/per/sai.h **** /** 
  10:../../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy/src/per/sai.h ****  * 
  14:../../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy/src/per/sai.h ****  *
  18:../../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy/src/per/sai.h ****  * 
  21:../../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy/src/per/sai.h ****  * 
  23:../../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 217


  25:../../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy/src/per/sai.h ****  */
  42:../../libDaisy/src/per/sai.h **** class SaiHandle
  43:../../libDaisy/src/per/sai.h **** {
  44:../../libDaisy/src/per/sai.h ****   public:
  45:../../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy/src/per/sai.h ****     struct Config
  47:../../libDaisy/src/per/sai.h ****     {
  48:../../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy/src/per/sai.h ****         {
  51:../../libDaisy/src/per/sai.h ****             SAI_1,
  52:../../libDaisy/src/per/sai.h ****             SAI_2,
  53:../../libDaisy/src/per/sai.h ****         };
  54:../../libDaisy/src/per/sai.h **** 
  55:../../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy/src/per/sai.h ****         {
  58:../../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy/src/per/sai.h ****         };
  64:../../libDaisy/src/per/sai.h **** 
  65:../../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy/src/per/sai.h ****         {
  68:../../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy/src/per/sai.h ****         };
  72:../../libDaisy/src/per/sai.h **** 
  73:../../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy/src/per/sai.h ****          */
  77:../../libDaisy/src/per/sai.h ****         enum class Sync
  78:../../libDaisy/src/per/sai.h ****         {
  79:../../libDaisy/src/per/sai.h ****             MASTER,
  80:../../libDaisy/src/per/sai.h ****             SLAVE,
  81:../../libDaisy/src/per/sai.h ****         };
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 218


  82:../../libDaisy/src/per/sai.h **** 
  83:../../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy/src/per/sai.h ****         enum class Direction
  85:../../libDaisy/src/per/sai.h ****         {
  86:../../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../../libDaisy/src/per/sai.h ****         };
  89:../../libDaisy/src/per/sai.h **** 
  90:../../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy/src/per/sai.h ****         struct
  92:../../libDaisy/src/per/sai.h ****         {
  93:../../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy/src/per/sai.h ****         } pin_config;
  95:../../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy/src/per/sai.h ****     };
 100:../../libDaisy/src/per/sai.h **** 
 101:../../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy/src/per/sai.h ****     enum class Result
 103:../../libDaisy/src/per/sai.h ****     {
 104:../../libDaisy/src/per/sai.h ****         OK,
 105:../../libDaisy/src/per/sai.h ****         ERR,
 106:../../libDaisy/src/per/sai.h ****     };
 107:../../libDaisy/src/per/sai.h **** 
 108:../../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 7516              		.loc 22 108 5 is_stmt 1 view .LVU2153
 7517              	.LBB1023:
 7518              	.LBB1024:
 7519              		.loc 22 108 33 is_stmt 0 view .LVU2154
 7520 0012 C563     		str	r5, [r0, #60]
 7521              	.LVL470:
 7522              		.loc 22 108 33 view .LVU2155
 7523              	.LBE1024:
 7524              	.LBE1023:
 7525              	.LBE1022:
 7526              	.LBE1026:
 7527              	.LBE1028:
  14:Blink.cpp     **** DaisySeed  hw;
 7528              		.loc 15 14 12 view .LVU2156
 7529 0014 FFF7FEFF 		bl	__aeabi_atexit
 7530              	.LVL471:
 7531              	.LBB1029:
 7532              	.LBI1029:
  83:../../libDaisy/src/per/uart.h ****         }
  84:../../libDaisy/src/per/uart.h **** 
  85:../../libDaisy/src/per/uart.h ****         Peripheral periph;
  86:../../libDaisy/src/per/uart.h ****         StopBits   stopbits;
  87:../../libDaisy/src/per/uart.h ****         Parity     parity;
  88:../../libDaisy/src/per/uart.h ****         Mode       mode;
  89:../../libDaisy/src/per/uart.h ****         WordLength wordlength;
  90:../../libDaisy/src/per/uart.h ****         uint32_t   baudrate;
  91:../../libDaisy/src/per/uart.h ****     };
  92:../../libDaisy/src/per/uart.h **** 
  93:../../libDaisy/src/per/uart.h **** 
  94:../../libDaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 219


 7533              		.loc 19 94 5 is_stmt 1 view .LVU2157
 7534              	.LBB1030:
 7535              	.LBB1031:
 7536              		.loc 19 94 35 is_stmt 0 view .LVU2158
 7537 0018 1D4B     		ldr	r3, .L420+12
 7538              	.LBE1031:
 7539              	.LBE1030:
 7540              	.LBE1029:
  16:Blink.cpp     **** Encoder encoder;
 7541              		.loc 15 16 9 view .LVU2159
 7542 001a 2246     		mov	r2, r4
 7543 001c 1D49     		ldr	r1, .L420+16
 7544              	.LBB1034:
 7545              	.LBB1033:
 7546              	.LBB1032:
 7547              		.loc 19 94 35 view .LVU2160
 7548 001e 1D60     		str	r5, [r3]
 7549              	.LVL472:
 7550              		.loc 19 94 35 view .LVU2161
 7551              	.LBE1032:
 7552              	.LBE1033:
 7553              	.LBE1034:
 7554              	.LBB1035:
 7555              	.LBI1035:
  20:../../libDaisy/src/hid/encoder.h ****     ~Encoder() {}
 7556              		.loc 1 20 5 is_stmt 1 view .LVU2162
 7557              	.LBB1036:
 7558              	.LBB1037:
 7559              	.LBI1037:
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7560              		.loc 2 41 5 view .LVU2163
  41:../../libDaisy/src/hid/switch.h ****     ~Switch() {}
 7561              		.loc 2 41 5 is_stmt 0 view .LVU2164
 7562              	.LBE1037:
 7563              	.LBE1036:
 7564              	.LBE1035:
  16:Blink.cpp     **** Encoder encoder;
 7565              		.loc 15 16 9 view .LVU2165
 7566 0020 1D48     		ldr	r0, .L420+20
 7567 0022 FFF7FEFF 		bl	__aeabi_atexit
 7568              	.LVL473:
 7569              	.LBB1038:
 7570              	.LBI1038:
  96:../../DaisySP/Source/Effects/chorus.h ****     ~Chorus() {}
 7571              		.loc 8 96 5 is_stmt 1 view .LVU2166
 7572              	.LBE1038:
 7573              	.LBE1048:
 7574              	.LBE1052:
  96:../../DaisySP/Source/Effects/chorus.h ****     ~Chorus() {}
 7575              		.loc 8 96 14 view .LVU2167
 7576              	.LBB1053:
 7577              	.LBB1049:
  18:Blink.cpp     **** Chorus ch;
 7578              		.loc 15 18 8 is_stmt 0 view .LVU2168
 7579 0026 2246     		mov	r2, r4
 7580 0028 1C49     		ldr	r1, .L420+24
 7581 002a 1D48     		ldr	r0, .L420+28
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 220


 7582 002c FFF7FEFF 		bl	__aeabi_atexit
 7583              	.LVL474:
 7584              	.LBB1039:
 7585              	.LBI1039:
 7586              		.loc 12 26 7 is_stmt 1 view .LVU2169
 7587              	.LBB1040:
 7588              	.LBI1040:
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7589              		.loc 13 31 5 view .LVU2170
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7590              		.loc 13 31 5 is_stmt 0 view .LVU2171
 7591              	.LBE1040:
 7592              	.LBE1039:
  20:Blink.cpp     **** Flanger fl;
 7593              		.loc 15 20 9 view .LVU2172
 7594 0030 2246     		mov	r2, r4
 7595 0032 1C49     		ldr	r1, .L420+32
 7596 0034 1C48     		ldr	r0, .L420+36
 7597 0036 FFF7FEFF 		bl	__aeabi_atexit
 7598              	.LVL475:
  22:Blink.cpp     **** LadderFilter wahflt, hp, lp;
 7599              		.loc 15 22 14 view .LVU2173
 7600 003a 1C48     		ldr	r0, .L420+40
 7601 003c FFF7FEFF 		bl	_ZN7daisysp12LadderFilterC1Ev
 7602              	.LVL476:
  22:Blink.cpp     **** LadderFilter wahflt, hp, lp;
 7603              		.loc 15 22 22 view .LVU2174
 7604 0040 1B48     		ldr	r0, .L420+44
 7605 0042 FFF7FEFF 		bl	_ZN7daisysp12LadderFilterC1Ev
 7606              	.LVL477:
  22:Blink.cpp     **** LadderFilter wahflt, hp, lp;
 7607              		.loc 15 22 26 view .LVU2175
 7608 0046 1B48     		ldr	r0, .L420+48
 7609 0048 FFF7FEFF 		bl	_ZN7daisysp12LadderFilterC1Ev
 7610              	.LVL478:
 7611              	.LBB1041:
 7612              	.LBI1041:
  32:../../DaisySP/Source/Effects/tremolo.h ****     ~Tremolo() {}
 7613              		.loc 10 32 5 is_stmt 1 view .LVU2176
 7614              	.LBB1042:
 7615              	.LBB1043:
 7616              	.LBI1043:
  23:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 7617              		.loc 11 23 5 view .LVU2177
  23:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 7618              		.loc 11 23 5 is_stmt 0 view .LVU2178
 7619              	.LBE1043:
 7620              	.LBE1042:
 7621              	.LBE1041:
  56:Blink.cpp     **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delMem1, delMem2, delMem3;
 7622              		.loc 15 56 43 view .LVU2179
 7623 004c 1A4D     		ldr	r5, .L420+52
  23:Blink.cpp     **** Tremolo trem;
 7624              		.loc 15 23 9 view .LVU2180
 7625 004e 2246     		mov	r2, r4
 7626 0050 1A49     		ldr	r1, .L420+56
 7627 0052 1B48     		ldr	r0, .L420+60
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 221


 7628 0054 FFF7FEFF 		bl	__aeabi_atexit
 7629              	.LVL479:
 7630              	.LBB1044:
 7631              	.LBI1044:
  93:../../DaisySP/Source/Effects/phaser.h ****     ~Phaser() {}
 7632              		.loc 9 93 5 is_stmt 1 view .LVU2181
 7633              	.LBE1044:
 7634              	.LBE1049:
 7635              	.LBE1053:
  93:../../DaisySP/Source/Effects/phaser.h ****     ~Phaser() {}
 7636              		.loc 9 93 14 view .LVU2182
 7637              	.LBB1054:
 7638              	.LBB1050:
  25:Blink.cpp     **** Phaser ph;
 7639              		.loc 15 25 8 is_stmt 0 view .LVU2183
 7640 0058 2246     		mov	r2, r4
 7641 005a 1A49     		ldr	r1, .L420+64
 7642 005c 1A48     		ldr	r0, .L420+68
 7643 005e FFF7FEFF 		bl	__aeabi_atexit
 7644              	.LVL480:
 7645              	.LBB1045:
 7646              	.LBI1045:
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7647              		.loc 13 31 5 is_stmt 1 view .LVU2184
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7648              		.loc 13 31 5 is_stmt 0 view .LVU2185
 7649              	.LBE1045:
  56:Blink.cpp     **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delMem1, delMem2, delMem3;
 7650              		.loc 15 56 43 view .LVU2186
 7651 0062 2246     		mov	r2, r4
 7652 0064 2946     		mov	r1, r5
 7653 0066 1948     		ldr	r0, .L420+72
 7654 0068 FFF7FEFF 		bl	__aeabi_atexit
 7655              	.LVL481:
 7656              	.LBB1046:
 7657              	.LBI1046:
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7658              		.loc 13 31 5 is_stmt 1 view .LVU2187
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7659              		.loc 13 31 5 is_stmt 0 view .LVU2188
 7660              	.LBE1046:
  56:Blink.cpp     **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delMem1, delMem2, delMem3;
 7661              		.loc 15 56 52 view .LVU2189
 7662 006c 2246     		mov	r2, r4
 7663 006e 2946     		mov	r1, r5
 7664 0070 1748     		ldr	r0, .L420+76
 7665 0072 FFF7FEFF 		bl	__aeabi_atexit
 7666              	.LVL482:
 7667              	.LBB1047:
 7668              	.LBI1047:
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7669              		.loc 13 31 5 is_stmt 1 view .LVU2190
  31:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 7670              		.loc 13 31 5 is_stmt 0 view .LVU2191
 7671              	.LBE1047:
  56:Blink.cpp     **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delMem1, delMem2, delMem3;
 7672              		.loc 15 56 61 view .LVU2192
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 222


 7673 0076 2246     		mov	r2, r4
 7674 0078 2946     		mov	r1, r5
 7675 007a 1648     		ldr	r0, .L420+80
 7676              	.LBE1050:
 7677              	.LBE1054:
 7678              		.loc 15 1082 1 view .LVU2193
 7679 007c BDE83840 		pop	{r3, r4, r5, lr}
 7680              		.cfi_restore 14
 7681              		.cfi_restore 5
 7682              		.cfi_restore 4
 7683              		.cfi_restore 3
 7684              		.cfi_def_cfa_offset 0
 7685              	.LBB1055:
 7686              	.LBB1051:
  56:Blink.cpp     **** DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delMem1, delMem2, delMem3;
 7687              		.loc 15 56 61 view .LVU2194
 7688 0080 FFF7FEBF 		b	__aeabi_atexit
 7689              	.LVL483:
 7690              	.L421:
 7691              		.align	2
 7692              	.L420:
 7693 0084 00000000 		.word	.LANCHOR2
 7694 0088 00000000 		.word	__dso_handle
 7695 008c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 7696 0090 00000000 		.word	.LANCHOR69
 7697 0094 00000000 		.word	_ZN5daisy7EncoderD1Ev
 7698 0098 00000000 		.word	.LANCHOR74
 7699 009c 00000000 		.word	_ZN7daisysp6ChorusD1Ev
 7700 00a0 00000000 		.word	ch
 7701 00a4 00000000 		.word	_ZN7daisysp7FlangerD1Ev
 7702 00a8 00000000 		.word	.LANCHOR27
 7703 00ac 00000000 		.word	.LANCHOR4
 7704 00b0 00000000 		.word	.LANCHOR0
 7705 00b4 00000000 		.word	.LANCHOR1
 7706 00b8 00000000 		.word	_ZN7daisysp9DelayLineIfLj96000EED1Ev
 7707 00bc 00000000 		.word	_ZN7daisysp7TremoloD1Ev
 7708 00c0 00000000 		.word	.LANCHOR28
 7709 00c4 00000000 		.word	_ZN7daisysp6PhaserD1Ev
 7710 00c8 00000000 		.word	ph
 7711 00cc 00000000 		.word	delMem1
 7712 00d0 00000000 		.word	delMem2
 7713 00d4 00000000 		.word	delMem3
 7714              	.LBE1051:
 7715              	.LBE1055:
 7716              		.cfi_endproc
 7717              	.LFE5495:
 7719              		.section	.init_array,"aw",%init_array
 7720              		.align	2
 7721 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 7722              		.global	del3
 7723              		.global	del2
 7724              		.global	del1
 7725              		.global	delMem3
 7726              		.global	delMem2
 7727              		.global	delMem1
 7728              		.global	configuring
 7729              		.global	errorFlag
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 223


 7730              		.global	p3Size
 7731              		.global	profile3
 7732              		.global	p2Size
 7733              		.global	profile2
 7734              		.global	p1Size
 7735              		.global	profile1
 7736              		.global	effectCount
 7737              		.global	profile
 7738              		.global	wah
 7739              		.global	knob3
 7740              		.global	knob2
 7741              		.global	knob1
 7742              		.global	start2
 7743              		.global	start
 7744              		.global	p3ftone
 7745              		.global	p3fuzz
 7746              		.global	p3fingain
 7747              		.global	p2ftone
 7748              		.global	p2fuzz
 7749              		.global	p2fingain
 7750              		.global	p1ftone
 7751              		.global	p1fuzz
 7752              		.global	p1fingain
 7753              		.global	p3dtone
 7754              		.global	p3doutgain
 7755              		.global	p3dingain
 7756              		.global	p2dtone
 7757              		.global	p2doutgain
 7758              		.global	p2dingain
 7759              		.global	p1dtone
 7760              		.global	p1doutgain
 7761              		.global	p1dingain
 7762              		.global	p3phdepth
 7763              		.global	p3phFreq
 7764              		.global	p2phdepth
 7765              		.global	p2phFreq
 7766              		.global	p1phdepth
 7767              		.global	p1phFreq
 7768              		.global	ph
 7769              		.global	p3tremDepth
 7770              		.global	p3tremFreq
 7771              		.global	p2tremDepth
 7772              		.global	p2tremFreq
 7773              		.global	p1tremDepth
 7774              		.global	p1tremFreq
 7775              		.global	trem
 7776              		.global	lp
 7777              		.global	hp
 7778              		.global	wahflt
 7779              		.global	p3flDelay
 7780              		.global	p3flDepth
 7781              		.global	p3flFreq
 7782              		.global	p2flDelay
 7783              		.global	p2flDepth
 7784              		.global	p2flFreq
 7785              		.global	p1flDelay
 7786              		.global	p1flDepth
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 224


 7787              		.global	p1flFreq
 7788              		.global	fl
 7789              		.global	p3chDelay
 7790              		.global	p3chDepth
 7791              		.global	p3chFreq
 7792              		.global	p2chDelay
 7793              		.global	p2chDepth
 7794              		.global	p2chFreq
 7795              		.global	p1chDelay
 7796              		.global	p1chDepth
 7797              		.global	p1chFreq
 7798              		.global	ch
 7799              		.global	encoder
 7800              		.global	uart
 7801              		.global	hw
 7802              		.section	.bss.ch,"aw",%nobits
 7803              		.align	2
 7806              	ch:
 7807 0000 00000000 		.space	19292
 7807      00000000 
 7807      00000000 
 7807      00000000 
 7807      00000000 
 7808              		.section	.bss.configuring,"aw",%nobits
 7809              		.set	.LANCHOR71,. + 0
 7812              	configuring:
 7813 0000 00       		.space	1
 7814              		.section	.bss.del1,"aw",%nobits
 7815              		.align	2
 7816              		.set	.LANCHOR24,. + 0
 7819              	del1:
 7820 0000 00000000 		.space	16
 7820      00000000 
 7820      00000000 
 7820      00000000 
 7821              		.section	.bss.del2,"aw",%nobits
 7822              		.align	2
 7823              		.set	.LANCHOR25,. + 0
 7826              	del2:
 7827 0000 00000000 		.space	16
 7827      00000000 
 7827      00000000 
 7827      00000000 
 7828              		.section	.bss.del3,"aw",%nobits
 7829              		.align	2
 7830              		.set	.LANCHOR26,. + 0
 7833              	del3:
 7834 0000 00000000 		.space	16
 7834      00000000 
 7834      00000000 
 7834      00000000 
 7835              		.section	.bss.effectCount,"aw",%nobits
 7836              		.set	.LANCHOR35,. + 0
 7839              	effectCount:
 7840 0000 00       		.space	1
 7841              		.section	.bss.encoder,"aw",%nobits
 7842              		.align	2
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 225


 7843              		.set	.LANCHOR74,. + 0
 7846              	encoder:
 7847 0000 00000000 		.space	40
 7847      00000000 
 7847      00000000 
 7847      00000000 
 7847      00000000 
 7848              		.section	.bss.errorFlag,"aw",%nobits
 7849              		.set	.LANCHOR72,. + 0
 7852              	errorFlag:
 7853 0000 00       		.space	1
 7854              		.section	.bss.fl,"aw",%nobits
 7855              		.align	2
 7856              		.set	.LANCHOR27,. + 0
 7859              	fl:
 7860 0000 00000000 		.space	3876
 7860      00000000 
 7860      00000000 
 7860      00000000 
 7860      00000000 
 7861              		.section	.bss.hp,"aw",%nobits
 7862              		.align	2
 7863              		.set	.LANCHOR0,. + 0
 7866              	hp:
 7867 0000 00000000 		.space	92
 7867      00000000 
 7867      00000000 
 7867      00000000 
 7867      00000000 
 7868              		.section	.bss.hw,"aw",%nobits
 7869              		.align	2
 7870              		.set	.LANCHOR2,. + 0
 7873              	hw:
 7874 0000 00000000 		.space	64
 7874      00000000 
 7874      00000000 
 7874      00000000 
 7874      00000000 
 7875              		.section	.bss.knob1,"aw",%nobits
 7876              		.align	2
 7877              		.set	.LANCHOR66,. + 0
 7880              	knob1:
 7881 0000 00000000 		.space	4
 7882              		.section	.bss.knob2,"aw",%nobits
 7883              		.align	2
 7884              		.set	.LANCHOR67,. + 0
 7887              	knob2:
 7888 0000 00000000 		.space	4
 7889              		.section	.bss.knob3,"aw",%nobits
 7890              		.align	2
 7891              		.set	.LANCHOR68,. + 0
 7894              	knob3:
 7895 0000 00000000 		.space	4
 7896              		.section	.bss.lp,"aw",%nobits
 7897              		.align	2
 7898              		.set	.LANCHOR1,. + 0
 7901              	lp:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 226


 7902 0000 00000000 		.space	92
 7902      00000000 
 7902      00000000 
 7902      00000000 
 7902      00000000 
 7903              		.section	.bss.p1Size,"aw",%nobits
 7904              		.set	.LANCHOR29,. + 0
 7907              	p1Size:
 7908 0000 00       		.space	1
 7909              		.section	.bss.p1chDelay,"aw",%nobits
 7910              		.align	2
 7911              		.set	.LANCHOR36,. + 0
 7914              	p1chDelay:
 7915 0000 00000000 		.space	4
 7916              		.section	.bss.p1chDepth,"aw",%nobits
 7917              		.align	2
 7918              		.set	.LANCHOR37,. + 0
 7921              	p1chDepth:
 7922 0000 00000000 		.space	4
 7923              		.section	.bss.p1chFreq,"aw",%nobits
 7924              		.align	2
 7925              		.set	.LANCHOR38,. + 0
 7928              	p1chFreq:
 7929 0000 00000000 		.space	4
 7930              		.section	.bss.p1dingain,"aw",%nobits
 7931              		.align	2
 7932              		.set	.LANCHOR8,. + 0
 7935              	p1dingain:
 7936 0000 00000000 		.space	4
 7937              		.section	.bss.p1doutgain,"aw",%nobits
 7938              		.align	2
 7939              		.set	.LANCHOR7,. + 0
 7942              	p1doutgain:
 7943 0000 00000000 		.space	4
 7944              		.section	.bss.p1dtone,"aw",%nobits
 7945              		.align	2
 7946              		.set	.LANCHOR6,. + 0
 7949              	p1dtone:
 7950 0000 00000000 		.space	4
 7951              		.section	.bss.p1fingain,"aw",%nobits
 7952              		.align	2
 7953              		.set	.LANCHOR17,. + 0
 7956              	p1fingain:
 7957 0000 00000000 		.space	4
 7958              		.section	.bss.p1flDelay,"aw",%nobits
 7959              		.align	2
 7960              		.set	.LANCHOR39,. + 0
 7963              	p1flDelay:
 7964 0000 00000000 		.space	4
 7965              		.section	.bss.p1flDepth,"aw",%nobits
 7966              		.align	2
 7967              		.set	.LANCHOR40,. + 0
 7970              	p1flDepth:
 7971 0000 00000000 		.space	4
 7972              		.section	.bss.p1flFreq,"aw",%nobits
 7973              		.align	2
 7974              		.set	.LANCHOR41,. + 0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 227


 7977              	p1flFreq:
 7978 0000 00000000 		.space	4
 7979              		.section	.bss.p1ftone,"aw",%nobits
 7980              		.align	2
 7981              		.set	.LANCHOR15,. + 0
 7984              	p1ftone:
 7985 0000 00000000 		.space	4
 7986              		.section	.bss.p1fuzz,"aw",%nobits
 7987              		.align	2
 7988              		.set	.LANCHOR16,. + 0
 7991              	p1fuzz:
 7992 0000 00000000 		.space	4
 7993              		.section	.bss.p1phFreq,"aw",%nobits
 7994              		.align	2
 7995              		.set	.LANCHOR44,. + 0
 7998              	p1phFreq:
 7999 0000 00000000 		.space	4
 8000              		.section	.bss.p1phdepth,"aw",%nobits
 8001              		.align	2
 8002              		.set	.LANCHOR45,. + 0
 8005              	p1phdepth:
 8006 0000 00000000 		.space	4
 8007              		.section	.bss.p1tremDepth,"aw",%nobits
 8008              		.align	2
 8009              		.set	.LANCHOR42,. + 0
 8012              	p1tremDepth:
 8013 0000 00000000 		.space	4
 8014              		.section	.bss.p1tremFreq,"aw",%nobits
 8015              		.align	2
 8016              		.set	.LANCHOR43,. + 0
 8019              	p1tremFreq:
 8020 0000 00000000 		.space	4
 8021              		.section	.bss.p2Size,"aw",%nobits
 8022              		.set	.LANCHOR31,. + 0
 8025              	p2Size:
 8026 0000 00       		.space	1
 8027              		.section	.bss.p2chDelay,"aw",%nobits
 8028              		.align	2
 8029              		.set	.LANCHOR46,. + 0
 8032              	p2chDelay:
 8033 0000 00000000 		.space	4
 8034              		.section	.bss.p2chDepth,"aw",%nobits
 8035              		.align	2
 8036              		.set	.LANCHOR47,. + 0
 8039              	p2chDepth:
 8040 0000 00000000 		.space	4
 8041              		.section	.bss.p2chFreq,"aw",%nobits
 8042              		.align	2
 8043              		.set	.LANCHOR48,. + 0
 8046              	p2chFreq:
 8047 0000 00000000 		.space	4
 8048              		.section	.bss.p2dingain,"aw",%nobits
 8049              		.align	2
 8050              		.set	.LANCHOR11,. + 0
 8053              	p2dingain:
 8054 0000 00000000 		.space	4
 8055              		.section	.bss.p2doutgain,"aw",%nobits
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 228


 8056              		.align	2
 8057              		.set	.LANCHOR10,. + 0
 8060              	p2doutgain:
 8061 0000 00000000 		.space	4
 8062              		.section	.bss.p2dtone,"aw",%nobits
 8063              		.align	2
 8064              		.set	.LANCHOR9,. + 0
 8067              	p2dtone:
 8068 0000 00000000 		.space	4
 8069              		.section	.bss.p2fingain,"aw",%nobits
 8070              		.align	2
 8071              		.set	.LANCHOR20,. + 0
 8074              	p2fingain:
 8075 0000 00000000 		.space	4
 8076              		.section	.bss.p2flDelay,"aw",%nobits
 8077              		.align	2
 8078              		.set	.LANCHOR49,. + 0
 8081              	p2flDelay:
 8082 0000 00000000 		.space	4
 8083              		.section	.bss.p2flDepth,"aw",%nobits
 8084              		.align	2
 8085              		.set	.LANCHOR50,. + 0
 8088              	p2flDepth:
 8089 0000 00000000 		.space	4
 8090              		.section	.bss.p2flFreq,"aw",%nobits
 8091              		.align	2
 8092              		.set	.LANCHOR51,. + 0
 8095              	p2flFreq:
 8096 0000 00000000 		.space	4
 8097              		.section	.bss.p2ftone,"aw",%nobits
 8098              		.align	2
 8099              		.set	.LANCHOR18,. + 0
 8102              	p2ftone:
 8103 0000 00000000 		.space	4
 8104              		.section	.bss.p2fuzz,"aw",%nobits
 8105              		.align	2
 8106              		.set	.LANCHOR19,. + 0
 8109              	p2fuzz:
 8110 0000 00000000 		.space	4
 8111              		.section	.bss.p2phFreq,"aw",%nobits
 8112              		.align	2
 8113              		.set	.LANCHOR54,. + 0
 8116              	p2phFreq:
 8117 0000 00000000 		.space	4
 8118              		.section	.bss.p2phdepth,"aw",%nobits
 8119              		.align	2
 8120              		.set	.LANCHOR55,. + 0
 8123              	p2phdepth:
 8124 0000 00000000 		.space	4
 8125              		.section	.bss.p2tremDepth,"aw",%nobits
 8126              		.align	2
 8127              		.set	.LANCHOR52,. + 0
 8130              	p2tremDepth:
 8131 0000 00000000 		.space	4
 8132              		.section	.bss.p2tremFreq,"aw",%nobits
 8133              		.align	2
 8134              		.set	.LANCHOR53,. + 0
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 229


 8137              	p2tremFreq:
 8138 0000 00000000 		.space	4
 8139              		.section	.bss.p3Size,"aw",%nobits
 8140              		.set	.LANCHOR33,. + 0
 8143              	p3Size:
 8144 0000 00       		.space	1
 8145              		.section	.bss.p3chDelay,"aw",%nobits
 8146              		.align	2
 8147              		.set	.LANCHOR56,. + 0
 8150              	p3chDelay:
 8151 0000 00000000 		.space	4
 8152              		.section	.bss.p3chDepth,"aw",%nobits
 8153              		.align	2
 8154              		.set	.LANCHOR57,. + 0
 8157              	p3chDepth:
 8158 0000 00000000 		.space	4
 8159              		.section	.bss.p3chFreq,"aw",%nobits
 8160              		.align	2
 8161              		.set	.LANCHOR58,. + 0
 8164              	p3chFreq:
 8165 0000 00000000 		.space	4
 8166              		.section	.bss.p3dingain,"aw",%nobits
 8167              		.align	2
 8168              		.set	.LANCHOR14,. + 0
 8171              	p3dingain:
 8172 0000 00000000 		.space	4
 8173              		.section	.bss.p3doutgain,"aw",%nobits
 8174              		.align	2
 8175              		.set	.LANCHOR13,. + 0
 8178              	p3doutgain:
 8179 0000 00000000 		.space	4
 8180              		.section	.bss.p3dtone,"aw",%nobits
 8181              		.align	2
 8182              		.set	.LANCHOR12,. + 0
 8185              	p3dtone:
 8186 0000 00000000 		.space	4
 8187              		.section	.bss.p3fingain,"aw",%nobits
 8188              		.align	2
 8189              		.set	.LANCHOR23,. + 0
 8192              	p3fingain:
 8193 0000 00000000 		.space	4
 8194              		.section	.bss.p3flDelay,"aw",%nobits
 8195              		.align	2
 8196              		.set	.LANCHOR59,. + 0
 8199              	p3flDelay:
 8200 0000 00000000 		.space	4
 8201              		.section	.bss.p3flDepth,"aw",%nobits
 8202              		.align	2
 8203              		.set	.LANCHOR60,. + 0
 8206              	p3flDepth:
 8207 0000 00000000 		.space	4
 8208              		.section	.bss.p3flFreq,"aw",%nobits
 8209              		.align	2
 8210              		.set	.LANCHOR61,. + 0
 8213              	p3flFreq:
 8214 0000 00000000 		.space	4
 8215              		.section	.bss.p3ftone,"aw",%nobits
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 230


 8216              		.align	2
 8217              		.set	.LANCHOR21,. + 0
 8220              	p3ftone:
 8221 0000 00000000 		.space	4
 8222              		.section	.bss.p3fuzz,"aw",%nobits
 8223              		.align	2
 8224              		.set	.LANCHOR22,. + 0
 8227              	p3fuzz:
 8228 0000 00000000 		.space	4
 8229              		.section	.bss.p3phFreq,"aw",%nobits
 8230              		.align	2
 8231              		.set	.LANCHOR64,. + 0
 8234              	p3phFreq:
 8235 0000 00000000 		.space	4
 8236              		.section	.bss.p3phdepth,"aw",%nobits
 8237              		.align	2
 8238              		.set	.LANCHOR65,. + 0
 8241              	p3phdepth:
 8242 0000 00000000 		.space	4
 8243              		.section	.bss.p3tremDepth,"aw",%nobits
 8244              		.align	2
 8245              		.set	.LANCHOR62,. + 0
 8248              	p3tremDepth:
 8249 0000 00000000 		.space	4
 8250              		.section	.bss.p3tremFreq,"aw",%nobits
 8251              		.align	2
 8252              		.set	.LANCHOR63,. + 0
 8255              	p3tremFreq:
 8256 0000 00000000 		.space	4
 8257              		.section	.bss.ph,"aw",%nobits
 8258              		.align	2
 8261              	ph:
 8262 0000 00000000 		.space	77192
 8262      00000000 
 8262      00000000 
 8262      00000000 
 8262      00000000 
 8263              		.section	.bss.profile,"aw",%nobits
 8264              		.set	.LANCHOR5,. + 0
 8267              	profile:
 8268 0000 00       		.space	1
 8269              		.section	.bss.trem,"aw",%nobits
 8270              		.align	2
 8271              		.set	.LANCHOR28,. + 0
 8274              	trem:
 8275 0000 00000000 		.space	52
 8275      00000000 
 8275      00000000 
 8275      00000000 
 8275      00000000 
 8276              		.section	.bss.uart,"aw",%nobits
 8277              		.align	2
 8278              		.set	.LANCHOR69,. + 0
 8281              	uart:
 8282 0000 00000000 		.space	4
 8283              		.section	.bss.wah,"aw",%nobits
 8284              		.align	2
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 231


 8285              		.set	.LANCHOR3,. + 0
 8288              	wah:
 8289 0000 00000000 		.space	4
 8290              		.section	.bss.wahflt,"aw",%nobits
 8291              		.align	2
 8292              		.set	.LANCHOR4,. + 0
 8295              	wahflt:
 8296 0000 00000000 		.space	92
 8296      00000000 
 8296      00000000 
 8296      00000000 
 8296      00000000 
 8297              		.section	.data.profile1,"aw"
 8298              		.align	2
 8299              		.set	.LANCHOR30,. + 0
 8302              	profile1:
 8303 0000 090909   		.ascii	"\011\011\011"
 8304              		.section	.data.profile2,"aw"
 8305              		.align	2
 8306              		.set	.LANCHOR32,. + 0
 8309              	profile2:
 8310 0000 090909   		.ascii	"\011\011\011"
 8311              		.section	.data.profile3,"aw"
 8312              		.align	2
 8313              		.set	.LANCHOR34,. + 0
 8316              	profile3:
 8317 0000 090909   		.ascii	"\011\011\011"
 8318              		.section	.data.start,"aw"
 8319              		.set	.LANCHOR70,. + 0
 8322              	start:
 8323 0000 BE       		.byte	-66
 8324              		.section	.data.start2,"aw"
 8325              		.set	.LANCHOR73,. + 0
 8328              	start2:
 8329 0000 BF       		.byte	-65
 8330              		.section	.sdram_bss,"aw"
 8331              		.align	2
 8334              	delMem3:
 8335 0000 00000000 		.space	384012
 8335      00000000 
 8335      00000000 
 8335      00000000 
 8335      00000000 
 8338              	delMem2:
 8339 5dc0c 00000000 		.space	384012
 8339      00000000 
 8339      00000000 
 8339      00000000 
 8339      00000000 
 8342              	delMem1:
 8343 bb818 00000000 		.space	384012
 8343      00000000 
 8343      00000000 
 8343      00000000 
 8343      00000000 
 8344              		.text
 8345              	.Letext0:
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 232


 8346              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 8347              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 8348              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 8349              		.file 26 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 8350              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 8351              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 8352              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 8353              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 8354              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 8355              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 8356              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 8357              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 8358              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 8359              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 8360              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 8361              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 8362              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 8363              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 8364              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 8365              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 8366              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 8367              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 8368              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 8369              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 8370              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 8371              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 8372              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 8373              		.file 50 "../../libDaisy/src/daisy_core.h"
 8374              		.file 51 "../../libDaisy/src/per/tim.h"
 8375              		.file 52 "../../libDaisy/src/util/wav_format.h"
 8376              		.file 53 "../../libDaisy/src/dev/max11300.h"
 8377              		.file 54 "../../libDaisy/src/per/gpio.h"
 8378              		.file 55 "../../libDaisy/src/dev/sdram.h"
 8379              		.file 56 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 8380              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 8381              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 8382              		.file 59 "../../DaisySP/Source/Control/adenv.h"
 8383              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 8384              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 8385              		.file 62 "../../libDaisy/src/dev/sr_595.h"
 8386              		.file 63 "<built-in>"
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 233


DEFINED SYMBOLS
                            *ABS*:00000000 Blink.cpp
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:17     .text._ZN5daisy7EncoderD2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:26     .text._ZN5daisy7EncoderD2Ev:00000000 _ZN5daisy7EncoderD2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:26     .text._ZN5daisy7EncoderD2Ev:00000000 _ZN5daisy7EncoderD1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:49     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:57     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:57     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:98     .text._ZN7daisysp6ChorusD2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:106    .text._ZN7daisysp6ChorusD2Ev:00000000 _ZN7daisysp6ChorusD2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:106    .text._ZN7daisysp6ChorusD2Ev:00000000 _ZN7daisysp6ChorusD1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:123    .text._ZN7daisysp6PhaserD2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:131    .text._ZN7daisysp6PhaserD2Ev:00000000 _ZN7daisysp6PhaserD2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:131    .text._ZN7daisysp6PhaserD2Ev:00000000 _ZN7daisysp6PhaserD1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:148    .text._ZN7daisysp7TremoloD2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:156    .text._ZN7daisysp7TremoloD2Ev:00000000 _ZN7daisysp7TremoloD2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:156    .text._ZN7daisysp7TremoloD2Ev:00000000 _ZN7daisysp7TremoloD1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:179    .text._ZN7daisysp7FlangerD2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:187    .text._ZN7daisysp7FlangerD2Ev:00000000 _ZN7daisysp7FlangerD2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:187    .text._ZN7daisysp7FlangerD2Ev:00000000 _ZN7daisysp7FlangerD1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:210    .text._ZN7daisysp9DelayLineIfLj96000EED2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:218    .text._ZN7daisysp9DelayLineIfLj96000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj96000EED2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:218    .text._ZN7daisysp9DelayLineIfLj96000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj96000EED1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:234    .text._ZN7daisysp12LadderFilterC2Ev:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:242    .text._ZN7daisysp12LadderFilterC2Ev:00000000 _ZN7daisysp12LadderFilterC2Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:242    .text._ZN7daisysp12LadderFilterC2Ev:00000000 _ZN7daisysp12LadderFilterC1Ev
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:268    .text._Z7distortffff:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:276    .text._Z7distortffff:00000000 _Z7distortffff
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:462    .text._Z7distortffff:000000a8 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:473    .text._Z4Fuzzffff:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:481    .text._Z4Fuzzffff:00000000 _Z4Fuzzffff
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:747    .text._Z4Fuzzffff:000000f8 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:758    .text._Z14effectsProcessfh:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:766    .text._Z14effectsProcessfh:00000000 _Z14effectsProcessfh
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:839    .text._Z14effectsProcessfh:00000044 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:847    .text._Z14effectsProcessfh:0000004c $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1598   .text._Z14effectsProcessfh:0000028c $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8261   .bss.ph:00000000 ph
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7806   .bss.ch:00000000 ch
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1637   .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1645   .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1875   .text._Z13AudioCallbackPKPKfPPfj:000000b4 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1892   .text._Z15getEffectParamsh:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1900   .text._Z15getEffectParamsh:00000000 _Z15getEffectParamsh
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1922   .text._Z15getEffectParamsh:00000012 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1930   .text._Z15getEffectParamsh:0000001a $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1954   .text._Z15getEffectParamsh:00000038 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:1962   .text._Z15getEffectParamsh:00000058 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2094   .text._Z15getEffectParamsh:000000f0 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2102   .text._Z15getEffectParamsh:00000110 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2409   .text._Z15getEffectParamsh:00000270 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2468   .text._Z14setEffectPramsv:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2476   .text._Z14setEffectPramsv:00000000 _Z14setEffectPramsv
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2508   .text._Z14setEffectPramsv:00000018 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2516   .text._Z14setEffectPramsv:00000020 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2542   .text._Z14setEffectPramsv:0000003c $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2550   .text._Z14setEffectPramsv:0000004c $t
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 234


C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2839   .text._Z14setEffectPramsv:000001a8 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2847   .text._Z14setEffectPramsv:000001c8 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:2973   .text._Z14setEffectPramsv:0000026c $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3017   .text._Z14setEffectPramsv:0000030c $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3371   .text._Z14setEffectPramsv:000004a0 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3412   .text._Z8containsh:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3420   .text._Z8containsh:00000000 _Z8containsh
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3609   .text._Z8containsh:000000a0 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3620   .text._Z8ReadPotsv:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3628   .text._Z8ReadPotsv:00000000 _Z8ReadPotsv
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3762   .text._Z8ReadPotsv:00000068 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3771   .text._Z12removeEffectv:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:3779   .text._Z12removeEffectv:00000000 _Z12removeEffectv
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4137   .text._Z12removeEffectv:00000124 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4149   .text._Z13InitializeADCv:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4157   .text._Z13InitializeADCv:00000000 _Z13InitializeADCv
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4242   .text._Z13InitializeADCv:00000074 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4247   .text._Z7uartInth:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4255   .text._Z7uartInth:00000000 _Z7uartInth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4290   .text._Z7uartInth:00000020 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4295   .text._Z12transmitDatav:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4303   .text._Z12transmitDatav:00000000 _Z12transmitDatav
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4615   .text._Z12transmitDatav:0000010c $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4629   .text._Z13transmitData2v:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:4637   .text._Z13transmitData2v:00000000 _Z13transmitData2v
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:5086   .text._Z13transmitData2v:0000019c $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:5097   .text._Z11encProfile1v:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:5105   .text._Z11encProfile1v:00000000 _Z11encProfile1v
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:5541   .text._Z11encProfile1v:0000010c $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:5558   .text._Z11encProfile2v:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:5566   .text._Z11encProfile2v:00000000 _Z11encProfile2v
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:6058   .text._Z11encProfile2v:0000011c $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:6075   .text._Z11encProfile3v:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:6083   .text._Z11encProfile3v:00000000 _Z11encProfile3v
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:6571   .text._Z11encProfile3v:00000118 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:6588   .text.startup.main:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:6596   .text.startup.main:00000000 main
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7367   .text.startup.main:000002ac $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8338   .sdram_bss:0005dc0c delMem2
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8342   .sdram_bss:000bb818 delMem1
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8334   .sdram_bss:00000000 delMem3
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7404   .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7411   .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7693   .text.startup._GLOBAL__sub_I_hw:00000084 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7720   .init_array:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7833   .bss.del3:00000000 del3
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7826   .bss.del2:00000000 del2
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7819   .bss.del1:00000000 del1
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7812   .bss.configuring:00000000 configuring
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7852   .bss.errorFlag:00000000 errorFlag
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8143   .bss.p3Size:00000000 p3Size
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8316   .data.profile3:00000000 profile3
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8025   .bss.p2Size:00000000 p2Size
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8309   .data.profile2:00000000 profile2
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7907   .bss.p1Size:00000000 p1Size
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8302   .data.profile1:00000000 profile1
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7839   .bss.effectCount:00000000 effectCount
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 235


C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8267   .bss.profile:00000000 profile
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8288   .bss.wah:00000000 wah
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7894   .bss.knob3:00000000 knob3
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7887   .bss.knob2:00000000 knob2
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7880   .bss.knob1:00000000 knob1
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8328   .data.start2:00000000 start2
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8322   .data.start:00000000 start
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8220   .bss.p3ftone:00000000 p3ftone
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8227   .bss.p3fuzz:00000000 p3fuzz
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8192   .bss.p3fingain:00000000 p3fingain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8102   .bss.p2ftone:00000000 p2ftone
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8109   .bss.p2fuzz:00000000 p2fuzz
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8074   .bss.p2fingain:00000000 p2fingain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7984   .bss.p1ftone:00000000 p1ftone
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7991   .bss.p1fuzz:00000000 p1fuzz
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7956   .bss.p1fingain:00000000 p1fingain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8185   .bss.p3dtone:00000000 p3dtone
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8178   .bss.p3doutgain:00000000 p3doutgain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8171   .bss.p3dingain:00000000 p3dingain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8067   .bss.p2dtone:00000000 p2dtone
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8060   .bss.p2doutgain:00000000 p2doutgain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8053   .bss.p2dingain:00000000 p2dingain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7949   .bss.p1dtone:00000000 p1dtone
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7942   .bss.p1doutgain:00000000 p1doutgain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7935   .bss.p1dingain:00000000 p1dingain
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8241   .bss.p3phdepth:00000000 p3phdepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8234   .bss.p3phFreq:00000000 p3phFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8123   .bss.p2phdepth:00000000 p2phdepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8116   .bss.p2phFreq:00000000 p2phFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8005   .bss.p1phdepth:00000000 p1phdepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7998   .bss.p1phFreq:00000000 p1phFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8248   .bss.p3tremDepth:00000000 p3tremDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8255   .bss.p3tremFreq:00000000 p3tremFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8130   .bss.p2tremDepth:00000000 p2tremDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8137   .bss.p2tremFreq:00000000 p2tremFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8012   .bss.p1tremDepth:00000000 p1tremDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8019   .bss.p1tremFreq:00000000 p1tremFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8274   .bss.trem:00000000 trem
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7901   .bss.lp:00000000 lp
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7866   .bss.hp:00000000 hp
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8295   .bss.wahflt:00000000 wahflt
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8199   .bss.p3flDelay:00000000 p3flDelay
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8206   .bss.p3flDepth:00000000 p3flDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8213   .bss.p3flFreq:00000000 p3flFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8081   .bss.p2flDelay:00000000 p2flDelay
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8088   .bss.p2flDepth:00000000 p2flDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8095   .bss.p2flFreq:00000000 p2flFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7963   .bss.p1flDelay:00000000 p1flDelay
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7970   .bss.p1flDepth:00000000 p1flDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7977   .bss.p1flFreq:00000000 p1flFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7859   .bss.fl:00000000 fl
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8150   .bss.p3chDelay:00000000 p3chDelay
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8157   .bss.p3chDepth:00000000 p3chDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8164   .bss.p3chFreq:00000000 p3chFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8032   .bss.p2chDelay:00000000 p2chDelay
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8039   .bss.p2chDepth:00000000 p2chDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8046   .bss.p2chFreq:00000000 p2chFreq
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 236


C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7914   .bss.p1chDelay:00000000 p1chDelay
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7921   .bss.p1chDepth:00000000 p1chDepth
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7928   .bss.p1chFreq:00000000 p1chFreq
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7846   .bss.encoder:00000000 encoder
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8281   .bss.uart:00000000 uart
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7873   .bss.hw:00000000 hw
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7803   .bss.ch:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7813   .bss.configuring:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7815   .bss.del1:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7822   .bss.del2:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7829   .bss.del3:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7840   .bss.effectCount:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7842   .bss.encoder:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7853   .bss.errorFlag:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7855   .bss.fl:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7862   .bss.hp:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7869   .bss.hw:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7876   .bss.knob1:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7883   .bss.knob2:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7890   .bss.knob3:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7897   .bss.lp:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7908   .bss.p1Size:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7910   .bss.p1chDelay:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7917   .bss.p1chDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7924   .bss.p1chFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7931   .bss.p1dingain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7938   .bss.p1doutgain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7945   .bss.p1dtone:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7952   .bss.p1fingain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7959   .bss.p1flDelay:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7966   .bss.p1flDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7973   .bss.p1flFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7980   .bss.p1ftone:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7987   .bss.p1fuzz:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:7994   .bss.p1phFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8001   .bss.p1phdepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8008   .bss.p1tremDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8015   .bss.p1tremFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8026   .bss.p2Size:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8028   .bss.p2chDelay:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8035   .bss.p2chDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8042   .bss.p2chFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8049   .bss.p2dingain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8056   .bss.p2doutgain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8063   .bss.p2dtone:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8070   .bss.p2fingain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8077   .bss.p2flDelay:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8084   .bss.p2flDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8091   .bss.p2flFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8098   .bss.p2ftone:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8105   .bss.p2fuzz:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8112   .bss.p2phFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8119   .bss.p2phdepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8126   .bss.p2tremDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8133   .bss.p2tremFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8144   .bss.p3Size:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8146   .bss.p3chDelay:00000000 $d
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 237


C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8153   .bss.p3chDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8160   .bss.p3chFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8167   .bss.p3dingain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8174   .bss.p3doutgain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8181   .bss.p3dtone:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8188   .bss.p3fingain:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8195   .bss.p3flDelay:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8202   .bss.p3flDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8209   .bss.p3flFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8216   .bss.p3ftone:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8223   .bss.p3fuzz:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8230   .bss.p3phFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8237   .bss.p3phdepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8244   .bss.p3tremDepth:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8251   .bss.p3tremFreq:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8258   .bss.ph:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8268   .bss.profile:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8270   .bss.trem:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8277   .bss.uart:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8284   .bss.wah:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8291   .bss.wahflt:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8298   .data.profile1:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8305   .data.profile2:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8312   .data.profile3:00000000 $d
C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s:8331   .sdram_bss:00000000 $d
                           .group:00000000 _ZN5daisy7EncoderD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp6ChorusD5Ev
                           .group:00000000 _ZN7daisysp6PhaserD5Ev
                           .group:00000000 _ZN7daisysp7TremoloD5Ev
                           .group:00000000 _ZN7daisysp7FlangerD5Ev
                           .group:00000000 _ZN7daisysp9DelayLineIfLj96000EED5Ev
                           .group:00000000 _ZN7daisysp12LadderFilterC5Ev

UNDEFINED SYMBOLS
expf
exp
_ZN7daisysp12LadderFilter7SetFreqEf
_ZN7daisysp12LadderFilter7ProcessEf
coshf
sinhf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN7daisysp6Phaser7ProcessEf
_ZN7daisysp6Chorus7ProcessEf
_ZN7daisysp7Flanger7ProcessEf
_ZN7daisysp7Tremolo7ProcessEf
_ZN7daisysp7Flanger8SetDelayEf
_ZN7daisysp7Flanger11SetLfoDepthEf
_ZN7daisysp7Flanger10SetLfoFreqEf
_ZN7daisysp6Chorus8SetDelayEf
_ZN7daisysp6Chorus11SetLfoDepthEf
_ZN7daisysp6Chorus10SetLfoFreqEf
_ZN7daisysp7Tremolo8SetDepthEf
_ZN7daisysp7Tremolo7SetFreqEf
_ZN7daisysp6Phaser7SetFreqEf
_ZN7daisysp6Phaser10SetLfoFreqEf
_ZN7daisysp6Phaser11SetLfoDepthEf
ARM GAS  C:\Users\galla\AppData\Local\Temp\ccPx7zrr.s 			page 238


_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy11UartHandler16BlockingTransmitEPhjm
_ZN5daisy7Encoder8DebounceEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy6System5DelayEm
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN7daisysp6Chorus4InitEf
_ZN7daisysp7Flanger4InitEf
_ZN7daisysp7Tremolo4InitEf
_ZN7daisysp6Phaser4InitEf
_ZN7daisysp12LadderFilter4InitEf
_ZN7daisysp12LadderFilter6SetResEf
_ZN7daisysp12LadderFilter15SetPassbandGainEf
_ZN7daisysp12LadderFilter13SetInputDriveEf
memset
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy7Encoder4InitE12dsy_gpio_pinS1_S1_f
_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy6Switch8DebounceEv
__aeabi_atexit
__dso_handle
